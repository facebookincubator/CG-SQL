
#pragma once

#import <Foundation/Foundation.h>

#import <Test/TestFile.h>

NS_ASSUME_NONNULL_BEGIN

@class MBQWithResultSet;

static inline MBQWithResultSet *MBQWithResultSetFromCGCWithResultSet(CGCWithResultSetResultSetRef resultSet)
{
  return (__bridge MBQWithResultSet *)resultSet;
}

static inline CGCWithResultSetResultSetRef CGCWithResultSetFromMBQWithResultSet(MBQWithResultSet *resultSet)
{
  return (__bridge CGCWithResultSetResultSetRef)resultSet;
}

static inline int32_t MBQWithResultSetGetId(MBQWithResultSet *resultSet, int32_t row)
{
  CGCWithResultSetResultSetRef cResultSet = CGCWithResultSetFromMBQWithResultSet(resultSet);
  return CGCWithResultSetGetId(cResultSet, row);
}

static inline NSString *_Nullable MBQWithResultSetGetName(MBQWithResultSet *resultSet, int32_t row)
{
  CGCWithResultSetResultSetRef cResultSet = CGCWithResultSetFromMBQWithResultSet(resultSet);
  return (__bridge NSString *)CGCWithResultSetGetName(cResultSet, row);
}

static inline NSNumber *_Nullable MBQWithResultSetGetRate(MBQWithResultSet *resultSet, int32_t row)
{
  CGCWithResultSetResultSetRef cResultSet = CGCWithResultSetFromMBQWithResultSet(resultSet);
  return CGCWithResultSetGetRateIsNull(cResultSet, row) ? nil : @(CGCWithResultSetGetRateValue(cResultSet, row));
}

static inline NSNumber *_Nullable MBQWithResultSetGetType(MBQWithResultSet *resultSet, int32_t row)
{
  CGCWithResultSetResultSetRef cResultSet = CGCWithResultSetFromMBQWithResultSet(resultSet);
  return CGCWithResultSetGetTypeIsNull(cResultSet, row) ? nil : @(CGCWithResultSetGetTypeValue(cResultSet, row));
}

static inline NSNumber *_Nullable MBQWithResultSetGetSize(MBQWithResultSet *resultSet, int32_t row)
{
  CGCWithResultSetResultSetRef cResultSet = CGCWithResultSetFromMBQWithResultSet(resultSet);
  return CGCWithResultSetGetSizeIsNull(cResultSet, row) ? nil : @(CGCWithResultSetGetSizeValue(cResultSet, row));
}

static inline int32_t MBQWithResultSetResultCount(MBQWithResultSet *resultSet)
{
  return CGCWithResultSetResultCount(CGCWithResultSetFromMBQWithResultSet(resultSet));
}

static inline MBQWithResultSet *MBQWithResultSetCopy(MBQWithResultSet *resultSet, int32_t from, int32_t count)
{
  CGCWithResultSetResultSetRef copy;
  CGCWithResultSetCopy(CGCWithResultSetFromMBQWithResultSet(resultSet), &copy, from, count);
  return (__bridge_transfer MBQWithResultSet *)copy;
}

static inline NSUInteger MBQWithResultSetRowHash(MBQWithResultSet *resultSet, int32_t row)
{
  return CGCWithResultSetRowHash(CGCWithResultSetFromMBQWithResultSet(resultSet), row);
}

static inline BOOL MBQWithResultSetRowEqual(MBQWithResultSet *resultSet1, int32_t row1, MBQWithResultSet *resultSet2, int32_t row2)
{
  return CGCWithResultSetRowEqual(CGCWithResultSetFromMBQWithResultSet(resultSet1), row1, CGCWithResultSetFromMBQWithResultSet(resultSet2), row2);
}

@class MBQSelectFromView;

static inline MBQSelectFromView *MBQSelectFromViewFromCGCSelectFromView(CGCSelectFromViewResultSetRef resultSet)
{
  return (__bridge MBQSelectFromView *)resultSet;
}

static inline CGCSelectFromViewResultSetRef CGCSelectFromViewFromMBQSelectFromView(MBQSelectFromView *resultSet)
{
  return (__bridge CGCSelectFromViewResultSetRef)resultSet;
}

static inline int32_t MBQSelectFromViewGetId(MBQSelectFromView *resultSet, int32_t row)
{
  CGCSelectFromViewResultSetRef cResultSet = CGCSelectFromViewFromMBQSelectFromView(resultSet);
  return CGCSelectFromViewGetId(cResultSet, row);
}

static inline NSNumber *_Nullable MBQSelectFromViewGetType(MBQSelectFromView *resultSet, int32_t row)
{
  CGCSelectFromViewResultSetRef cResultSet = CGCSelectFromViewFromMBQSelectFromView(resultSet);
  return CGCSelectFromViewGetTypeIsNull(cResultSet, row) ? nil : @(CGCSelectFromViewGetTypeValue(cResultSet, row));
}

static inline int32_t MBQSelectFromViewResultCount(MBQSelectFromView *resultSet)
{
  return CGCSelectFromViewResultCount(CGCSelectFromViewFromMBQSelectFromView(resultSet));
}

static inline MBQSelectFromView *MBQSelectFromViewCopy(MBQSelectFromView *resultSet, int32_t from, int32_t count)
{
  CGCSelectFromViewResultSetRef copy;
  CGCSelectFromViewCopy(CGCSelectFromViewFromMBQSelectFromView(resultSet), &copy, from, count);
  return (__bridge_transfer MBQSelectFromView *)copy;
}

static inline NSUInteger MBQSelectFromViewRowHash(MBQSelectFromView *resultSet, int32_t row)
{
  return CGCSelectFromViewRowHash(CGCSelectFromViewFromMBQSelectFromView(resultSet), row);
}

static inline BOOL MBQSelectFromViewRowEqual(MBQSelectFromView *resultSet1, int32_t row1, MBQSelectFromView *resultSet2, int32_t row2)
{
  return CGCSelectFromViewRowEqual(CGCSelectFromViewFromMBQSelectFromView(resultSet1), row1, CGCSelectFromViewFromMBQSelectFromView(resultSet2), row2);
}

@class MBQGetData;

static inline MBQGetData *MBQGetDataFromCGCGetData(CGCGetDataResultSetRef resultSet)
{
  return (__bridge MBQGetData *)resultSet;
}

static inline CGCGetDataResultSetRef CGCGetDataFromMBQGetData(MBQGetData *resultSet)
{
  return (__bridge CGCGetDataResultSetRef)resultSet;
}

static inline int32_t MBQGetDataGetId(MBQGetData *resultSet, int32_t row)
{
  CGCGetDataResultSetRef cResultSet = CGCGetDataFromMBQGetData(resultSet);
  return CGCGetDataGetId(cResultSet, row);
}

static inline NSString *_Nullable MBQGetDataGetName(MBQGetData *resultSet, int32_t row)
{
  CGCGetDataResultSetRef cResultSet = CGCGetDataFromMBQGetData(resultSet);
  return (__bridge NSString *)CGCGetDataGetName(cResultSet, row);
}

static inline NSNumber *_Nullable MBQGetDataGetRate(MBQGetData *resultSet, int32_t row)
{
  CGCGetDataResultSetRef cResultSet = CGCGetDataFromMBQGetData(resultSet);
  return CGCGetDataGetRateIsNull(cResultSet, row) ? nil : @(CGCGetDataGetRateValue(cResultSet, row));
}

static inline NSNumber *_Nullable MBQGetDataGetType(MBQGetData *resultSet, int32_t row)
{
  CGCGetDataResultSetRef cResultSet = CGCGetDataFromMBQGetData(resultSet);
  return CGCGetDataGetTypeIsNull(cResultSet, row) ? nil : @(CGCGetDataGetTypeValue(cResultSet, row));
}

static inline NSNumber *_Nullable MBQGetDataGetSize(MBQGetData *resultSet, int32_t row)
{
  CGCGetDataResultSetRef cResultSet = CGCGetDataFromMBQGetData(resultSet);
  return CGCGetDataGetSizeIsNull(cResultSet, row) ? nil : @(CGCGetDataGetSizeValue(cResultSet, row));
}

static inline int32_t MBQGetDataResultCount(MBQGetData *resultSet)
{
  return CGCGetDataResultCount(CGCGetDataFromMBQGetData(resultSet));
}

static inline MBQGetData *MBQGetDataCopy(MBQGetData *resultSet, int32_t from, int32_t count)
{
  CGCGetDataResultSetRef copy;
  CGCGetDataCopy(CGCGetDataFromMBQGetData(resultSet), &copy, from, count);
  return (__bridge_transfer MBQGetData *)copy;
}

static inline NSUInteger MBQGetDataRowHash(MBQGetData *resultSet, int32_t row)
{
  return CGCGetDataRowHash(CGCGetDataFromMBQGetData(resultSet), row);
}

static inline BOOL MBQGetDataRowEqual(MBQGetData *resultSet1, int32_t row1, MBQGetData *resultSet2, int32_t row2)
{
  return CGCGetDataRowEqual(CGCGetDataFromMBQGetData(resultSet1), row1, CGCGetDataFromMBQGetData(resultSet2), row2);
}

@class MBQComplexReturn;

static inline MBQComplexReturn *MBQComplexReturnFromCGCComplexReturn(CGCComplexReturnResultSetRef resultSet)
{
  return (__bridge MBQComplexReturn *)resultSet;
}

static inline CGCComplexReturnResultSetRef CGCComplexReturnFromMBQComplexReturn(MBQComplexReturn *resultSet)
{
  return (__bridge CGCComplexReturnResultSetRef)resultSet;
}

static inline BOOL MBQComplexReturnGetBool(MBQComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromMBQComplexReturn(resultSet);
  return CGCComplexReturnGetBool(cResultSet, row) ? YES : NO;
}

static inline int32_t MBQComplexReturnGetInteger(MBQComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromMBQComplexReturn(resultSet);
  return CGCComplexReturnGetInteger(cResultSet, row);
}

static inline int64_t MBQComplexReturnGetLongint(MBQComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromMBQComplexReturn(resultSet);
  return CGCComplexReturnGetLongint(cResultSet, row);
}

static inline double MBQComplexReturnGetReal(MBQComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromMBQComplexReturn(resultSet);
  return CGCComplexReturnGetReal(cResultSet, row);
}

static inline NSString *MBQComplexReturnGetText(MBQComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromMBQComplexReturn(resultSet);
  return (__bridge NSString *)CGCComplexReturnGetText(cResultSet, row);
}

static inline NSNumber *_Nullable MBQComplexReturnGetNullableBool(MBQComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromMBQComplexReturn(resultSet);
  return CGCComplexReturnGetNullableBoolIsNull(cResultSet, row) ? nil : @(CGCComplexReturnGetNullableBoolValue(cResultSet, row));
}

static inline int32_t MBQComplexReturnResultCount(MBQComplexReturn *resultSet)
{
  return CGCComplexReturnResultCount(CGCComplexReturnFromMBQComplexReturn(resultSet));
}

static inline MBQComplexReturn *MBQComplexReturnCopy(MBQComplexReturn *resultSet, int32_t from, int32_t count)
{
  CGCComplexReturnResultSetRef copy;
  CGCComplexReturnCopy(CGCComplexReturnFromMBQComplexReturn(resultSet), &copy, from, count);
  return (__bridge_transfer MBQComplexReturn *)copy;
}

static inline NSUInteger MBQComplexReturnRowHash(MBQComplexReturn *resultSet, int32_t row)
{
  return CGCComplexReturnRowHash(CGCComplexReturnFromMBQComplexReturn(resultSet), row);
}

static inline BOOL MBQComplexReturnRowEqual(MBQComplexReturn *resultSet1, int32_t row1, MBQComplexReturn *resultSet2, int32_t row2)
{
  return CGCComplexReturnRowEqual(CGCComplexReturnFromMBQComplexReturn(resultSet1), row1, CGCComplexReturnFromMBQComplexReturn(resultSet2), row2);
}

@class MBQHierarchicalQuery;

static inline MBQHierarchicalQuery *MBQHierarchicalQueryFromCGCHierarchicalQuery(CGCHierarchicalQueryResultSetRef resultSet)
{
  return (__bridge MBQHierarchicalQuery *)resultSet;
}

static inline CGCHierarchicalQueryResultSetRef CGCHierarchicalQueryFromMBQHierarchicalQuery(MBQHierarchicalQuery *resultSet)
{
  return (__bridge CGCHierarchicalQueryResultSetRef)resultSet;
}

static inline int32_t MBQHierarchicalQueryGetId(MBQHierarchicalQuery *resultSet, int32_t row)
{
  CGCHierarchicalQueryResultSetRef cResultSet = CGCHierarchicalQueryFromMBQHierarchicalQuery(resultSet);
  return CGCHierarchicalQueryGetId(cResultSet, row);
}

static inline int32_t MBQHierarchicalQueryResultCount(MBQHierarchicalQuery *resultSet)
{
  return CGCHierarchicalQueryResultCount(CGCHierarchicalQueryFromMBQHierarchicalQuery(resultSet));
}

static inline MBQHierarchicalQuery *MBQHierarchicalQueryCopy(MBQHierarchicalQuery *resultSet, int32_t from, int32_t count)
{
  CGCHierarchicalQueryResultSetRef copy;
  CGCHierarchicalQueryCopy(CGCHierarchicalQueryFromMBQHierarchicalQuery(resultSet), &copy, from, count);
  return (__bridge_transfer MBQHierarchicalQuery *)copy;
}

static inline NSUInteger MBQHierarchicalQueryRowHash(MBQHierarchicalQuery *resultSet, int32_t row)
{
  return CGCHierarchicalQueryRowHash(CGCHierarchicalQueryFromMBQHierarchicalQuery(resultSet), row);
}

static inline BOOL MBQHierarchicalQueryRowEqual(MBQHierarchicalQuery *resultSet1, int32_t row1, MBQHierarchicalQuery *resultSet2, int32_t row2)
{
  return CGCHierarchicalQueryRowEqual(CGCHierarchicalQueryFromMBQHierarchicalQuery(resultSet1), row1, CGCHierarchicalQueryFromMBQHierarchicalQuery(resultSet2), row2);
}

@class MBQHierarchicalUnmatchedQuery;

static inline MBQHierarchicalUnmatchedQuery *MBQHierarchicalUnmatchedQueryFromCGCHierarchicalUnmatchedQuery(CGCHierarchicalUnmatchedQueryResultSetRef resultSet)
{
  return (__bridge MBQHierarchicalUnmatchedQuery *)resultSet;
}

static inline CGCHierarchicalUnmatchedQueryResultSetRef CGCHierarchicalUnmatchedQueryFromMBQHierarchicalUnmatchedQuery(MBQHierarchicalUnmatchedQuery *resultSet)
{
  return (__bridge CGCHierarchicalUnmatchedQueryResultSetRef)resultSet;
}

static inline int32_t MBQHierarchicalUnmatchedQueryGetId(MBQHierarchicalUnmatchedQuery *resultSet, int32_t row)
{
  CGCHierarchicalUnmatchedQueryResultSetRef cResultSet = CGCHierarchicalUnmatchedQueryFromMBQHierarchicalUnmatchedQuery(resultSet);
  return CGCHierarchicalUnmatchedQueryGetId(cResultSet, row);
}

static inline int32_t MBQHierarchicalUnmatchedQueryResultCount(MBQHierarchicalUnmatchedQuery *resultSet)
{
  return CGCHierarchicalUnmatchedQueryResultCount(CGCHierarchicalUnmatchedQueryFromMBQHierarchicalUnmatchedQuery(resultSet));
}

static inline MBQHierarchicalUnmatchedQuery *MBQHierarchicalUnmatchedQueryCopy(MBQHierarchicalUnmatchedQuery *resultSet, int32_t from, int32_t count)
{
  CGCHierarchicalUnmatchedQueryResultSetRef copy;
  CGCHierarchicalUnmatchedQueryCopy(CGCHierarchicalUnmatchedQueryFromMBQHierarchicalUnmatchedQuery(resultSet), &copy, from, count);
  return (__bridge_transfer MBQHierarchicalUnmatchedQuery *)copy;
}

static inline NSUInteger MBQHierarchicalUnmatchedQueryRowHash(MBQHierarchicalUnmatchedQuery *resultSet, int32_t row)
{
  return CGCHierarchicalUnmatchedQueryRowHash(CGCHierarchicalUnmatchedQueryFromMBQHierarchicalUnmatchedQuery(resultSet), row);
}

static inline BOOL MBQHierarchicalUnmatchedQueryRowEqual(MBQHierarchicalUnmatchedQuery *resultSet1, int32_t row1, MBQHierarchicalUnmatchedQuery *resultSet2, int32_t row2)
{
  return CGCHierarchicalUnmatchedQueryRowEqual(CGCHierarchicalUnmatchedQueryFromMBQHierarchicalUnmatchedQuery(resultSet1), row1, CGCHierarchicalUnmatchedQueryFromMBQHierarchicalUnmatchedQuery(resultSet2), row2);
}

@class MBQUnionSelect;

static inline MBQUnionSelect *MBQUnionSelectFromCGCUnionSelect(CGCUnionSelectResultSetRef resultSet)
{
  return (__bridge MBQUnionSelect *)resultSet;
}

static inline CGCUnionSelectResultSetRef CGCUnionSelectFromMBQUnionSelect(MBQUnionSelect *resultSet)
{
  return (__bridge CGCUnionSelectResultSetRef)resultSet;
}

static inline int32_t MBQUnionSelectGetA(MBQUnionSelect *resultSet, int32_t row)
{
  CGCUnionSelectResultSetRef cResultSet = CGCUnionSelectFromMBQUnionSelect(resultSet);
  return CGCUnionSelectGetA(cResultSet, row);
}

static inline int32_t MBQUnionSelectResultCount(MBQUnionSelect *resultSet)
{
  return CGCUnionSelectResultCount(CGCUnionSelectFromMBQUnionSelect(resultSet));
}

static inline MBQUnionSelect *MBQUnionSelectCopy(MBQUnionSelect *resultSet, int32_t from, int32_t count)
{
  CGCUnionSelectResultSetRef copy;
  CGCUnionSelectCopy(CGCUnionSelectFromMBQUnionSelect(resultSet), &copy, from, count);
  return (__bridge_transfer MBQUnionSelect *)copy;
}

static inline NSUInteger MBQUnionSelectRowHash(MBQUnionSelect *resultSet, int32_t row)
{
  return CGCUnionSelectRowHash(CGCUnionSelectFromMBQUnionSelect(resultSet), row);
}

static inline BOOL MBQUnionSelectRowEqual(MBQUnionSelect *resultSet1, int32_t row1, MBQUnionSelect *resultSet2, int32_t row2)
{
  return CGCUnionSelectRowEqual(CGCUnionSelectFromMBQUnionSelect(resultSet1), row1, CGCUnionSelectFromMBQUnionSelect(resultSet2), row2);
}

@class MBQUnionAllSelect;

static inline MBQUnionAllSelect *MBQUnionAllSelectFromCGCUnionAllSelect(CGCUnionAllSelectResultSetRef resultSet)
{
  return (__bridge MBQUnionAllSelect *)resultSet;
}

static inline CGCUnionAllSelectResultSetRef CGCUnionAllSelectFromMBQUnionAllSelect(MBQUnionAllSelect *resultSet)
{
  return (__bridge CGCUnionAllSelectResultSetRef)resultSet;
}

static inline int32_t MBQUnionAllSelectGetA(MBQUnionAllSelect *resultSet, int32_t row)
{
  CGCUnionAllSelectResultSetRef cResultSet = CGCUnionAllSelectFromMBQUnionAllSelect(resultSet);
  return CGCUnionAllSelectGetA(cResultSet, row);
}

static inline int32_t MBQUnionAllSelectResultCount(MBQUnionAllSelect *resultSet)
{
  return CGCUnionAllSelectResultCount(CGCUnionAllSelectFromMBQUnionAllSelect(resultSet));
}

static inline MBQUnionAllSelect *MBQUnionAllSelectCopy(MBQUnionAllSelect *resultSet, int32_t from, int32_t count)
{
  CGCUnionAllSelectResultSetRef copy;
  CGCUnionAllSelectCopy(CGCUnionAllSelectFromMBQUnionAllSelect(resultSet), &copy, from, count);
  return (__bridge_transfer MBQUnionAllSelect *)copy;
}

static inline NSUInteger MBQUnionAllSelectRowHash(MBQUnionAllSelect *resultSet, int32_t row)
{
  return CGCUnionAllSelectRowHash(CGCUnionAllSelectFromMBQUnionAllSelect(resultSet), row);
}

static inline BOOL MBQUnionAllSelectRowEqual(MBQUnionAllSelect *resultSet1, int32_t row1, MBQUnionAllSelect *resultSet2, int32_t row2)
{
  return CGCUnionAllSelectRowEqual(CGCUnionAllSelectFromMBQUnionAllSelect(resultSet1), row1, CGCUnionAllSelectFromMBQUnionAllSelect(resultSet2), row2);
}

@class MBQUnionAllWithNullable;

static inline MBQUnionAllWithNullable *MBQUnionAllWithNullableFromCGCUnionAllWithNullable(CGCUnionAllWithNullableResultSetRef resultSet)
{
  return (__bridge MBQUnionAllWithNullable *)resultSet;
}

static inline CGCUnionAllWithNullableResultSetRef CGCUnionAllWithNullableFromMBQUnionAllWithNullable(MBQUnionAllWithNullable *resultSet)
{
  return (__bridge CGCUnionAllWithNullableResultSetRef)resultSet;
}

static inline NSString *_Nullable MBQUnionAllWithNullableGetName(MBQUnionAllWithNullable *resultSet, int32_t row)
{
  CGCUnionAllWithNullableResultSetRef cResultSet = CGCUnionAllWithNullableFromMBQUnionAllWithNullable(resultSet);
  return (__bridge NSString *)CGCUnionAllWithNullableGetName(cResultSet, row);
}

static inline int32_t MBQUnionAllWithNullableResultCount(MBQUnionAllWithNullable *resultSet)
{
  return CGCUnionAllWithNullableResultCount(CGCUnionAllWithNullableFromMBQUnionAllWithNullable(resultSet));
}

static inline MBQUnionAllWithNullable *MBQUnionAllWithNullableCopy(MBQUnionAllWithNullable *resultSet, int32_t from, int32_t count)
{
  CGCUnionAllWithNullableResultSetRef copy;
  CGCUnionAllWithNullableCopy(CGCUnionAllWithNullableFromMBQUnionAllWithNullable(resultSet), &copy, from, count);
  return (__bridge_transfer MBQUnionAllWithNullable *)copy;
}

static inline NSUInteger MBQUnionAllWithNullableRowHash(MBQUnionAllWithNullable *resultSet, int32_t row)
{
  return CGCUnionAllWithNullableRowHash(CGCUnionAllWithNullableFromMBQUnionAllWithNullable(resultSet), row);
}

static inline BOOL MBQUnionAllWithNullableRowEqual(MBQUnionAllWithNullable *resultSet1, int32_t row1, MBQUnionAllWithNullable *resultSet2, int32_t row2)
{
  return CGCUnionAllWithNullableRowEqual(CGCUnionAllWithNullableFromMBQUnionAllWithNullable(resultSet1), row1, CGCUnionAllWithNullableFromMBQUnionAllWithNullable(resultSet2), row2);
}

@class MBQWithStmt;

static inline MBQWithStmt *MBQWithStmtFromCGCWithStmt(CGCWithStmtResultSetRef resultSet)
{
  return (__bridge MBQWithStmt *)resultSet;
}

static inline CGCWithStmtResultSetRef CGCWithStmtFromMBQWithStmt(MBQWithStmt *resultSet)
{
  return (__bridge CGCWithStmtResultSetRef)resultSet;
}

static inline int32_t MBQWithStmtGetA(MBQWithStmt *resultSet, int32_t row)
{
  CGCWithStmtResultSetRef cResultSet = CGCWithStmtFromMBQWithStmt(resultSet);
  return CGCWithStmtGetA(cResultSet, row);
}

static inline int32_t MBQWithStmtGetB(MBQWithStmt *resultSet, int32_t row)
{
  CGCWithStmtResultSetRef cResultSet = CGCWithStmtFromMBQWithStmt(resultSet);
  return CGCWithStmtGetB(cResultSet, row);
}

static inline int32_t MBQWithStmtGetC(MBQWithStmt *resultSet, int32_t row)
{
  CGCWithStmtResultSetRef cResultSet = CGCWithStmtFromMBQWithStmt(resultSet);
  return CGCWithStmtGetC(cResultSet, row);
}

static inline int32_t MBQWithStmtResultCount(MBQWithStmt *resultSet)
{
  return CGCWithStmtResultCount(CGCWithStmtFromMBQWithStmt(resultSet));
}

static inline MBQWithStmt *MBQWithStmtCopy(MBQWithStmt *resultSet, int32_t from, int32_t count)
{
  CGCWithStmtResultSetRef copy;
  CGCWithStmtCopy(CGCWithStmtFromMBQWithStmt(resultSet), &copy, from, count);
  return (__bridge_transfer MBQWithStmt *)copy;
}

static inline NSUInteger MBQWithStmtRowHash(MBQWithStmt *resultSet, int32_t row)
{
  return CGCWithStmtRowHash(CGCWithStmtFromMBQWithStmt(resultSet), row);
}

static inline BOOL MBQWithStmtRowEqual(MBQWithStmt *resultSet1, int32_t row1, MBQWithStmt *resultSet2, int32_t row2)
{
  return CGCWithStmtRowEqual(CGCWithStmtFromMBQWithStmt(resultSet1), row1, CGCWithStmtFromMBQWithStmt(resultSet2), row2);
}

@class MBQWithRecursiveStmt;

static inline MBQWithRecursiveStmt *MBQWithRecursiveStmtFromCGCWithRecursiveStmt(CGCWithRecursiveStmtResultSetRef resultSet)
{
  return (__bridge MBQWithRecursiveStmt *)resultSet;
}

static inline CGCWithRecursiveStmtResultSetRef CGCWithRecursiveStmtFromMBQWithRecursiveStmt(MBQWithRecursiveStmt *resultSet)
{
  return (__bridge CGCWithRecursiveStmtResultSetRef)resultSet;
}

static inline int32_t MBQWithRecursiveStmtGetA(MBQWithRecursiveStmt *resultSet, int32_t row)
{
  CGCWithRecursiveStmtResultSetRef cResultSet = CGCWithRecursiveStmtFromMBQWithRecursiveStmt(resultSet);
  return CGCWithRecursiveStmtGetA(cResultSet, row);
}

static inline int32_t MBQWithRecursiveStmtGetB(MBQWithRecursiveStmt *resultSet, int32_t row)
{
  CGCWithRecursiveStmtResultSetRef cResultSet = CGCWithRecursiveStmtFromMBQWithRecursiveStmt(resultSet);
  return CGCWithRecursiveStmtGetB(cResultSet, row);
}

static inline int32_t MBQWithRecursiveStmtGetC(MBQWithRecursiveStmt *resultSet, int32_t row)
{
  CGCWithRecursiveStmtResultSetRef cResultSet = CGCWithRecursiveStmtFromMBQWithRecursiveStmt(resultSet);
  return CGCWithRecursiveStmtGetC(cResultSet, row);
}

static inline int32_t MBQWithRecursiveStmtResultCount(MBQWithRecursiveStmt *resultSet)
{
  return CGCWithRecursiveStmtResultCount(CGCWithRecursiveStmtFromMBQWithRecursiveStmt(resultSet));
}

static inline MBQWithRecursiveStmt *MBQWithRecursiveStmtCopy(MBQWithRecursiveStmt *resultSet, int32_t from, int32_t count)
{
  CGCWithRecursiveStmtResultSetRef copy;
  CGCWithRecursiveStmtCopy(CGCWithRecursiveStmtFromMBQWithRecursiveStmt(resultSet), &copy, from, count);
  return (__bridge_transfer MBQWithRecursiveStmt *)copy;
}

static inline NSUInteger MBQWithRecursiveStmtRowHash(MBQWithRecursiveStmt *resultSet, int32_t row)
{
  return CGCWithRecursiveStmtRowHash(CGCWithRecursiveStmtFromMBQWithRecursiveStmt(resultSet), row);
}

static inline BOOL MBQWithRecursiveStmtRowEqual(MBQWithRecursiveStmt *resultSet1, int32_t row1, MBQWithRecursiveStmt *resultSet2, int32_t row2)
{
  return CGCWithRecursiveStmtRowEqual(CGCWithRecursiveStmtFromMBQWithRecursiveStmt(resultSet1), row1, CGCWithRecursiveStmtFromMBQWithRecursiveStmt(resultSet2), row2);
}

@class MBQParentProc;

static inline MBQParentProc *MBQParentProcFromCGCParentProc(CGCParentProcResultSetRef resultSet)
{
  return (__bridge MBQParentProc *)resultSet;
}

static inline CGCParentProcResultSetRef CGCParentProcFromMBQParentProc(MBQParentProc *resultSet)
{
  return (__bridge CGCParentProcResultSetRef)resultSet;
}

static inline int32_t MBQParentProcGetOne(MBQParentProc *resultSet, int32_t row)
{
  CGCParentProcResultSetRef cResultSet = CGCParentProcFromMBQParentProc(resultSet);
  return CGCParentProcGetOne(cResultSet, row);
}

static inline int32_t MBQParentProcGetTwo(MBQParentProc *resultSet, int32_t row)
{
  CGCParentProcResultSetRef cResultSet = CGCParentProcFromMBQParentProc(resultSet);
  return CGCParentProcGetTwo(cResultSet, row);
}

static inline int32_t MBQParentProcGetThree(MBQParentProc *resultSet, int32_t row)
{
  CGCParentProcResultSetRef cResultSet = CGCParentProcFromMBQParentProc(resultSet);
  return CGCParentProcGetThree(cResultSet, row);
}

static inline int32_t MBQParentProcResultCount(MBQParentProc *resultSet)
{
  return CGCParentProcResultCount(CGCParentProcFromMBQParentProc(resultSet));
}

static inline MBQParentProc *MBQParentProcCopy(MBQParentProc *resultSet, int32_t from, int32_t count)
{
  CGCParentProcResultSetRef copy;
  CGCParentProcCopy(CGCParentProcFromMBQParentProc(resultSet), &copy, from, count);
  return (__bridge_transfer MBQParentProc *)copy;
}

static inline NSUInteger MBQParentProcRowHash(MBQParentProc *resultSet, int32_t row)
{
  return CGCParentProcRowHash(CGCParentProcFromMBQParentProc(resultSet), row);
}

static inline BOOL MBQParentProcRowEqual(MBQParentProc *resultSet1, int32_t row1, MBQParentProc *resultSet2, int32_t row2)
{
  return CGCParentProcRowEqual(CGCParentProcFromMBQParentProc(resultSet1), row1, CGCParentProcFromMBQParentProc(resultSet2), row2);
}

@class MBQParentProcChild;

static inline MBQParentProcChild *MBQParentProcChildFromCGCParentProcChild(CGCParentProcChildResultSetRef resultSet)
{
  return (__bridge MBQParentProcChild *)resultSet;
}

static inline CGCParentProcChildResultSetRef CGCParentProcChildFromMBQParentProcChild(MBQParentProcChild *resultSet)
{
  return (__bridge CGCParentProcChildResultSetRef)resultSet;
}

static inline int32_t MBQParentProcChildGetFour(MBQParentProcChild *resultSet, int32_t row)
{
  CGCParentProcChildResultSetRef cResultSet = CGCParentProcChildFromMBQParentProcChild(resultSet);
  return CGCParentProcChildGetFour(cResultSet, row);
}

static inline int32_t MBQParentProcChildGetFive(MBQParentProcChild *resultSet, int32_t row)
{
  CGCParentProcChildResultSetRef cResultSet = CGCParentProcChildFromMBQParentProcChild(resultSet);
  return CGCParentProcChildGetFive(cResultSet, row);
}

static inline int32_t MBQParentProcChildGetSix(MBQParentProcChild *resultSet, int32_t row)
{
  CGCParentProcChildResultSetRef cResultSet = CGCParentProcChildFromMBQParentProcChild(resultSet);
  return CGCParentProcChildGetSix(cResultSet, row);
}

static inline int32_t MBQParentProcChildResultCount(MBQParentProcChild *resultSet)
{
  return CGCParentProcChildResultCount(CGCParentProcChildFromMBQParentProcChild(resultSet));
}

static inline MBQParentProcChild *MBQParentProcChildCopy(MBQParentProcChild *resultSet, int32_t from, int32_t count)
{
  CGCParentProcChildResultSetRef copy;
  CGCParentProcChildCopy(CGCParentProcChildFromMBQParentProcChild(resultSet), &copy, from, count);
  return (__bridge_transfer MBQParentProcChild *)copy;
}

static inline NSUInteger MBQParentProcChildRowHash(MBQParentProcChild *resultSet, int32_t row)
{
  return CGCParentProcChildRowHash(CGCParentProcChildFromMBQParentProcChild(resultSet), row);
}

static inline BOOL MBQParentProcChildRowEqual(MBQParentProcChild *resultSet1, int32_t row1, MBQParentProcChild *resultSet2, int32_t row2)
{
  return CGCParentProcChildRowEqual(CGCParentProcChildFromMBQParentProcChild(resultSet1), row1, CGCParentProcChildFromMBQParentProcChild(resultSet2), row2);
}

@class MBQUsesProcForResult;

static inline MBQUsesProcForResult *MBQUsesProcForResultFromCGCUsesProcForResult(CGCUsesProcForResultResultSetRef resultSet)
{
  return (__bridge MBQUsesProcForResult *)resultSet;
}

static inline CGCUsesProcForResultResultSetRef CGCUsesProcForResultFromMBQUsesProcForResult(MBQUsesProcForResult *resultSet)
{
  return (__bridge CGCUsesProcForResultResultSetRef)resultSet;
}

static inline int32_t MBQUsesProcForResultGetId(MBQUsesProcForResult *resultSet, int32_t row)
{
  CGCUsesProcForResultResultSetRef cResultSet = CGCUsesProcForResultFromMBQUsesProcForResult(resultSet);
  return CGCUsesProcForResultGetId(cResultSet, row);
}

static inline NSString *_Nullable MBQUsesProcForResultGetName(MBQUsesProcForResult *resultSet, int32_t row)
{
  CGCUsesProcForResultResultSetRef cResultSet = CGCUsesProcForResultFromMBQUsesProcForResult(resultSet);
  return (__bridge NSString *)CGCUsesProcForResultGetName(cResultSet, row);
}

static inline NSNumber *_Nullable MBQUsesProcForResultGetRate(MBQUsesProcForResult *resultSet, int32_t row)
{
  CGCUsesProcForResultResultSetRef cResultSet = CGCUsesProcForResultFromMBQUsesProcForResult(resultSet);
  return CGCUsesProcForResultGetRateIsNull(cResultSet, row) ? nil : @(CGCUsesProcForResultGetRateValue(cResultSet, row));
}

static inline NSNumber *_Nullable MBQUsesProcForResultGetType(MBQUsesProcForResult *resultSet, int32_t row)
{
  CGCUsesProcForResultResultSetRef cResultSet = CGCUsesProcForResultFromMBQUsesProcForResult(resultSet);
  return CGCUsesProcForResultGetTypeIsNull(cResultSet, row) ? nil : @(CGCUsesProcForResultGetTypeValue(cResultSet, row));
}

static inline NSNumber *_Nullable MBQUsesProcForResultGetSize(MBQUsesProcForResult *resultSet, int32_t row)
{
  CGCUsesProcForResultResultSetRef cResultSet = CGCUsesProcForResultFromMBQUsesProcForResult(resultSet);
  return CGCUsesProcForResultGetSizeIsNull(cResultSet, row) ? nil : @(CGCUsesProcForResultGetSizeValue(cResultSet, row));
}

static inline int32_t MBQUsesProcForResultResultCount(MBQUsesProcForResult *resultSet)
{
  return CGCUsesProcForResultResultCount(CGCUsesProcForResultFromMBQUsesProcForResult(resultSet));
}

static inline MBQUsesProcForResult *MBQUsesProcForResultCopy(MBQUsesProcForResult *resultSet, int32_t from, int32_t count)
{
  CGCUsesProcForResultResultSetRef copy;
  CGCUsesProcForResultCopy(CGCUsesProcForResultFromMBQUsesProcForResult(resultSet), &copy, from, count);
  return (__bridge_transfer MBQUsesProcForResult *)copy;
}

static inline NSUInteger MBQUsesProcForResultRowHash(MBQUsesProcForResult *resultSet, int32_t row)
{
  return CGCUsesProcForResultRowHash(CGCUsesProcForResultFromMBQUsesProcForResult(resultSet), row);
}

static inline BOOL MBQUsesProcForResultRowEqual(MBQUsesProcForResult *resultSet1, int32_t row1, MBQUsesProcForResult *resultSet2, int32_t row2)
{
  return CGCUsesProcForResultRowEqual(CGCUsesProcForResultFromMBQUsesProcForResult(resultSet1), row1, CGCUsesProcForResultFromMBQUsesProcForResult(resultSet2), row2);
}

@class MBQBlobReturner;

static inline MBQBlobReturner *MBQBlobReturnerFromCGCBlobReturner(CGCBlobReturnerResultSetRef resultSet)
{
  return (__bridge MBQBlobReturner *)resultSet;
}

static inline CGCBlobReturnerResultSetRef CGCBlobReturnerFromMBQBlobReturner(MBQBlobReturner *resultSet)
{
  return (__bridge CGCBlobReturnerResultSetRef)resultSet;
}

static inline int32_t MBQBlobReturnerGetBlobId(MBQBlobReturner *resultSet, int32_t row)
{
  CGCBlobReturnerResultSetRef cResultSet = CGCBlobReturnerFromMBQBlobReturner(resultSet);
  return CGCBlobReturnerGetBlobId(cResultSet, row);
}

static inline NSData *MBQBlobReturnerGetBNotnull(MBQBlobReturner *resultSet, int32_t row)
{
  CGCBlobReturnerResultSetRef cResultSet = CGCBlobReturnerFromMBQBlobReturner(resultSet);
  return (__bridge NSData *)CGCBlobReturnerGetBNotnull(cResultSet, row);
}

static inline NSData *_Nullable MBQBlobReturnerGetBNullable(MBQBlobReturner *resultSet, int32_t row)
{
  CGCBlobReturnerResultSetRef cResultSet = CGCBlobReturnerFromMBQBlobReturner(resultSet);
  return (__bridge NSData *)CGCBlobReturnerGetBNullable(cResultSet, row);
}

static inline int32_t MBQBlobReturnerResultCount(MBQBlobReturner *resultSet)
{
  return CGCBlobReturnerResultCount(CGCBlobReturnerFromMBQBlobReturner(resultSet));
}

static inline MBQBlobReturner *MBQBlobReturnerCopy(MBQBlobReturner *resultSet, int32_t from, int32_t count)
{
  CGCBlobReturnerResultSetRef copy;
  CGCBlobReturnerCopy(CGCBlobReturnerFromMBQBlobReturner(resultSet), &copy, from, count);
  return (__bridge_transfer MBQBlobReturner *)copy;
}

static inline NSUInteger MBQBlobReturnerRowHash(MBQBlobReturner *resultSet, int32_t row)
{
  return CGCBlobReturnerRowHash(CGCBlobReturnerFromMBQBlobReturner(resultSet), row);
}

static inline BOOL MBQBlobReturnerRowEqual(MBQBlobReturner *resultSet1, int32_t row1, MBQBlobReturner *resultSet2, int32_t row2)
{
  return CGCBlobReturnerRowEqual(CGCBlobReturnerFromMBQBlobReturner(resultSet1), row1, CGCBlobReturnerFromMBQBlobReturner(resultSet2), row2);
}

@class MBQOutCursorProc;

static inline MBQOutCursorProc *MBQOutCursorProcFromCGCOutCursorProc(CGCOutCursorProcResultSetRef resultSet)
{
  return (__bridge MBQOutCursorProc *)resultSet;
}

static inline CGCOutCursorProcResultSetRef CGCOutCursorProcFromMBQOutCursorProc(MBQOutCursorProc *resultSet)
{
  return (__bridge CGCOutCursorProcResultSetRef)resultSet;
}

static inline int32_t MBQOutCursorProcGetId(MBQOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromMBQOutCursorProc(resultSet);
  return CGCOutCursorProcGetId(cResultSet);
}

static inline NSString *_Nullable MBQOutCursorProcGetName(MBQOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromMBQOutCursorProc(resultSet);
  return (__bridge NSString *)CGCOutCursorProcGetName(cResultSet);
}

static inline NSNumber *_Nullable MBQOutCursorProcGetRate(MBQOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromMBQOutCursorProc(resultSet);
  return CGCOutCursorProcGetRateIsNull(cResultSet) ? nil : @(CGCOutCursorProcGetRateValue(cResultSet));
}

static inline NSNumber *_Nullable MBQOutCursorProcGetType(MBQOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromMBQOutCursorProc(resultSet);
  return CGCOutCursorProcGetTypeIsNull(cResultSet) ? nil : @(CGCOutCursorProcGetTypeValue(cResultSet));
}

static inline NSNumber *_Nullable MBQOutCursorProcGetSize(MBQOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromMBQOutCursorProc(resultSet);
  return CGCOutCursorProcGetSizeIsNull(cResultSet) ? nil : @(CGCOutCursorProcGetSizeValue(cResultSet));
}

static inline NSString *MBQOutCursorProcGetExtra1(MBQOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromMBQOutCursorProc(resultSet);
  return (__bridge NSString *)CGCOutCursorProcGetExtra1(cResultSet);
}

static inline NSString *MBQOutCursorProcGetExtra2(MBQOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromMBQOutCursorProc(resultSet);
  return (__bridge NSString *)CGCOutCursorProcGetExtra2(cResultSet);
}

static inline int32_t MBQOutCursorProcResultCount(MBQOutCursorProc *resultSet)
{
  return CGCOutCursorProcResultCount(CGCOutCursorProcFromMBQOutCursorProc(resultSet));
}

static inline MBQOutCursorProc *MBQOutCursorProcCopy(MBQOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef copy;
  CGCOutCursorProcCopy(CGCOutCursorProcFromMBQOutCursorProc(resultSet), &copy);
  return (__bridge_transfer MBQOutCursorProc *)copy;
}

static inline NSUInteger MBQOutCursorProcHash(MBQOutCursorProc *resultSet)
{
  return CGCOutCursorProcHash(CGCOutCursorProcFromMBQOutCursorProc(resultSet));
}

static inline BOOL MBQOutCursorProcEqual(MBQOutCursorProc *resultSet1, MBQOutCursorProc *resultSet2)
{
  return CGCOutCursorProcEqual(CGCOutCursorProcFromMBQOutCursorProc(resultSet1), CGCOutCursorProcFromMBQOutCursorProc(resultSet2));
}

@class MBQThreadThemeInfoList;

static inline MBQThreadThemeInfoList *MBQThreadThemeInfoListFromCGCThreadThemeInfoList(CGCThreadThemeInfoListResultSetRef resultSet)
{
  return (__bridge MBQThreadThemeInfoList *)resultSet;
}

static inline CGCThreadThemeInfoListResultSetRef CGCThreadThemeInfoListFromMBQThreadThemeInfoList(MBQThreadThemeInfoList *resultSet)
{
  return (__bridge CGCThreadThemeInfoListResultSetRef)resultSet;
}

static inline int64_t MBQThreadThemeInfoListGetThreadKey(MBQThreadThemeInfoList *resultSet, int32_t row)
{
  CGCThreadThemeInfoListResultSetRef cResultSet = CGCThreadThemeInfoListFromMBQThreadThemeInfoList(resultSet);
  return CGCThreadThemeInfoListGetThreadKey(cResultSet, row);
}

static inline int32_t MBQThreadThemeInfoListResultCount(MBQThreadThemeInfoList *resultSet)
{
  return CGCThreadThemeInfoListResultCount(CGCThreadThemeInfoListFromMBQThreadThemeInfoList(resultSet));
}

static inline MBQThreadThemeInfoList *MBQThreadThemeInfoListCopy(MBQThreadThemeInfoList *resultSet, int32_t from, int32_t count)
{
  CGCThreadThemeInfoListResultSetRef copy;
  CGCThreadThemeInfoListCopy(CGCThreadThemeInfoListFromMBQThreadThemeInfoList(resultSet), &copy, from, count);
  return (__bridge_transfer MBQThreadThemeInfoList *)copy;
}

static inline NSUInteger MBQThreadThemeInfoListRowHash(MBQThreadThemeInfoList *resultSet, int32_t row)
{
  return CGCThreadThemeInfoListRowHash(CGCThreadThemeInfoListFromMBQThreadThemeInfoList(resultSet), row);
}

static inline BOOL MBQThreadThemeInfoListRowEqual(MBQThreadThemeInfoList *resultSet1, int32_t row1, MBQThreadThemeInfoList *resultSet2, int32_t row2)
{
  return CGCThreadThemeInfoListRowEqual(CGCThreadThemeInfoListFromMBQThreadThemeInfoList(resultSet1), row1, CGCThreadThemeInfoListFromMBQThreadThemeInfoList(resultSet2), row2);
}

@class MBQOutNoDb;

static inline MBQOutNoDb *MBQOutNoDbFromCGCOutNoDb(CGCOutNoDbResultSetRef resultSet)
{
  return (__bridge MBQOutNoDb *)resultSet;
}

static inline CGCOutNoDbResultSetRef CGCOutNoDbFromMBQOutNoDb(MBQOutNoDb *resultSet)
{
  return (__bridge CGCOutNoDbResultSetRef)resultSet;
}

static inline int32_t MBQOutNoDbGetA(MBQOutNoDb *resultSet)
{
  CGCOutNoDbResultSetRef cResultSet = CGCOutNoDbFromMBQOutNoDb(resultSet);
  return CGCOutNoDbGetA(cResultSet);
}

static inline double MBQOutNoDbGetB(MBQOutNoDb *resultSet)
{
  CGCOutNoDbResultSetRef cResultSet = CGCOutNoDbFromMBQOutNoDb(resultSet);
  return CGCOutNoDbGetB(cResultSet);
}

static inline int32_t MBQOutNoDbResultCount(MBQOutNoDb *resultSet)
{
  return CGCOutNoDbResultCount(CGCOutNoDbFromMBQOutNoDb(resultSet));
}

static inline MBQOutNoDb *MBQOutNoDbCopy(MBQOutNoDb *resultSet)
{
  CGCOutNoDbResultSetRef copy;
  CGCOutNoDbCopy(CGCOutNoDbFromMBQOutNoDb(resultSet), &copy);
  return (__bridge_transfer MBQOutNoDb *)copy;
}

static inline NSUInteger MBQOutNoDbHash(MBQOutNoDb *resultSet)
{
  return CGCOutNoDbHash(CGCOutNoDbFromMBQOutNoDb(resultSet));
}

static inline BOOL MBQOutNoDbEqual(MBQOutNoDb *resultSet1, MBQOutNoDb *resultSet2)
{
  return CGCOutNoDbEqual(CGCOutNoDbFromMBQOutNoDb(resultSet1), CGCOutNoDbFromMBQOutNoDb(resultSet2));
}

@class MBQDeclareCursorLikeCursor;

static inline MBQDeclareCursorLikeCursor *MBQDeclareCursorLikeCursorFromCGCDeclareCursorLikeCursor(CGCDeclareCursorLikeCursorResultSetRef resultSet)
{
  return (__bridge MBQDeclareCursorLikeCursor *)resultSet;
}

static inline CGCDeclareCursorLikeCursorResultSetRef CGCDeclareCursorLikeCursorFromMBQDeclareCursorLikeCursor(MBQDeclareCursorLikeCursor *resultSet)
{
  return (__bridge CGCDeclareCursorLikeCursorResultSetRef)resultSet;
}

static inline int32_t MBQDeclareCursorLikeCursorGetA(MBQDeclareCursorLikeCursor *resultSet)
{
  CGCDeclareCursorLikeCursorResultSetRef cResultSet = CGCDeclareCursorLikeCursorFromMBQDeclareCursorLikeCursor(resultSet);
  return CGCDeclareCursorLikeCursorGetA(cResultSet);
}

static inline double MBQDeclareCursorLikeCursorGetB(MBQDeclareCursorLikeCursor *resultSet)
{
  CGCDeclareCursorLikeCursorResultSetRef cResultSet = CGCDeclareCursorLikeCursorFromMBQDeclareCursorLikeCursor(resultSet);
  return CGCDeclareCursorLikeCursorGetB(cResultSet);
}

static inline int32_t MBQDeclareCursorLikeCursorResultCount(MBQDeclareCursorLikeCursor *resultSet)
{
  return CGCDeclareCursorLikeCursorResultCount(CGCDeclareCursorLikeCursorFromMBQDeclareCursorLikeCursor(resultSet));
}

static inline MBQDeclareCursorLikeCursor *MBQDeclareCursorLikeCursorCopy(MBQDeclareCursorLikeCursor *resultSet)
{
  CGCDeclareCursorLikeCursorResultSetRef copy;
  CGCDeclareCursorLikeCursorCopy(CGCDeclareCursorLikeCursorFromMBQDeclareCursorLikeCursor(resultSet), &copy);
  return (__bridge_transfer MBQDeclareCursorLikeCursor *)copy;
}

static inline NSUInteger MBQDeclareCursorLikeCursorHash(MBQDeclareCursorLikeCursor *resultSet)
{
  return CGCDeclareCursorLikeCursorHash(CGCDeclareCursorLikeCursorFromMBQDeclareCursorLikeCursor(resultSet));
}

static inline BOOL MBQDeclareCursorLikeCursorEqual(MBQDeclareCursorLikeCursor *resultSet1, MBQDeclareCursorLikeCursor *resultSet2)
{
  return CGCDeclareCursorLikeCursorEqual(CGCDeclareCursorLikeCursorFromMBQDeclareCursorLikeCursor(resultSet1), CGCDeclareCursorLikeCursorFromMBQDeclareCursorLikeCursor(resultSet2));
}

@class MBQDeclareCursorLikeProc;

static inline MBQDeclareCursorLikeProc *MBQDeclareCursorLikeProcFromCGCDeclareCursorLikeProc(CGCDeclareCursorLikeProcResultSetRef resultSet)
{
  return (__bridge MBQDeclareCursorLikeProc *)resultSet;
}

static inline CGCDeclareCursorLikeProcResultSetRef CGCDeclareCursorLikeProcFromMBQDeclareCursorLikeProc(MBQDeclareCursorLikeProc *resultSet)
{
  return (__bridge CGCDeclareCursorLikeProcResultSetRef)resultSet;
}

static inline NSNumber *_Nullable MBQDeclareCursorLikeProcGetA(MBQDeclareCursorLikeProc *resultSet)
{
  CGCDeclareCursorLikeProcResultSetRef cResultSet = CGCDeclareCursorLikeProcFromMBQDeclareCursorLikeProc(resultSet);
  return CGCDeclareCursorLikeProcGetAIsNull(cResultSet) ? nil : @(CGCDeclareCursorLikeProcGetAValue(cResultSet));
}

static inline NSString *_Nullable MBQDeclareCursorLikeProcGetB(MBQDeclareCursorLikeProc *resultSet)
{
  CGCDeclareCursorLikeProcResultSetRef cResultSet = CGCDeclareCursorLikeProcFromMBQDeclareCursorLikeProc(resultSet);
  return (__bridge NSString *)CGCDeclareCursorLikeProcGetB(cResultSet);
}

static inline int32_t MBQDeclareCursorLikeProcResultCount(MBQDeclareCursorLikeProc *resultSet)
{
  return CGCDeclareCursorLikeProcResultCount(CGCDeclareCursorLikeProcFromMBQDeclareCursorLikeProc(resultSet));
}

static inline MBQDeclareCursorLikeProc *MBQDeclareCursorLikeProcCopy(MBQDeclareCursorLikeProc *resultSet)
{
  CGCDeclareCursorLikeProcResultSetRef copy;
  CGCDeclareCursorLikeProcCopy(CGCDeclareCursorLikeProcFromMBQDeclareCursorLikeProc(resultSet), &copy);
  return (__bridge_transfer MBQDeclareCursorLikeProc *)copy;
}

static inline NSUInteger MBQDeclareCursorLikeProcHash(MBQDeclareCursorLikeProc *resultSet)
{
  return CGCDeclareCursorLikeProcHash(CGCDeclareCursorLikeProcFromMBQDeclareCursorLikeProc(resultSet));
}

static inline BOOL MBQDeclareCursorLikeProcEqual(MBQDeclareCursorLikeProc *resultSet1, MBQDeclareCursorLikeProc *resultSet2)
{
  return CGCDeclareCursorLikeProcEqual(CGCDeclareCursorLikeProcFromMBQDeclareCursorLikeProc(resultSet1), CGCDeclareCursorLikeProcFromMBQDeclareCursorLikeProc(resultSet2));
}

@class MBQDeclareCursorLikeTable;

static inline MBQDeclareCursorLikeTable *MBQDeclareCursorLikeTableFromCGCDeclareCursorLikeTable(CGCDeclareCursorLikeTableResultSetRef resultSet)
{
  return (__bridge MBQDeclareCursorLikeTable *)resultSet;
}

static inline CGCDeclareCursorLikeTableResultSetRef CGCDeclareCursorLikeTableFromMBQDeclareCursorLikeTable(MBQDeclareCursorLikeTable *resultSet)
{
  return (__bridge CGCDeclareCursorLikeTableResultSetRef)resultSet;
}

static inline int32_t MBQDeclareCursorLikeTableGetId(MBQDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef cResultSet = CGCDeclareCursorLikeTableFromMBQDeclareCursorLikeTable(resultSet);
  return CGCDeclareCursorLikeTableGetId(cResultSet);
}

static inline NSString *_Nullable MBQDeclareCursorLikeTableGetName(MBQDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef cResultSet = CGCDeclareCursorLikeTableFromMBQDeclareCursorLikeTable(resultSet);
  return (__bridge NSString *)CGCDeclareCursorLikeTableGetName(cResultSet);
}

static inline NSNumber *_Nullable MBQDeclareCursorLikeTableGetRate(MBQDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef cResultSet = CGCDeclareCursorLikeTableFromMBQDeclareCursorLikeTable(resultSet);
  return CGCDeclareCursorLikeTableGetRateIsNull(cResultSet) ? nil : @(CGCDeclareCursorLikeTableGetRateValue(cResultSet));
}

static inline NSNumber *_Nullable MBQDeclareCursorLikeTableGetType(MBQDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef cResultSet = CGCDeclareCursorLikeTableFromMBQDeclareCursorLikeTable(resultSet);
  return CGCDeclareCursorLikeTableGetTypeIsNull(cResultSet) ? nil : @(CGCDeclareCursorLikeTableGetTypeValue(cResultSet));
}

static inline NSNumber *_Nullable MBQDeclareCursorLikeTableGetSize(MBQDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef cResultSet = CGCDeclareCursorLikeTableFromMBQDeclareCursorLikeTable(resultSet);
  return CGCDeclareCursorLikeTableGetSizeIsNull(cResultSet) ? nil : @(CGCDeclareCursorLikeTableGetSizeValue(cResultSet));
}

static inline int32_t MBQDeclareCursorLikeTableResultCount(MBQDeclareCursorLikeTable *resultSet)
{
  return CGCDeclareCursorLikeTableResultCount(CGCDeclareCursorLikeTableFromMBQDeclareCursorLikeTable(resultSet));
}

static inline MBQDeclareCursorLikeTable *MBQDeclareCursorLikeTableCopy(MBQDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef copy;
  CGCDeclareCursorLikeTableCopy(CGCDeclareCursorLikeTableFromMBQDeclareCursorLikeTable(resultSet), &copy);
  return (__bridge_transfer MBQDeclareCursorLikeTable *)copy;
}

static inline NSUInteger MBQDeclareCursorLikeTableHash(MBQDeclareCursorLikeTable *resultSet)
{
  return CGCDeclareCursorLikeTableHash(CGCDeclareCursorLikeTableFromMBQDeclareCursorLikeTable(resultSet));
}

static inline BOOL MBQDeclareCursorLikeTableEqual(MBQDeclareCursorLikeTable *resultSet1, MBQDeclareCursorLikeTable *resultSet2)
{
  return CGCDeclareCursorLikeTableEqual(CGCDeclareCursorLikeTableFromMBQDeclareCursorLikeTable(resultSet1), CGCDeclareCursorLikeTableFromMBQDeclareCursorLikeTable(resultSet2));
}

@class MBQDeclareCursorLikeView;

static inline MBQDeclareCursorLikeView *MBQDeclareCursorLikeViewFromCGCDeclareCursorLikeView(CGCDeclareCursorLikeViewResultSetRef resultSet)
{
  return (__bridge MBQDeclareCursorLikeView *)resultSet;
}

static inline CGCDeclareCursorLikeViewResultSetRef CGCDeclareCursorLikeViewFromMBQDeclareCursorLikeView(MBQDeclareCursorLikeView *resultSet)
{
  return (__bridge CGCDeclareCursorLikeViewResultSetRef)resultSet;
}

static inline int32_t MBQDeclareCursorLikeViewGetF1(MBQDeclareCursorLikeView *resultSet)
{
  CGCDeclareCursorLikeViewResultSetRef cResultSet = CGCDeclareCursorLikeViewFromMBQDeclareCursorLikeView(resultSet);
  return CGCDeclareCursorLikeViewGetF1(cResultSet);
}

static inline int32_t MBQDeclareCursorLikeViewGetF2(MBQDeclareCursorLikeView *resultSet)
{
  CGCDeclareCursorLikeViewResultSetRef cResultSet = CGCDeclareCursorLikeViewFromMBQDeclareCursorLikeView(resultSet);
  return CGCDeclareCursorLikeViewGetF2(cResultSet);
}

static inline int32_t MBQDeclareCursorLikeViewGetF3(MBQDeclareCursorLikeView *resultSet)
{
  CGCDeclareCursorLikeViewResultSetRef cResultSet = CGCDeclareCursorLikeViewFromMBQDeclareCursorLikeView(resultSet);
  return CGCDeclareCursorLikeViewGetF3(cResultSet);
}

static inline int32_t MBQDeclareCursorLikeViewResultCount(MBQDeclareCursorLikeView *resultSet)
{
  return CGCDeclareCursorLikeViewResultCount(CGCDeclareCursorLikeViewFromMBQDeclareCursorLikeView(resultSet));
}

static inline MBQDeclareCursorLikeView *MBQDeclareCursorLikeViewCopy(MBQDeclareCursorLikeView *resultSet)
{
  CGCDeclareCursorLikeViewResultSetRef copy;
  CGCDeclareCursorLikeViewCopy(CGCDeclareCursorLikeViewFromMBQDeclareCursorLikeView(resultSet), &copy);
  return (__bridge_transfer MBQDeclareCursorLikeView *)copy;
}

static inline NSUInteger MBQDeclareCursorLikeViewHash(MBQDeclareCursorLikeView *resultSet)
{
  return CGCDeclareCursorLikeViewHash(CGCDeclareCursorLikeViewFromMBQDeclareCursorLikeView(resultSet));
}

static inline BOOL MBQDeclareCursorLikeViewEqual(MBQDeclareCursorLikeView *resultSet1, MBQDeclareCursorLikeView *resultSet2)
{
  return CGCDeclareCursorLikeViewEqual(CGCDeclareCursorLikeViewFromMBQDeclareCursorLikeView(resultSet1), CGCDeclareCursorLikeViewFromMBQDeclareCursorLikeView(resultSet2));
}

@class MBQFetchToCursorFromCursor;

static inline MBQFetchToCursorFromCursor *MBQFetchToCursorFromCursorFromCGCFetchToCursorFromCursor(CGCFetchToCursorFromCursorResultSetRef resultSet)
{
  return (__bridge MBQFetchToCursorFromCursor *)resultSet;
}

static inline CGCFetchToCursorFromCursorResultSetRef CGCFetchToCursorFromCursorFromMBQFetchToCursorFromCursor(MBQFetchToCursorFromCursor *resultSet)
{
  return (__bridge CGCFetchToCursorFromCursorResultSetRef)resultSet;
}

static inline int32_t MBQFetchToCursorFromCursorGetA(MBQFetchToCursorFromCursor *resultSet)
{
  CGCFetchToCursorFromCursorResultSetRef cResultSet = CGCFetchToCursorFromCursorFromMBQFetchToCursorFromCursor(resultSet);
  return CGCFetchToCursorFromCursorGetA(cResultSet);
}

static inline NSString *MBQFetchToCursorFromCursorGetB(MBQFetchToCursorFromCursor *resultSet)
{
  CGCFetchToCursorFromCursorResultSetRef cResultSet = CGCFetchToCursorFromCursorFromMBQFetchToCursorFromCursor(resultSet);
  return (__bridge NSString *)CGCFetchToCursorFromCursorGetB(cResultSet);
}

static inline int32_t MBQFetchToCursorFromCursorResultCount(MBQFetchToCursorFromCursor *resultSet)
{
  return CGCFetchToCursorFromCursorResultCount(CGCFetchToCursorFromCursorFromMBQFetchToCursorFromCursor(resultSet));
}

static inline MBQFetchToCursorFromCursor *MBQFetchToCursorFromCursorCopy(MBQFetchToCursorFromCursor *resultSet)
{
  CGCFetchToCursorFromCursorResultSetRef copy;
  CGCFetchToCursorFromCursorCopy(CGCFetchToCursorFromCursorFromMBQFetchToCursorFromCursor(resultSet), &copy);
  return (__bridge_transfer MBQFetchToCursorFromCursor *)copy;
}

static inline NSUInteger MBQFetchToCursorFromCursorHash(MBQFetchToCursorFromCursor *resultSet)
{
  return CGCFetchToCursorFromCursorHash(CGCFetchToCursorFromCursorFromMBQFetchToCursorFromCursor(resultSet));
}

static inline BOOL MBQFetchToCursorFromCursorEqual(MBQFetchToCursorFromCursor *resultSet1, MBQFetchToCursorFromCursor *resultSet2)
{
  return CGCFetchToCursorFromCursorEqual(CGCFetchToCursorFromCursorFromMBQFetchToCursorFromCursor(resultSet1), CGCFetchToCursorFromCursorFromMBQFetchToCursorFromCursor(resultSet2));
}

@class MBQSimpleIdentity;

static inline MBQSimpleIdentity *MBQSimpleIdentityFromCGCSimpleIdentity(CGCSimpleIdentityResultSetRef resultSet)
{
  return (__bridge MBQSimpleIdentity *)resultSet;
}

static inline CGCSimpleIdentityResultSetRef CGCSimpleIdentityFromMBQSimpleIdentity(MBQSimpleIdentity *resultSet)
{
  return (__bridge CGCSimpleIdentityResultSetRef)resultSet;
}

static inline int32_t MBQSimpleIdentityGetId(MBQSimpleIdentity *resultSet, int32_t row)
{
  CGCSimpleIdentityResultSetRef cResultSet = CGCSimpleIdentityFromMBQSimpleIdentity(resultSet);
  return CGCSimpleIdentityGetId(cResultSet, row);
}

static inline int32_t MBQSimpleIdentityGetData(MBQSimpleIdentity *resultSet, int32_t row)
{
  CGCSimpleIdentityResultSetRef cResultSet = CGCSimpleIdentityFromMBQSimpleIdentity(resultSet);
  return CGCSimpleIdentityGetData(cResultSet, row);
}

static inline int32_t MBQSimpleIdentityResultCount(MBQSimpleIdentity *resultSet)
{
  return CGCSimpleIdentityResultCount(CGCSimpleIdentityFromMBQSimpleIdentity(resultSet));
}

static inline MBQSimpleIdentity *MBQSimpleIdentityCopy(MBQSimpleIdentity *resultSet, int32_t from, int32_t count)
{
  CGCSimpleIdentityResultSetRef copy;
  CGCSimpleIdentityCopy(CGCSimpleIdentityFromMBQSimpleIdentity(resultSet), &copy, from, count);
  return (__bridge_transfer MBQSimpleIdentity *)copy;
}

static inline NSUInteger MBQSimpleIdentityRowHash(MBQSimpleIdentity *resultSet, int32_t row)
{
  return CGCSimpleIdentityRowHash(CGCSimpleIdentityFromMBQSimpleIdentity(resultSet), row);
}

static inline BOOL MBQSimpleIdentityRowEqual(MBQSimpleIdentity *resultSet1, int32_t row1, MBQSimpleIdentity *resultSet2, int32_t row2)
{
  return CGCSimpleIdentityRowEqual(CGCSimpleIdentityFromMBQSimpleIdentity(resultSet1), row1, CGCSimpleIdentityFromMBQSimpleIdentity(resultSet2), row2);
}

@class MBQComplexIdentity;

static inline MBQComplexIdentity *MBQComplexIdentityFromCGCComplexIdentity(CGCComplexIdentityResultSetRef resultSet)
{
  return (__bridge MBQComplexIdentity *)resultSet;
}

static inline CGCComplexIdentityResultSetRef CGCComplexIdentityFromMBQComplexIdentity(MBQComplexIdentity *resultSet)
{
  return (__bridge CGCComplexIdentityResultSetRef)resultSet;
}

static inline int32_t MBQComplexIdentityGetCol1(MBQComplexIdentity *resultSet, int32_t row)
{
  CGCComplexIdentityResultSetRef cResultSet = CGCComplexIdentityFromMBQComplexIdentity(resultSet);
  return CGCComplexIdentityGetCol1(cResultSet, row);
}

static inline int32_t MBQComplexIdentityGetCol2(MBQComplexIdentity *resultSet, int32_t row)
{
  CGCComplexIdentityResultSetRef cResultSet = CGCComplexIdentityFromMBQComplexIdentity(resultSet);
  return CGCComplexIdentityGetCol2(cResultSet, row);
}

static inline int32_t MBQComplexIdentityGetData(MBQComplexIdentity *resultSet, int32_t row)
{
  CGCComplexIdentityResultSetRef cResultSet = CGCComplexIdentityFromMBQComplexIdentity(resultSet);
  return CGCComplexIdentityGetData(cResultSet, row);
}

static inline int32_t MBQComplexIdentityResultCount(MBQComplexIdentity *resultSet)
{
  return CGCComplexIdentityResultCount(CGCComplexIdentityFromMBQComplexIdentity(resultSet));
}

static inline MBQComplexIdentity *MBQComplexIdentityCopy(MBQComplexIdentity *resultSet, int32_t from, int32_t count)
{
  CGCComplexIdentityResultSetRef copy;
  CGCComplexIdentityCopy(CGCComplexIdentityFromMBQComplexIdentity(resultSet), &copy, from, count);
  return (__bridge_transfer MBQComplexIdentity *)copy;
}

static inline NSUInteger MBQComplexIdentityRowHash(MBQComplexIdentity *resultSet, int32_t row)
{
  return CGCComplexIdentityRowHash(CGCComplexIdentityFromMBQComplexIdentity(resultSet), row);
}

static inline BOOL MBQComplexIdentityRowEqual(MBQComplexIdentity *resultSet1, int32_t row1, MBQComplexIdentity *resultSet2, int32_t row2)
{
  return CGCComplexIdentityRowEqual(CGCComplexIdentityFromMBQComplexIdentity(resultSet1), row1, CGCComplexIdentityFromMBQComplexIdentity(resultSet2), row2);
}

@class MBQOutCursorIdentity;

static inline MBQOutCursorIdentity *MBQOutCursorIdentityFromCGCOutCursorIdentity(CGCOutCursorIdentityResultSetRef resultSet)
{
  return (__bridge MBQOutCursorIdentity *)resultSet;
}

static inline CGCOutCursorIdentityResultSetRef CGCOutCursorIdentityFromMBQOutCursorIdentity(MBQOutCursorIdentity *resultSet)
{
  return (__bridge CGCOutCursorIdentityResultSetRef)resultSet;
}

static inline int32_t MBQOutCursorIdentityGetId(MBQOutCursorIdentity *resultSet)
{
  CGCOutCursorIdentityResultSetRef cResultSet = CGCOutCursorIdentityFromMBQOutCursorIdentity(resultSet);
  return CGCOutCursorIdentityGetId(cResultSet);
}

static inline int32_t MBQOutCursorIdentityGetData(MBQOutCursorIdentity *resultSet)
{
  CGCOutCursorIdentityResultSetRef cResultSet = CGCOutCursorIdentityFromMBQOutCursorIdentity(resultSet);
  return CGCOutCursorIdentityGetData(cResultSet);
}

static inline int32_t MBQOutCursorIdentityResultCount(MBQOutCursorIdentity *resultSet)
{
  return CGCOutCursorIdentityResultCount(CGCOutCursorIdentityFromMBQOutCursorIdentity(resultSet));
}

static inline MBQOutCursorIdentity *MBQOutCursorIdentityCopy(MBQOutCursorIdentity *resultSet)
{
  CGCOutCursorIdentityResultSetRef copy;
  CGCOutCursorIdentityCopy(CGCOutCursorIdentityFromMBQOutCursorIdentity(resultSet), &copy);
  return (__bridge_transfer MBQOutCursorIdentity *)copy;
}

static inline NSUInteger MBQOutCursorIdentityHash(MBQOutCursorIdentity *resultSet)
{
  return CGCOutCursorIdentityHash(CGCOutCursorIdentityFromMBQOutCursorIdentity(resultSet));
}

static inline BOOL MBQOutCursorIdentityEqual(MBQOutCursorIdentity *resultSet1, MBQOutCursorIdentity *resultSet2)
{
  return CGCOutCursorIdentityEqual(CGCOutCursorIdentityFromMBQOutCursorIdentity(resultSet1), CGCOutCursorIdentityFromMBQOutCursorIdentity(resultSet2));
}

@class MBQRadioactiveProc;

static inline MBQRadioactiveProc *MBQRadioactiveProcFromCGCRadioactiveProc(CGCRadioactiveProcResultSetRef resultSet)
{
  return (__bridge MBQRadioactiveProc *)resultSet;
}

static inline CGCRadioactiveProcResultSetRef CGCRadioactiveProcFromMBQRadioactiveProc(MBQRadioactiveProc *resultSet)
{
  return (__bridge CGCRadioactiveProcResultSetRef)resultSet;
}

static inline int32_t MBQRadioactiveProcGetId(MBQRadioactiveProc *resultSet, int32_t row)
{
  CGCRadioactiveProcResultSetRef cResultSet = CGCRadioactiveProcFromMBQRadioactiveProc(resultSet);
  return CGCRadioactiveProcGetId(cResultSet, row);
}

static inline NSString *_Nullable MBQRadioactiveProcGetData(MBQRadioactiveProc *resultSet, int32_t row)
{
  CGCRadioactiveProcResultSetRef cResultSet = CGCRadioactiveProcFromMBQRadioactiveProc(resultSet);
  return (__bridge NSString *)CGCRadioactiveProcGetData(cResultSet, row);
}

static inline int32_t MBQRadioactiveProcResultCount(MBQRadioactiveProc *resultSet)
{
  return CGCRadioactiveProcResultCount(CGCRadioactiveProcFromMBQRadioactiveProc(resultSet));
}

static inline MBQRadioactiveProc *MBQRadioactiveProcCopy(MBQRadioactiveProc *resultSet, int32_t from, int32_t count)
{
  CGCRadioactiveProcResultSetRef copy;
  CGCRadioactiveProcCopy(CGCRadioactiveProcFromMBQRadioactiveProc(resultSet), &copy, from, count);
  return (__bridge_transfer MBQRadioactiveProc *)copy;
}

static inline NSUInteger MBQRadioactiveProcRowHash(MBQRadioactiveProc *resultSet, int32_t row)
{
  return CGCRadioactiveProcRowHash(CGCRadioactiveProcFromMBQRadioactiveProc(resultSet), row);
}

static inline BOOL MBQRadioactiveProcRowEqual(MBQRadioactiveProc *resultSet1, int32_t row1, MBQRadioactiveProc *resultSet2, int32_t row2)
{
  return CGCRadioactiveProcRowEqual(CGCRadioactiveProcFromMBQRadioactiveProc(resultSet1), row1, CGCRadioactiveProcFromMBQRadioactiveProc(resultSet2), row2);
}

@class MBQAutodropper;

static inline MBQAutodropper *MBQAutodropperFromCGCAutodropper(CGCAutodropperResultSetRef resultSet)
{
  return (__bridge MBQAutodropper *)resultSet;
}

static inline CGCAutodropperResultSetRef CGCAutodropperFromMBQAutodropper(MBQAutodropper *resultSet)
{
  return (__bridge CGCAutodropperResultSetRef)resultSet;
}

static inline int32_t MBQAutodropperGetA(MBQAutodropper *resultSet, int32_t row)
{
  CGCAutodropperResultSetRef cResultSet = CGCAutodropperFromMBQAutodropper(resultSet);
  return CGCAutodropperGetA(cResultSet, row);
}

static inline int32_t MBQAutodropperGetB(MBQAutodropper *resultSet, int32_t row)
{
  CGCAutodropperResultSetRef cResultSet = CGCAutodropperFromMBQAutodropper(resultSet);
  return CGCAutodropperGetB(cResultSet, row);
}

static inline int32_t MBQAutodropperResultCount(MBQAutodropper *resultSet)
{
  return CGCAutodropperResultCount(CGCAutodropperFromMBQAutodropper(resultSet));
}

static inline MBQAutodropper *MBQAutodropperCopy(MBQAutodropper *resultSet, int32_t from, int32_t count)
{
  CGCAutodropperResultSetRef copy;
  CGCAutodropperCopy(CGCAutodropperFromMBQAutodropper(resultSet), &copy, from, count);
  return (__bridge_transfer MBQAutodropper *)copy;
}

static inline NSUInteger MBQAutodropperRowHash(MBQAutodropper *resultSet, int32_t row)
{
  return CGCAutodropperRowHash(CGCAutodropperFromMBQAutodropper(resultSet), row);
}

static inline BOOL MBQAutodropperRowEqual(MBQAutodropper *resultSet1, int32_t row1, MBQAutodropper *resultSet2, int32_t row2)
{
  return CGCAutodropperRowEqual(CGCAutodropperFromMBQAutodropper(resultSet1), row1, CGCAutodropperFromMBQAutodropper(resultSet2), row2);
}

@class MBQSimpleCursorProc;

static inline MBQSimpleCursorProc *MBQSimpleCursorProcFromCGCSimpleCursorProc(CGCSimpleCursorProcResultSetRef resultSet)
{
  return (__bridge MBQSimpleCursorProc *)resultSet;
}

static inline CGCSimpleCursorProcResultSetRef CGCSimpleCursorProcFromMBQSimpleCursorProc(MBQSimpleCursorProc *resultSet)
{
  return (__bridge CGCSimpleCursorProcResultSetRef)resultSet;
}

static inline int32_t MBQSimpleCursorProcGetId(MBQSimpleCursorProc *resultSet)
{
  CGCSimpleCursorProcResultSetRef cResultSet = CGCSimpleCursorProcFromMBQSimpleCursorProc(resultSet);
  return CGCSimpleCursorProcGetId(cResultSet);
}

static inline int32_t MBQSimpleCursorProcResultCount(MBQSimpleCursorProc *resultSet)
{
  return CGCSimpleCursorProcResultCount(CGCSimpleCursorProcFromMBQSimpleCursorProc(resultSet));
}

static inline MBQSimpleCursorProc *MBQSimpleCursorProcCopy(MBQSimpleCursorProc *resultSet)
{
  CGCSimpleCursorProcResultSetRef copy;
  CGCSimpleCursorProcCopy(CGCSimpleCursorProcFromMBQSimpleCursorProc(resultSet), &copy);
  return (__bridge_transfer MBQSimpleCursorProc *)copy;
}

static inline NSUInteger MBQSimpleCursorProcHash(MBQSimpleCursorProc *resultSet)
{
  return CGCSimpleCursorProcHash(CGCSimpleCursorProcFromMBQSimpleCursorProc(resultSet));
}

static inline BOOL MBQSimpleCursorProcEqual(MBQSimpleCursorProc *resultSet1, MBQSimpleCursorProc *resultSet2)
{
  return CGCSimpleCursorProcEqual(CGCSimpleCursorProcFromMBQSimpleCursorProc(resultSet1), CGCSimpleCursorProcFromMBQSimpleCursorProc(resultSet2));
}

@class MBQRedundantCast;

static inline MBQRedundantCast *MBQRedundantCastFromCGCRedundantCast(CGCRedundantCastResultSetRef resultSet)
{
  return (__bridge MBQRedundantCast *)resultSet;
}

static inline CGCRedundantCastResultSetRef CGCRedundantCastFromMBQRedundantCast(MBQRedundantCast *resultSet)
{
  return (__bridge CGCRedundantCastResultSetRef)resultSet;
}

static inline int32_t MBQRedundantCastGetPlugh(MBQRedundantCast *resultSet, int32_t row)
{
  CGCRedundantCastResultSetRef cResultSet = CGCRedundantCastFromMBQRedundantCast(resultSet);
  return CGCRedundantCastGetPlugh(cResultSet, row);
}

static inline int32_t MBQRedundantCastGetFive(MBQRedundantCast *resultSet, int32_t row)
{
  CGCRedundantCastResultSetRef cResultSet = CGCRedundantCastFromMBQRedundantCast(resultSet);
  return CGCRedundantCastGetFive(cResultSet, row);
}

static inline int32_t MBQRedundantCastResultCount(MBQRedundantCast *resultSet)
{
  return CGCRedundantCastResultCount(CGCRedundantCastFromMBQRedundantCast(resultSet));
}

static inline MBQRedundantCast *MBQRedundantCastCopy(MBQRedundantCast *resultSet, int32_t from, int32_t count)
{
  CGCRedundantCastResultSetRef copy;
  CGCRedundantCastCopy(CGCRedundantCastFromMBQRedundantCast(resultSet), &copy, from, count);
  return (__bridge_transfer MBQRedundantCast *)copy;
}

static inline NSUInteger MBQRedundantCastRowHash(MBQRedundantCast *resultSet, int32_t row)
{
  return CGCRedundantCastRowHash(CGCRedundantCastFromMBQRedundantCast(resultSet), row);
}

static inline BOOL MBQRedundantCastRowEqual(MBQRedundantCast *resultSet1, int32_t row1, MBQRedundantCast *resultSet2, int32_t row2)
{
  return CGCRedundantCastRowEqual(CGCRedundantCastFromMBQRedundantCast(resultSet1), row1, CGCRedundantCastFromMBQRedundantCast(resultSet2), row2);
}

@class MBQOutUnionTwo;

static inline MBQOutUnionTwo *MBQOutUnionTwoFromCGCOutUnionTwo(CGCOutUnionTwoResultSetRef resultSet)
{
  return (__bridge MBQOutUnionTwo *)resultSet;
}

static inline CGCOutUnionTwoResultSetRef CGCOutUnionTwoFromMBQOutUnionTwo(MBQOutUnionTwo *resultSet)
{
  return (__bridge CGCOutUnionTwoResultSetRef)resultSet;
}

static inline int32_t MBQOutUnionTwoGetX(MBQOutUnionTwo *resultSet, int32_t row)
{
  CGCOutUnionTwoResultSetRef cResultSet = CGCOutUnionTwoFromMBQOutUnionTwo(resultSet);
  return CGCOutUnionTwoGetX(cResultSet, row);
}

static inline NSString *MBQOutUnionTwoGetY(MBQOutUnionTwo *resultSet, int32_t row)
{
  CGCOutUnionTwoResultSetRef cResultSet = CGCOutUnionTwoFromMBQOutUnionTwo(resultSet);
  return (__bridge NSString *)CGCOutUnionTwoGetY(cResultSet, row);
}

static inline int32_t MBQOutUnionTwoResultCount(MBQOutUnionTwo *resultSet)
{
  return CGCOutUnionTwoResultCount(CGCOutUnionTwoFromMBQOutUnionTwo(resultSet));
}

static inline MBQOutUnionTwo *MBQOutUnionTwoCopy(MBQOutUnionTwo *resultSet, int32_t from, int32_t count)
{
  CGCOutUnionTwoResultSetRef copy;
  CGCOutUnionTwoCopy(CGCOutUnionTwoFromMBQOutUnionTwo(resultSet), &copy, from, count);
  return (__bridge_transfer MBQOutUnionTwo *)copy;
}

static inline NSUInteger MBQOutUnionTwoRowHash(MBQOutUnionTwo *resultSet, int32_t row)
{
  return CGCOutUnionTwoRowHash(CGCOutUnionTwoFromMBQOutUnionTwo(resultSet), row);
}

static inline BOOL MBQOutUnionTwoRowEqual(MBQOutUnionTwo *resultSet1, int32_t row1, MBQOutUnionTwo *resultSet2, int32_t row2)
{
  return CGCOutUnionTwoRowEqual(CGCOutUnionTwoFromMBQOutUnionTwo(resultSet1), row1, CGCOutUnionTwoFromMBQOutUnionTwo(resultSet2), row2);
}

@class MBQOutUnionFromSelect;

static inline MBQOutUnionFromSelect *MBQOutUnionFromSelectFromCGCOutUnionFromSelect(CGCOutUnionFromSelectResultSetRef resultSet)
{
  return (__bridge MBQOutUnionFromSelect *)resultSet;
}

static inline CGCOutUnionFromSelectResultSetRef CGCOutUnionFromSelectFromMBQOutUnionFromSelect(MBQOutUnionFromSelect *resultSet)
{
  return (__bridge CGCOutUnionFromSelectResultSetRef)resultSet;
}

static inline int32_t MBQOutUnionFromSelectGetX(MBQOutUnionFromSelect *resultSet, int32_t row)
{
  CGCOutUnionFromSelectResultSetRef cResultSet = CGCOutUnionFromSelectFromMBQOutUnionFromSelect(resultSet);
  return CGCOutUnionFromSelectGetX(cResultSet, row);
}

static inline NSString *MBQOutUnionFromSelectGetY(MBQOutUnionFromSelect *resultSet, int32_t row)
{
  CGCOutUnionFromSelectResultSetRef cResultSet = CGCOutUnionFromSelectFromMBQOutUnionFromSelect(resultSet);
  return (__bridge NSString *)CGCOutUnionFromSelectGetY(cResultSet, row);
}

static inline int32_t MBQOutUnionFromSelectResultCount(MBQOutUnionFromSelect *resultSet)
{
  return CGCOutUnionFromSelectResultCount(CGCOutUnionFromSelectFromMBQOutUnionFromSelect(resultSet));
}

static inline MBQOutUnionFromSelect *MBQOutUnionFromSelectCopy(MBQOutUnionFromSelect *resultSet, int32_t from, int32_t count)
{
  CGCOutUnionFromSelectResultSetRef copy;
  CGCOutUnionFromSelectCopy(CGCOutUnionFromSelectFromMBQOutUnionFromSelect(resultSet), &copy, from, count);
  return (__bridge_transfer MBQOutUnionFromSelect *)copy;
}

static inline NSUInteger MBQOutUnionFromSelectRowHash(MBQOutUnionFromSelect *resultSet, int32_t row)
{
  return CGCOutUnionFromSelectRowHash(CGCOutUnionFromSelectFromMBQOutUnionFromSelect(resultSet), row);
}

static inline BOOL MBQOutUnionFromSelectRowEqual(MBQOutUnionFromSelect *resultSet1, int32_t row1, MBQOutUnionFromSelect *resultSet2, int32_t row2)
{
  return CGCOutUnionFromSelectRowEqual(CGCOutUnionFromSelectFromMBQOutUnionFromSelect(resultSet1), row1, CGCOutUnionFromSelectFromMBQOutUnionFromSelect(resultSet2), row2);
}

@class MBQWindowFunctionInvocation;

static inline MBQWindowFunctionInvocation *MBQWindowFunctionInvocationFromCGCWindowFunctionInvocation(CGCWindowFunctionInvocationResultSetRef resultSet)
{
  return (__bridge MBQWindowFunctionInvocation *)resultSet;
}

static inline CGCWindowFunctionInvocationResultSetRef CGCWindowFunctionInvocationFromMBQWindowFunctionInvocation(MBQWindowFunctionInvocation *resultSet)
{
  return (__bridge CGCWindowFunctionInvocationResultSetRef)resultSet;
}

static inline int32_t MBQWindowFunctionInvocationGetId(MBQWindowFunctionInvocation *resultSet, int32_t row)
{
  CGCWindowFunctionInvocationResultSetRef cResultSet = CGCWindowFunctionInvocationFromMBQWindowFunctionInvocation(resultSet);
  return CGCWindowFunctionInvocationGetId(cResultSet, row);
}

static inline int32_t MBQWindowFunctionInvocationGetRowNum(MBQWindowFunctionInvocation *resultSet, int32_t row)
{
  CGCWindowFunctionInvocationResultSetRef cResultSet = CGCWindowFunctionInvocationFromMBQWindowFunctionInvocation(resultSet);
  return CGCWindowFunctionInvocationGetRowNum(cResultSet, row);
}

static inline int32_t MBQWindowFunctionInvocationResultCount(MBQWindowFunctionInvocation *resultSet)
{
  return CGCWindowFunctionInvocationResultCount(CGCWindowFunctionInvocationFromMBQWindowFunctionInvocation(resultSet));
}

static inline MBQWindowFunctionInvocation *MBQWindowFunctionInvocationCopy(MBQWindowFunctionInvocation *resultSet, int32_t from, int32_t count)
{
  CGCWindowFunctionInvocationResultSetRef copy;
  CGCWindowFunctionInvocationCopy(CGCWindowFunctionInvocationFromMBQWindowFunctionInvocation(resultSet), &copy, from, count);
  return (__bridge_transfer MBQWindowFunctionInvocation *)copy;
}

static inline NSUInteger MBQWindowFunctionInvocationRowHash(MBQWindowFunctionInvocation *resultSet, int32_t row)
{
  return CGCWindowFunctionInvocationRowHash(CGCWindowFunctionInvocationFromMBQWindowFunctionInvocation(resultSet), row);
}

static inline BOOL MBQWindowFunctionInvocationRowEqual(MBQWindowFunctionInvocation *resultSet1, int32_t row1, MBQWindowFunctionInvocation *resultSet2, int32_t row2)
{
  return CGCWindowFunctionInvocationRowEqual(CGCWindowFunctionInvocationFromMBQWindowFunctionInvocation(resultSet1), row1, CGCWindowFunctionInvocationFromMBQWindowFunctionInvocation(resultSet2), row2);
}

@class MBQUseReturn;

static inline MBQUseReturn *MBQUseReturnFromCGCUseReturn(CGCUseReturnResultSetRef resultSet)
{
  return (__bridge MBQUseReturn *)resultSet;
}

static inline CGCUseReturnResultSetRef CGCUseReturnFromMBQUseReturn(MBQUseReturn *resultSet)
{
  return (__bridge CGCUseReturnResultSetRef)resultSet;
}

static inline int32_t MBQUseReturnGetX(MBQUseReturn *resultSet, int32_t row)
{
  CGCUseReturnResultSetRef cResultSet = CGCUseReturnFromMBQUseReturn(resultSet);
  return CGCUseReturnGetX(cResultSet, row);
}

static inline int32_t MBQUseReturnResultCount(MBQUseReturn *resultSet)
{
  return CGCUseReturnResultCount(CGCUseReturnFromMBQUseReturn(resultSet));
}

static inline MBQUseReturn *MBQUseReturnCopy(MBQUseReturn *resultSet, int32_t from, int32_t count)
{
  CGCUseReturnResultSetRef copy;
  CGCUseReturnCopy(CGCUseReturnFromMBQUseReturn(resultSet), &copy, from, count);
  return (__bridge_transfer MBQUseReturn *)copy;
}

static inline NSUInteger MBQUseReturnRowHash(MBQUseReturn *resultSet, int32_t row)
{
  return CGCUseReturnRowHash(CGCUseReturnFromMBQUseReturn(resultSet), row);
}

static inline BOOL MBQUseReturnRowEqual(MBQUseReturn *resultSet1, int32_t row1, MBQUseReturn *resultSet2, int32_t row2)
{
  return CGCUseReturnRowEqual(CGCUseReturnFromMBQUseReturn(resultSet1), row1, CGCUseReturnFromMBQUseReturn(resultSet2), row2);
}

NS_ASSUME_NONNULL_END
