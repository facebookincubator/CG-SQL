
#pragma once

#import <Foundation/Foundation.h>

#import <Test/TestFile.h>

#import <CGCFragTest.h>

NS_ASSUME_NONNULL_BEGIN

static inline int32_t CGCExtGetId(CGCFragTest *resultSet, int32_t row)
{
  return CGCFragTestGetId(resultSet, row);
}

static inline NSNumber *_Nullable CGCExtGetF2(CGCFragTest *resultSet, int32_t row)
{
  return __PRIVATE__CGCFragTestGetF2(resultSet, row);
}

static inline int32_t CGCExtResultCount(CGCFragTest *resultSet)
{
  return CGCFragTestResultCount(resultSet);
}

static inline CGCFragTest *CGCExtCopy(CGCFragTest *resultSet, int32_t from, int32_t count)
{
  return CGCFragTestCopy(resultSet, from, count);
}

static inline int32_t CGCExt2GetId(CGCFragTest *resultSet, int32_t row)
{
  return CGCFragTestGetId(resultSet, row);
}

static inline NSNumber *_Nullable CGCExt2GetF3(CGCFragTest *resultSet, int32_t row)
{
  return __PRIVATE__CGCFragTestGetF3(resultSet, row);
}

static inline int32_t CGCExt2ResultCount(CGCFragTest *resultSet)
{
  return CGCFragTestResultCount(resultSet);
}

static inline CGCFragTest *CGCExt2Copy(CGCFragTest *resultSet, int32_t from, int32_t count)
{
  return CGCFragTestCopy(resultSet, from, count);
}

@class CGCWithResultSet;

static inline CGCWithResultSet *CGCWithResultSetFromCGCWithResultSet(CGCWithResultSetResultSetRef resultSet)
{
  return (__bridge CGCWithResultSet *)resultSet;
}

static inline CGCWithResultSetResultSetRef CGCWithResultSetFromCGCWithResultSet(CGCWithResultSet *resultSet)
{
  return (__bridge CGCWithResultSetResultSetRef)resultSet;
}

static inline int32_t CGCWithResultSetGetId(CGCWithResultSet *resultSet, int32_t row)
{
  CGCWithResultSetResultSetRef cResultSet = CGCWithResultSetFromCGCWithResultSet(resultSet);
  return CGCWithResultSetGetId(cResultSet, row);
}

static inline NSString *_Nullable CGCWithResultSetGetName(CGCWithResultSet *resultSet, int32_t row)
{
  CGCWithResultSetResultSetRef cResultSet = CGCWithResultSetFromCGCWithResultSet(resultSet);
  return (__bridge NSString *)CGCWithResultSetGetName(cResultSet, row);
}

static inline NSNumber *_Nullable CGCWithResultSetGetRate(CGCWithResultSet *resultSet, int32_t row)
{
  CGCWithResultSetResultSetRef cResultSet = CGCWithResultSetFromCGCWithResultSet(resultSet);
  return CGCWithResultSetGetRateIsNull(cResultSet, row) ? nil : @(CGCWithResultSetGetRateValue(cResultSet, row));
}

static inline NSNumber *_Nullable CGCWithResultSetGetType(CGCWithResultSet *resultSet, int32_t row)
{
  CGCWithResultSetResultSetRef cResultSet = CGCWithResultSetFromCGCWithResultSet(resultSet);
  return CGCWithResultSetGetTypeIsNull(cResultSet, row) ? nil : @(CGCWithResultSetGetTypeValue(cResultSet, row));
}

static inline NSNumber *_Nullable CGCWithResultSetGetSize(CGCWithResultSet *resultSet, int32_t row)
{
  CGCWithResultSetResultSetRef cResultSet = CGCWithResultSetFromCGCWithResultSet(resultSet);
  return CGCWithResultSetGetSizeIsNull(cResultSet, row) ? nil : @(CGCWithResultSetGetSizeValue(cResultSet, row));
}

static inline int32_t CGCWithResultSetResultCount(CGCWithResultSet *resultSet)
{
  return CGCWithResultSetResultCount(CGCWithResultSetFromCGCWithResultSet(resultSet));
}

static inline CGCWithResultSet *CGCWithResultSetCopy(CGCWithResultSet *resultSet, int32_t from, int32_t count)
{
  CGCWithResultSetResultSetRef copy;
  CGCWithResultSetCopy(CGCWithResultSetFromCGCWithResultSet(resultSet), &copy, from, count);
  return (__bridge_transfer CGCWithResultSet *)copy;
}

static inline NSUInteger CGCWithResultSetRowHash(CGCWithResultSet *resultSet, int32_t row)
{
  return CGCWithResultSetRowHash(CGCWithResultSetFromCGCWithResultSet(resultSet), row);
}

static inline BOOL CGCWithResultSetRowEqual(CGCWithResultSet *resultSet1, int32_t row1, CGCWithResultSet *resultSet2, int32_t row2)
{
  return CGCWithResultSetRowEqual(CGCWithResultSetFromCGCWithResultSet(resultSet1), row1, CGCWithResultSetFromCGCWithResultSet(resultSet2), row2);
}

@class CGCSelectFromView;

static inline CGCSelectFromView *CGCSelectFromViewFromCGCSelectFromView(CGCSelectFromViewResultSetRef resultSet)
{
  return (__bridge CGCSelectFromView *)resultSet;
}

static inline CGCSelectFromViewResultSetRef CGCSelectFromViewFromCGCSelectFromView(CGCSelectFromView *resultSet)
{
  return (__bridge CGCSelectFromViewResultSetRef)resultSet;
}

static inline int32_t CGCSelectFromViewGetId(CGCSelectFromView *resultSet, int32_t row)
{
  CGCSelectFromViewResultSetRef cResultSet = CGCSelectFromViewFromCGCSelectFromView(resultSet);
  return CGCSelectFromViewGetId(cResultSet, row);
}

static inline NSNumber *_Nullable CGCSelectFromViewGetType(CGCSelectFromView *resultSet, int32_t row)
{
  CGCSelectFromViewResultSetRef cResultSet = CGCSelectFromViewFromCGCSelectFromView(resultSet);
  return CGCSelectFromViewGetTypeIsNull(cResultSet, row) ? nil : @(CGCSelectFromViewGetTypeValue(cResultSet, row));
}

static inline int32_t CGCSelectFromViewResultCount(CGCSelectFromView *resultSet)
{
  return CGCSelectFromViewResultCount(CGCSelectFromViewFromCGCSelectFromView(resultSet));
}

static inline CGCSelectFromView *CGCSelectFromViewCopy(CGCSelectFromView *resultSet, int32_t from, int32_t count)
{
  CGCSelectFromViewResultSetRef copy;
  CGCSelectFromViewCopy(CGCSelectFromViewFromCGCSelectFromView(resultSet), &copy, from, count);
  return (__bridge_transfer CGCSelectFromView *)copy;
}

static inline NSUInteger CGCSelectFromViewRowHash(CGCSelectFromView *resultSet, int32_t row)
{
  return CGCSelectFromViewRowHash(CGCSelectFromViewFromCGCSelectFromView(resultSet), row);
}

static inline BOOL CGCSelectFromViewRowEqual(CGCSelectFromView *resultSet1, int32_t row1, CGCSelectFromView *resultSet2, int32_t row2)
{
  return CGCSelectFromViewRowEqual(CGCSelectFromViewFromCGCSelectFromView(resultSet1), row1, CGCSelectFromViewFromCGCSelectFromView(resultSet2), row2);
}

@class CGCGetData;

static inline CGCGetData *CGCGetDataFromCGCGetData(CGCGetDataResultSetRef resultSet)
{
  return (__bridge CGCGetData *)resultSet;
}

static inline CGCGetDataResultSetRef CGCGetDataFromCGCGetData(CGCGetData *resultSet)
{
  return (__bridge CGCGetDataResultSetRef)resultSet;
}

static inline int32_t CGCGetDataGetId(CGCGetData *resultSet, int32_t row)
{
  CGCGetDataResultSetRef cResultSet = CGCGetDataFromCGCGetData(resultSet);
  return CGCGetDataGetId(cResultSet, row);
}

static inline NSString *_Nullable CGCGetDataGetName(CGCGetData *resultSet, int32_t row)
{
  CGCGetDataResultSetRef cResultSet = CGCGetDataFromCGCGetData(resultSet);
  return (__bridge NSString *)CGCGetDataGetName(cResultSet, row);
}

static inline NSNumber *_Nullable CGCGetDataGetRate(CGCGetData *resultSet, int32_t row)
{
  CGCGetDataResultSetRef cResultSet = CGCGetDataFromCGCGetData(resultSet);
  return CGCGetDataGetRateIsNull(cResultSet, row) ? nil : @(CGCGetDataGetRateValue(cResultSet, row));
}

static inline NSNumber *_Nullable CGCGetDataGetType(CGCGetData *resultSet, int32_t row)
{
  CGCGetDataResultSetRef cResultSet = CGCGetDataFromCGCGetData(resultSet);
  return CGCGetDataGetTypeIsNull(cResultSet, row) ? nil : @(CGCGetDataGetTypeValue(cResultSet, row));
}

static inline NSNumber *_Nullable CGCGetDataGetSize(CGCGetData *resultSet, int32_t row)
{
  CGCGetDataResultSetRef cResultSet = CGCGetDataFromCGCGetData(resultSet);
  return CGCGetDataGetSizeIsNull(cResultSet, row) ? nil : @(CGCGetDataGetSizeValue(cResultSet, row));
}

static inline int32_t CGCGetDataResultCount(CGCGetData *resultSet)
{
  return CGCGetDataResultCount(CGCGetDataFromCGCGetData(resultSet));
}

static inline CGCGetData *CGCGetDataCopy(CGCGetData *resultSet, int32_t from, int32_t count)
{
  CGCGetDataResultSetRef copy;
  CGCGetDataCopy(CGCGetDataFromCGCGetData(resultSet), &copy, from, count);
  return (__bridge_transfer CGCGetData *)copy;
}

static inline NSUInteger CGCGetDataRowHash(CGCGetData *resultSet, int32_t row)
{
  return CGCGetDataRowHash(CGCGetDataFromCGCGetData(resultSet), row);
}

static inline BOOL CGCGetDataRowEqual(CGCGetData *resultSet1, int32_t row1, CGCGetData *resultSet2, int32_t row2)
{
  return CGCGetDataRowEqual(CGCGetDataFromCGCGetData(resultSet1), row1, CGCGetDataFromCGCGetData(resultSet2), row2);
}

@class CGCComplexReturn;

static inline CGCComplexReturn *CGCComplexReturnFromCGCComplexReturn(CGCComplexReturnResultSetRef resultSet)
{
  return (__bridge CGCComplexReturn *)resultSet;
}

static inline CGCComplexReturnResultSetRef CGCComplexReturnFromCGCComplexReturn(CGCComplexReturn *resultSet)
{
  return (__bridge CGCComplexReturnResultSetRef)resultSet;
}

static inline BOOL CGCComplexReturnGetBool(CGCComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromCGCComplexReturn(resultSet);
  return CGCComplexReturnGetBool(cResultSet, row) ? YES : NO;
}

static inline int32_t CGCComplexReturnGetInteger(CGCComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromCGCComplexReturn(resultSet);
  return CGCComplexReturnGetInteger(cResultSet, row);
}

static inline int64_t CGCComplexReturnGetLongint(CGCComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromCGCComplexReturn(resultSet);
  return CGCComplexReturnGetLongint(cResultSet, row);
}

static inline double CGCComplexReturnGetReal(CGCComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromCGCComplexReturn(resultSet);
  return CGCComplexReturnGetReal(cResultSet, row);
}

static inline NSString *CGCComplexReturnGetText(CGCComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromCGCComplexReturn(resultSet);
  return (__bridge NSString *)CGCComplexReturnGetText(cResultSet, row);
}

static inline NSNumber *_Nullable CGCComplexReturnGetNullableBool(CGCComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromCGCComplexReturn(resultSet);
  return CGCComplexReturnGetNullableBoolIsNull(cResultSet, row) ? nil : @(CGCComplexReturnGetNullableBoolValue(cResultSet, row));
}

static inline int32_t CGCComplexReturnResultCount(CGCComplexReturn *resultSet)
{
  return CGCComplexReturnResultCount(CGCComplexReturnFromCGCComplexReturn(resultSet));
}

static inline CGCComplexReturn *CGCComplexReturnCopy(CGCComplexReturn *resultSet, int32_t from, int32_t count)
{
  CGCComplexReturnResultSetRef copy;
  CGCComplexReturnCopy(CGCComplexReturnFromCGCComplexReturn(resultSet), &copy, from, count);
  return (__bridge_transfer CGCComplexReturn *)copy;
}

static inline NSUInteger CGCComplexReturnRowHash(CGCComplexReturn *resultSet, int32_t row)
{
  return CGCComplexReturnRowHash(CGCComplexReturnFromCGCComplexReturn(resultSet), row);
}

static inline BOOL CGCComplexReturnRowEqual(CGCComplexReturn *resultSet1, int32_t row1, CGCComplexReturn *resultSet2, int32_t row2)
{
  return CGCComplexReturnRowEqual(CGCComplexReturnFromCGCComplexReturn(resultSet1), row1, CGCComplexReturnFromCGCComplexReturn(resultSet2), row2);
}

@class CGCHierarchicalQuery;

static inline CGCHierarchicalQuery *CGCHierarchicalQueryFromCGCHierarchicalQuery(CGCHierarchicalQueryResultSetRef resultSet)
{
  return (__bridge CGCHierarchicalQuery *)resultSet;
}

static inline CGCHierarchicalQueryResultSetRef CGCHierarchicalQueryFromCGCHierarchicalQuery(CGCHierarchicalQuery *resultSet)
{
  return (__bridge CGCHierarchicalQueryResultSetRef)resultSet;
}

static inline int32_t CGCHierarchicalQueryGetId(CGCHierarchicalQuery *resultSet, int32_t row)
{
  CGCHierarchicalQueryResultSetRef cResultSet = CGCHierarchicalQueryFromCGCHierarchicalQuery(resultSet);
  return CGCHierarchicalQueryGetId(cResultSet, row);
}

static inline int32_t CGCHierarchicalQueryResultCount(CGCHierarchicalQuery *resultSet)
{
  return CGCHierarchicalQueryResultCount(CGCHierarchicalQueryFromCGCHierarchicalQuery(resultSet));
}

static inline CGCHierarchicalQuery *CGCHierarchicalQueryCopy(CGCHierarchicalQuery *resultSet, int32_t from, int32_t count)
{
  CGCHierarchicalQueryResultSetRef copy;
  CGCHierarchicalQueryCopy(CGCHierarchicalQueryFromCGCHierarchicalQuery(resultSet), &copy, from, count);
  return (__bridge_transfer CGCHierarchicalQuery *)copy;
}

static inline NSUInteger CGCHierarchicalQueryRowHash(CGCHierarchicalQuery *resultSet, int32_t row)
{
  return CGCHierarchicalQueryRowHash(CGCHierarchicalQueryFromCGCHierarchicalQuery(resultSet), row);
}

static inline BOOL CGCHierarchicalQueryRowEqual(CGCHierarchicalQuery *resultSet1, int32_t row1, CGCHierarchicalQuery *resultSet2, int32_t row2)
{
  return CGCHierarchicalQueryRowEqual(CGCHierarchicalQueryFromCGCHierarchicalQuery(resultSet1), row1, CGCHierarchicalQueryFromCGCHierarchicalQuery(resultSet2), row2);
}

@class CGCHierarchicalUnmatchedQuery;

static inline CGCHierarchicalUnmatchedQuery *CGCHierarchicalUnmatchedQueryFromCGCHierarchicalUnmatchedQuery(CGCHierarchicalUnmatchedQueryResultSetRef resultSet)
{
  return (__bridge CGCHierarchicalUnmatchedQuery *)resultSet;
}

static inline CGCHierarchicalUnmatchedQueryResultSetRef CGCHierarchicalUnmatchedQueryFromCGCHierarchicalUnmatchedQuery(CGCHierarchicalUnmatchedQuery *resultSet)
{
  return (__bridge CGCHierarchicalUnmatchedQueryResultSetRef)resultSet;
}

static inline int32_t CGCHierarchicalUnmatchedQueryGetId(CGCHierarchicalUnmatchedQuery *resultSet, int32_t row)
{
  CGCHierarchicalUnmatchedQueryResultSetRef cResultSet = CGCHierarchicalUnmatchedQueryFromCGCHierarchicalUnmatchedQuery(resultSet);
  return CGCHierarchicalUnmatchedQueryGetId(cResultSet, row);
}

static inline int32_t CGCHierarchicalUnmatchedQueryResultCount(CGCHierarchicalUnmatchedQuery *resultSet)
{
  return CGCHierarchicalUnmatchedQueryResultCount(CGCHierarchicalUnmatchedQueryFromCGCHierarchicalUnmatchedQuery(resultSet));
}

static inline CGCHierarchicalUnmatchedQuery *CGCHierarchicalUnmatchedQueryCopy(CGCHierarchicalUnmatchedQuery *resultSet, int32_t from, int32_t count)
{
  CGCHierarchicalUnmatchedQueryResultSetRef copy;
  CGCHierarchicalUnmatchedQueryCopy(CGCHierarchicalUnmatchedQueryFromCGCHierarchicalUnmatchedQuery(resultSet), &copy, from, count);
  return (__bridge_transfer CGCHierarchicalUnmatchedQuery *)copy;
}

static inline NSUInteger CGCHierarchicalUnmatchedQueryRowHash(CGCHierarchicalUnmatchedQuery *resultSet, int32_t row)
{
  return CGCHierarchicalUnmatchedQueryRowHash(CGCHierarchicalUnmatchedQueryFromCGCHierarchicalUnmatchedQuery(resultSet), row);
}

static inline BOOL CGCHierarchicalUnmatchedQueryRowEqual(CGCHierarchicalUnmatchedQuery *resultSet1, int32_t row1, CGCHierarchicalUnmatchedQuery *resultSet2, int32_t row2)
{
  return CGCHierarchicalUnmatchedQueryRowEqual(CGCHierarchicalUnmatchedQueryFromCGCHierarchicalUnmatchedQuery(resultSet1), row1, CGCHierarchicalUnmatchedQueryFromCGCHierarchicalUnmatchedQuery(resultSet2), row2);
}

@class CGCUnionSelect;

static inline CGCUnionSelect *CGCUnionSelectFromCGCUnionSelect(CGCUnionSelectResultSetRef resultSet)
{
  return (__bridge CGCUnionSelect *)resultSet;
}

static inline CGCUnionSelectResultSetRef CGCUnionSelectFromCGCUnionSelect(CGCUnionSelect *resultSet)
{
  return (__bridge CGCUnionSelectResultSetRef)resultSet;
}

static inline int32_t CGCUnionSelectGetA(CGCUnionSelect *resultSet, int32_t row)
{
  CGCUnionSelectResultSetRef cResultSet = CGCUnionSelectFromCGCUnionSelect(resultSet);
  return CGCUnionSelectGetA(cResultSet, row);
}

static inline int32_t CGCUnionSelectResultCount(CGCUnionSelect *resultSet)
{
  return CGCUnionSelectResultCount(CGCUnionSelectFromCGCUnionSelect(resultSet));
}

static inline CGCUnionSelect *CGCUnionSelectCopy(CGCUnionSelect *resultSet, int32_t from, int32_t count)
{
  CGCUnionSelectResultSetRef copy;
  CGCUnionSelectCopy(CGCUnionSelectFromCGCUnionSelect(resultSet), &copy, from, count);
  return (__bridge_transfer CGCUnionSelect *)copy;
}

static inline NSUInteger CGCUnionSelectRowHash(CGCUnionSelect *resultSet, int32_t row)
{
  return CGCUnionSelectRowHash(CGCUnionSelectFromCGCUnionSelect(resultSet), row);
}

static inline BOOL CGCUnionSelectRowEqual(CGCUnionSelect *resultSet1, int32_t row1, CGCUnionSelect *resultSet2, int32_t row2)
{
  return CGCUnionSelectRowEqual(CGCUnionSelectFromCGCUnionSelect(resultSet1), row1, CGCUnionSelectFromCGCUnionSelect(resultSet2), row2);
}

@class CGCUnionAllSelect;

static inline CGCUnionAllSelect *CGCUnionAllSelectFromCGCUnionAllSelect(CGCUnionAllSelectResultSetRef resultSet)
{
  return (__bridge CGCUnionAllSelect *)resultSet;
}

static inline CGCUnionAllSelectResultSetRef CGCUnionAllSelectFromCGCUnionAllSelect(CGCUnionAllSelect *resultSet)
{
  return (__bridge CGCUnionAllSelectResultSetRef)resultSet;
}

static inline int32_t CGCUnionAllSelectGetA(CGCUnionAllSelect *resultSet, int32_t row)
{
  CGCUnionAllSelectResultSetRef cResultSet = CGCUnionAllSelectFromCGCUnionAllSelect(resultSet);
  return CGCUnionAllSelectGetA(cResultSet, row);
}

static inline int32_t CGCUnionAllSelectResultCount(CGCUnionAllSelect *resultSet)
{
  return CGCUnionAllSelectResultCount(CGCUnionAllSelectFromCGCUnionAllSelect(resultSet));
}

static inline CGCUnionAllSelect *CGCUnionAllSelectCopy(CGCUnionAllSelect *resultSet, int32_t from, int32_t count)
{
  CGCUnionAllSelectResultSetRef copy;
  CGCUnionAllSelectCopy(CGCUnionAllSelectFromCGCUnionAllSelect(resultSet), &copy, from, count);
  return (__bridge_transfer CGCUnionAllSelect *)copy;
}

static inline NSUInteger CGCUnionAllSelectRowHash(CGCUnionAllSelect *resultSet, int32_t row)
{
  return CGCUnionAllSelectRowHash(CGCUnionAllSelectFromCGCUnionAllSelect(resultSet), row);
}

static inline BOOL CGCUnionAllSelectRowEqual(CGCUnionAllSelect *resultSet1, int32_t row1, CGCUnionAllSelect *resultSet2, int32_t row2)
{
  return CGCUnionAllSelectRowEqual(CGCUnionAllSelectFromCGCUnionAllSelect(resultSet1), row1, CGCUnionAllSelectFromCGCUnionAllSelect(resultSet2), row2);
}

@class CGCUnionAllWithNullable;

static inline CGCUnionAllWithNullable *CGCUnionAllWithNullableFromCGCUnionAllWithNullable(CGCUnionAllWithNullableResultSetRef resultSet)
{
  return (__bridge CGCUnionAllWithNullable *)resultSet;
}

static inline CGCUnionAllWithNullableResultSetRef CGCUnionAllWithNullableFromCGCUnionAllWithNullable(CGCUnionAllWithNullable *resultSet)
{
  return (__bridge CGCUnionAllWithNullableResultSetRef)resultSet;
}

static inline NSString *_Nullable CGCUnionAllWithNullableGetName(CGCUnionAllWithNullable *resultSet, int32_t row)
{
  CGCUnionAllWithNullableResultSetRef cResultSet = CGCUnionAllWithNullableFromCGCUnionAllWithNullable(resultSet);
  return (__bridge NSString *)CGCUnionAllWithNullableGetName(cResultSet, row);
}

static inline int32_t CGCUnionAllWithNullableResultCount(CGCUnionAllWithNullable *resultSet)
{
  return CGCUnionAllWithNullableResultCount(CGCUnionAllWithNullableFromCGCUnionAllWithNullable(resultSet));
}

static inline CGCUnionAllWithNullable *CGCUnionAllWithNullableCopy(CGCUnionAllWithNullable *resultSet, int32_t from, int32_t count)
{
  CGCUnionAllWithNullableResultSetRef copy;
  CGCUnionAllWithNullableCopy(CGCUnionAllWithNullableFromCGCUnionAllWithNullable(resultSet), &copy, from, count);
  return (__bridge_transfer CGCUnionAllWithNullable *)copy;
}

static inline NSUInteger CGCUnionAllWithNullableRowHash(CGCUnionAllWithNullable *resultSet, int32_t row)
{
  return CGCUnionAllWithNullableRowHash(CGCUnionAllWithNullableFromCGCUnionAllWithNullable(resultSet), row);
}

static inline BOOL CGCUnionAllWithNullableRowEqual(CGCUnionAllWithNullable *resultSet1, int32_t row1, CGCUnionAllWithNullable *resultSet2, int32_t row2)
{
  return CGCUnionAllWithNullableRowEqual(CGCUnionAllWithNullableFromCGCUnionAllWithNullable(resultSet1), row1, CGCUnionAllWithNullableFromCGCUnionAllWithNullable(resultSet2), row2);
}

@class CGCWithStmt;

static inline CGCWithStmt *CGCWithStmtFromCGCWithStmt(CGCWithStmtResultSetRef resultSet)
{
  return (__bridge CGCWithStmt *)resultSet;
}

static inline CGCWithStmtResultSetRef CGCWithStmtFromCGCWithStmt(CGCWithStmt *resultSet)
{
  return (__bridge CGCWithStmtResultSetRef)resultSet;
}

static inline int32_t CGCWithStmtGetA(CGCWithStmt *resultSet, int32_t row)
{
  CGCWithStmtResultSetRef cResultSet = CGCWithStmtFromCGCWithStmt(resultSet);
  return CGCWithStmtGetA(cResultSet, row);
}

static inline int32_t CGCWithStmtGetB(CGCWithStmt *resultSet, int32_t row)
{
  CGCWithStmtResultSetRef cResultSet = CGCWithStmtFromCGCWithStmt(resultSet);
  return CGCWithStmtGetB(cResultSet, row);
}

static inline int32_t CGCWithStmtGetC(CGCWithStmt *resultSet, int32_t row)
{
  CGCWithStmtResultSetRef cResultSet = CGCWithStmtFromCGCWithStmt(resultSet);
  return CGCWithStmtGetC(cResultSet, row);
}

static inline int32_t CGCWithStmtResultCount(CGCWithStmt *resultSet)
{
  return CGCWithStmtResultCount(CGCWithStmtFromCGCWithStmt(resultSet));
}

static inline CGCWithStmt *CGCWithStmtCopy(CGCWithStmt *resultSet, int32_t from, int32_t count)
{
  CGCWithStmtResultSetRef copy;
  CGCWithStmtCopy(CGCWithStmtFromCGCWithStmt(resultSet), &copy, from, count);
  return (__bridge_transfer CGCWithStmt *)copy;
}

static inline NSUInteger CGCWithStmtRowHash(CGCWithStmt *resultSet, int32_t row)
{
  return CGCWithStmtRowHash(CGCWithStmtFromCGCWithStmt(resultSet), row);
}

static inline BOOL CGCWithStmtRowEqual(CGCWithStmt *resultSet1, int32_t row1, CGCWithStmt *resultSet2, int32_t row2)
{
  return CGCWithStmtRowEqual(CGCWithStmtFromCGCWithStmt(resultSet1), row1, CGCWithStmtFromCGCWithStmt(resultSet2), row2);
}

@class CGCWithRecursiveStmt;

static inline CGCWithRecursiveStmt *CGCWithRecursiveStmtFromCGCWithRecursiveStmt(CGCWithRecursiveStmtResultSetRef resultSet)
{
  return (__bridge CGCWithRecursiveStmt *)resultSet;
}

static inline CGCWithRecursiveStmtResultSetRef CGCWithRecursiveStmtFromCGCWithRecursiveStmt(CGCWithRecursiveStmt *resultSet)
{
  return (__bridge CGCWithRecursiveStmtResultSetRef)resultSet;
}

static inline int32_t CGCWithRecursiveStmtGetA(CGCWithRecursiveStmt *resultSet, int32_t row)
{
  CGCWithRecursiveStmtResultSetRef cResultSet = CGCWithRecursiveStmtFromCGCWithRecursiveStmt(resultSet);
  return CGCWithRecursiveStmtGetA(cResultSet, row);
}

static inline int32_t CGCWithRecursiveStmtGetB(CGCWithRecursiveStmt *resultSet, int32_t row)
{
  CGCWithRecursiveStmtResultSetRef cResultSet = CGCWithRecursiveStmtFromCGCWithRecursiveStmt(resultSet);
  return CGCWithRecursiveStmtGetB(cResultSet, row);
}

static inline int32_t CGCWithRecursiveStmtGetC(CGCWithRecursiveStmt *resultSet, int32_t row)
{
  CGCWithRecursiveStmtResultSetRef cResultSet = CGCWithRecursiveStmtFromCGCWithRecursiveStmt(resultSet);
  return CGCWithRecursiveStmtGetC(cResultSet, row);
}

static inline int32_t CGCWithRecursiveStmtResultCount(CGCWithRecursiveStmt *resultSet)
{
  return CGCWithRecursiveStmtResultCount(CGCWithRecursiveStmtFromCGCWithRecursiveStmt(resultSet));
}

static inline CGCWithRecursiveStmt *CGCWithRecursiveStmtCopy(CGCWithRecursiveStmt *resultSet, int32_t from, int32_t count)
{
  CGCWithRecursiveStmtResultSetRef copy;
  CGCWithRecursiveStmtCopy(CGCWithRecursiveStmtFromCGCWithRecursiveStmt(resultSet), &copy, from, count);
  return (__bridge_transfer CGCWithRecursiveStmt *)copy;
}

static inline NSUInteger CGCWithRecursiveStmtRowHash(CGCWithRecursiveStmt *resultSet, int32_t row)
{
  return CGCWithRecursiveStmtRowHash(CGCWithRecursiveStmtFromCGCWithRecursiveStmt(resultSet), row);
}

static inline BOOL CGCWithRecursiveStmtRowEqual(CGCWithRecursiveStmt *resultSet1, int32_t row1, CGCWithRecursiveStmt *resultSet2, int32_t row2)
{
  return CGCWithRecursiveStmtRowEqual(CGCWithRecursiveStmtFromCGCWithRecursiveStmt(resultSet1), row1, CGCWithRecursiveStmtFromCGCWithRecursiveStmt(resultSet2), row2);
}

@class CGCParentProc;

static inline CGCParentProc *CGCParentProcFromCGCParentProc(CGCParentProcResultSetRef resultSet)
{
  return (__bridge CGCParentProc *)resultSet;
}

static inline CGCParentProcResultSetRef CGCParentProcFromCGCParentProc(CGCParentProc *resultSet)
{
  return (__bridge CGCParentProcResultSetRef)resultSet;
}

static inline int32_t CGCParentProcGetOne(CGCParentProc *resultSet, int32_t row)
{
  CGCParentProcResultSetRef cResultSet = CGCParentProcFromCGCParentProc(resultSet);
  return CGCParentProcGetOne(cResultSet, row);
}

static inline int32_t CGCParentProcGetTwo(CGCParentProc *resultSet, int32_t row)
{
  CGCParentProcResultSetRef cResultSet = CGCParentProcFromCGCParentProc(resultSet);
  return CGCParentProcGetTwo(cResultSet, row);
}

static inline int32_t CGCParentProcGetThree(CGCParentProc *resultSet, int32_t row)
{
  CGCParentProcResultSetRef cResultSet = CGCParentProcFromCGCParentProc(resultSet);
  return CGCParentProcGetThree(cResultSet, row);
}

static inline int32_t CGCParentProcResultCount(CGCParentProc *resultSet)
{
  return CGCParentProcResultCount(CGCParentProcFromCGCParentProc(resultSet));
}

static inline CGCParentProc *CGCParentProcCopy(CGCParentProc *resultSet, int32_t from, int32_t count)
{
  CGCParentProcResultSetRef copy;
  CGCParentProcCopy(CGCParentProcFromCGCParentProc(resultSet), &copy, from, count);
  return (__bridge_transfer CGCParentProc *)copy;
}

static inline NSUInteger CGCParentProcRowHash(CGCParentProc *resultSet, int32_t row)
{
  return CGCParentProcRowHash(CGCParentProcFromCGCParentProc(resultSet), row);
}

static inline BOOL CGCParentProcRowEqual(CGCParentProc *resultSet1, int32_t row1, CGCParentProc *resultSet2, int32_t row2)
{
  return CGCParentProcRowEqual(CGCParentProcFromCGCParentProc(resultSet1), row1, CGCParentProcFromCGCParentProc(resultSet2), row2);
}

@class CGCParentProcChild;

static inline CGCParentProcChild *CGCParentProcChildFromCGCParentProcChild(CGCParentProcChildResultSetRef resultSet)
{
  return (__bridge CGCParentProcChild *)resultSet;
}

static inline CGCParentProcChildResultSetRef CGCParentProcChildFromCGCParentProcChild(CGCParentProcChild *resultSet)
{
  return (__bridge CGCParentProcChildResultSetRef)resultSet;
}

static inline int32_t CGCParentProcChildGetFour(CGCParentProcChild *resultSet, int32_t row)
{
  CGCParentProcChildResultSetRef cResultSet = CGCParentProcChildFromCGCParentProcChild(resultSet);
  return CGCParentProcChildGetFour(cResultSet, row);
}

static inline int32_t CGCParentProcChildGetFive(CGCParentProcChild *resultSet, int32_t row)
{
  CGCParentProcChildResultSetRef cResultSet = CGCParentProcChildFromCGCParentProcChild(resultSet);
  return CGCParentProcChildGetFive(cResultSet, row);
}

static inline int32_t CGCParentProcChildGetSix(CGCParentProcChild *resultSet, int32_t row)
{
  CGCParentProcChildResultSetRef cResultSet = CGCParentProcChildFromCGCParentProcChild(resultSet);
  return CGCParentProcChildGetSix(cResultSet, row);
}

static inline int32_t CGCParentProcChildResultCount(CGCParentProcChild *resultSet)
{
  return CGCParentProcChildResultCount(CGCParentProcChildFromCGCParentProcChild(resultSet));
}

static inline CGCParentProcChild *CGCParentProcChildCopy(CGCParentProcChild *resultSet, int32_t from, int32_t count)
{
  CGCParentProcChildResultSetRef copy;
  CGCParentProcChildCopy(CGCParentProcChildFromCGCParentProcChild(resultSet), &copy, from, count);
  return (__bridge_transfer CGCParentProcChild *)copy;
}

static inline NSUInteger CGCParentProcChildRowHash(CGCParentProcChild *resultSet, int32_t row)
{
  return CGCParentProcChildRowHash(CGCParentProcChildFromCGCParentProcChild(resultSet), row);
}

static inline BOOL CGCParentProcChildRowEqual(CGCParentProcChild *resultSet1, int32_t row1, CGCParentProcChild *resultSet2, int32_t row2)
{
  return CGCParentProcChildRowEqual(CGCParentProcChildFromCGCParentProcChild(resultSet1), row1, CGCParentProcChildFromCGCParentProcChild(resultSet2), row2);
}

@class CGCUsesProcForResult;

static inline CGCUsesProcForResult *CGCUsesProcForResultFromCGCUsesProcForResult(CGCUsesProcForResultResultSetRef resultSet)
{
  return (__bridge CGCUsesProcForResult *)resultSet;
}

static inline CGCUsesProcForResultResultSetRef CGCUsesProcForResultFromCGCUsesProcForResult(CGCUsesProcForResult *resultSet)
{
  return (__bridge CGCUsesProcForResultResultSetRef)resultSet;
}

static inline int32_t CGCUsesProcForResultGetId(CGCUsesProcForResult *resultSet, int32_t row)
{
  CGCUsesProcForResultResultSetRef cResultSet = CGCUsesProcForResultFromCGCUsesProcForResult(resultSet);
  return CGCUsesProcForResultGetId(cResultSet, row);
}

static inline NSString *_Nullable CGCUsesProcForResultGetName(CGCUsesProcForResult *resultSet, int32_t row)
{
  CGCUsesProcForResultResultSetRef cResultSet = CGCUsesProcForResultFromCGCUsesProcForResult(resultSet);
  return (__bridge NSString *)CGCUsesProcForResultGetName(cResultSet, row);
}

static inline NSNumber *_Nullable CGCUsesProcForResultGetRate(CGCUsesProcForResult *resultSet, int32_t row)
{
  CGCUsesProcForResultResultSetRef cResultSet = CGCUsesProcForResultFromCGCUsesProcForResult(resultSet);
  return CGCUsesProcForResultGetRateIsNull(cResultSet, row) ? nil : @(CGCUsesProcForResultGetRateValue(cResultSet, row));
}

static inline NSNumber *_Nullable CGCUsesProcForResultGetType(CGCUsesProcForResult *resultSet, int32_t row)
{
  CGCUsesProcForResultResultSetRef cResultSet = CGCUsesProcForResultFromCGCUsesProcForResult(resultSet);
  return CGCUsesProcForResultGetTypeIsNull(cResultSet, row) ? nil : @(CGCUsesProcForResultGetTypeValue(cResultSet, row));
}

static inline NSNumber *_Nullable CGCUsesProcForResultGetSize(CGCUsesProcForResult *resultSet, int32_t row)
{
  CGCUsesProcForResultResultSetRef cResultSet = CGCUsesProcForResultFromCGCUsesProcForResult(resultSet);
  return CGCUsesProcForResultGetSizeIsNull(cResultSet, row) ? nil : @(CGCUsesProcForResultGetSizeValue(cResultSet, row));
}

static inline int32_t CGCUsesProcForResultResultCount(CGCUsesProcForResult *resultSet)
{
  return CGCUsesProcForResultResultCount(CGCUsesProcForResultFromCGCUsesProcForResult(resultSet));
}

static inline CGCUsesProcForResult *CGCUsesProcForResultCopy(CGCUsesProcForResult *resultSet, int32_t from, int32_t count)
{
  CGCUsesProcForResultResultSetRef copy;
  CGCUsesProcForResultCopy(CGCUsesProcForResultFromCGCUsesProcForResult(resultSet), &copy, from, count);
  return (__bridge_transfer CGCUsesProcForResult *)copy;
}

static inline NSUInteger CGCUsesProcForResultRowHash(CGCUsesProcForResult *resultSet, int32_t row)
{
  return CGCUsesProcForResultRowHash(CGCUsesProcForResultFromCGCUsesProcForResult(resultSet), row);
}

static inline BOOL CGCUsesProcForResultRowEqual(CGCUsesProcForResult *resultSet1, int32_t row1, CGCUsesProcForResult *resultSet2, int32_t row2)
{
  return CGCUsesProcForResultRowEqual(CGCUsesProcForResultFromCGCUsesProcForResult(resultSet1), row1, CGCUsesProcForResultFromCGCUsesProcForResult(resultSet2), row2);
}

@class CGCBlobReturner;

static inline CGCBlobReturner *CGCBlobReturnerFromCGCBlobReturner(CGCBlobReturnerResultSetRef resultSet)
{
  return (__bridge CGCBlobReturner *)resultSet;
}

static inline CGCBlobReturnerResultSetRef CGCBlobReturnerFromCGCBlobReturner(CGCBlobReturner *resultSet)
{
  return (__bridge CGCBlobReturnerResultSetRef)resultSet;
}

static inline int32_t CGCBlobReturnerGetBlobId(CGCBlobReturner *resultSet, int32_t row)
{
  CGCBlobReturnerResultSetRef cResultSet = CGCBlobReturnerFromCGCBlobReturner(resultSet);
  return CGCBlobReturnerGetBlobId(cResultSet, row);
}

static inline NSData *CGCBlobReturnerGetBNotnull(CGCBlobReturner *resultSet, int32_t row)
{
  CGCBlobReturnerResultSetRef cResultSet = CGCBlobReturnerFromCGCBlobReturner(resultSet);
  return (__bridge NSData *)CGCBlobReturnerGetBNotnull(cResultSet, row);
}

static inline NSData *_Nullable CGCBlobReturnerGetBNullable(CGCBlobReturner *resultSet, int32_t row)
{
  CGCBlobReturnerResultSetRef cResultSet = CGCBlobReturnerFromCGCBlobReturner(resultSet);
  return (__bridge NSData *)CGCBlobReturnerGetBNullable(cResultSet, row);
}

static inline int32_t CGCBlobReturnerResultCount(CGCBlobReturner *resultSet)
{
  return CGCBlobReturnerResultCount(CGCBlobReturnerFromCGCBlobReturner(resultSet));
}

static inline CGCBlobReturner *CGCBlobReturnerCopy(CGCBlobReturner *resultSet, int32_t from, int32_t count)
{
  CGCBlobReturnerResultSetRef copy;
  CGCBlobReturnerCopy(CGCBlobReturnerFromCGCBlobReturner(resultSet), &copy, from, count);
  return (__bridge_transfer CGCBlobReturner *)copy;
}

static inline NSUInteger CGCBlobReturnerRowHash(CGCBlobReturner *resultSet, int32_t row)
{
  return CGCBlobReturnerRowHash(CGCBlobReturnerFromCGCBlobReturner(resultSet), row);
}

static inline BOOL CGCBlobReturnerRowEqual(CGCBlobReturner *resultSet1, int32_t row1, CGCBlobReturner *resultSet2, int32_t row2)
{
  return CGCBlobReturnerRowEqual(CGCBlobReturnerFromCGCBlobReturner(resultSet1), row1, CGCBlobReturnerFromCGCBlobReturner(resultSet2), row2);
}

@class CGCOutCursorProc;

static inline CGCOutCursorProc *CGCOutCursorProcFromCGCOutCursorProc(CGCOutCursorProcResultSetRef resultSet)
{
  return (__bridge CGCOutCursorProc *)resultSet;
}

static inline CGCOutCursorProcResultSetRef CGCOutCursorProcFromCGCOutCursorProc(CGCOutCursorProc *resultSet)
{
  return (__bridge CGCOutCursorProcResultSetRef)resultSet;
}

static inline int32_t CGCOutCursorProcGetId(CGCOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromCGCOutCursorProc(resultSet);
  return CGCOutCursorProcGetId(cResultSet);
}

static inline NSString *_Nullable CGCOutCursorProcGetName(CGCOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromCGCOutCursorProc(resultSet);
  return (__bridge NSString *)CGCOutCursorProcGetName(cResultSet);
}

static inline NSNumber *_Nullable CGCOutCursorProcGetRate(CGCOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromCGCOutCursorProc(resultSet);
  return CGCOutCursorProcGetRateIsNull(cResultSet) ? nil : @(CGCOutCursorProcGetRateValue(cResultSet));
}

static inline NSNumber *_Nullable CGCOutCursorProcGetType(CGCOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromCGCOutCursorProc(resultSet);
  return CGCOutCursorProcGetTypeIsNull(cResultSet) ? nil : @(CGCOutCursorProcGetTypeValue(cResultSet));
}

static inline NSNumber *_Nullable CGCOutCursorProcGetSize(CGCOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromCGCOutCursorProc(resultSet);
  return CGCOutCursorProcGetSizeIsNull(cResultSet) ? nil : @(CGCOutCursorProcGetSizeValue(cResultSet));
}

static inline NSString *CGCOutCursorProcGetExtra1(CGCOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromCGCOutCursorProc(resultSet);
  return (__bridge NSString *)CGCOutCursorProcGetExtra1(cResultSet);
}

static inline NSString *CGCOutCursorProcGetExtra2(CGCOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromCGCOutCursorProc(resultSet);
  return (__bridge NSString *)CGCOutCursorProcGetExtra2(cResultSet);
}

static inline int32_t CGCOutCursorProcResultCount(CGCOutCursorProc *resultSet)
{
  return CGCOutCursorProcResultCount(CGCOutCursorProcFromCGCOutCursorProc(resultSet));
}

static inline CGCOutCursorProc *CGCOutCursorProcCopy(CGCOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef copy;
  CGCOutCursorProcCopy(CGCOutCursorProcFromCGCOutCursorProc(resultSet), &copy);
  return (__bridge_transfer CGCOutCursorProc *)copy;
}

static inline NSUInteger CGCOutCursorProcHash(CGCOutCursorProc *resultSet)
{
  return CGCOutCursorProcHash(CGCOutCursorProcFromCGCOutCursorProc(resultSet));
}

static inline BOOL CGCOutCursorProcEqual(CGCOutCursorProc *resultSet1, CGCOutCursorProc *resultSet2)
{
  return CGCOutCursorProcEqual(CGCOutCursorProcFromCGCOutCursorProc(resultSet1), CGCOutCursorProcFromCGCOutCursorProc(resultSet2));
}

@class CGCThreadThemeInfoList;

static inline CGCThreadThemeInfoList *CGCThreadThemeInfoListFromCGCThreadThemeInfoList(CGCThreadThemeInfoListResultSetRef resultSet)
{
  return (__bridge CGCThreadThemeInfoList *)resultSet;
}

static inline CGCThreadThemeInfoListResultSetRef CGCThreadThemeInfoListFromCGCThreadThemeInfoList(CGCThreadThemeInfoList *resultSet)
{
  return (__bridge CGCThreadThemeInfoListResultSetRef)resultSet;
}

static inline int64_t CGCThreadThemeInfoListGetThreadKey(CGCThreadThemeInfoList *resultSet, int32_t row)
{
  CGCThreadThemeInfoListResultSetRef cResultSet = CGCThreadThemeInfoListFromCGCThreadThemeInfoList(resultSet);
  return CGCThreadThemeInfoListGetThreadKey(cResultSet, row);
}

static inline int32_t CGCThreadThemeInfoListResultCount(CGCThreadThemeInfoList *resultSet)
{
  return CGCThreadThemeInfoListResultCount(CGCThreadThemeInfoListFromCGCThreadThemeInfoList(resultSet));
}

static inline CGCThreadThemeInfoList *CGCThreadThemeInfoListCopy(CGCThreadThemeInfoList *resultSet, int32_t from, int32_t count)
{
  CGCThreadThemeInfoListResultSetRef copy;
  CGCThreadThemeInfoListCopy(CGCThreadThemeInfoListFromCGCThreadThemeInfoList(resultSet), &copy, from, count);
  return (__bridge_transfer CGCThreadThemeInfoList *)copy;
}

static inline NSUInteger CGCThreadThemeInfoListRowHash(CGCThreadThemeInfoList *resultSet, int32_t row)
{
  return CGCThreadThemeInfoListRowHash(CGCThreadThemeInfoListFromCGCThreadThemeInfoList(resultSet), row);
}

static inline BOOL CGCThreadThemeInfoListRowEqual(CGCThreadThemeInfoList *resultSet1, int32_t row1, CGCThreadThemeInfoList *resultSet2, int32_t row2)
{
  return CGCThreadThemeInfoListRowEqual(CGCThreadThemeInfoListFromCGCThreadThemeInfoList(resultSet1), row1, CGCThreadThemeInfoListFromCGCThreadThemeInfoList(resultSet2), row2);
}

@class CGCOutNoDb;

static inline CGCOutNoDb *CGCOutNoDbFromCGCOutNoDb(CGCOutNoDbResultSetRef resultSet)
{
  return (__bridge CGCOutNoDb *)resultSet;
}

static inline CGCOutNoDbResultSetRef CGCOutNoDbFromCGCOutNoDb(CGCOutNoDb *resultSet)
{
  return (__bridge CGCOutNoDbResultSetRef)resultSet;
}

static inline int32_t CGCOutNoDbGetA(CGCOutNoDb *resultSet)
{
  CGCOutNoDbResultSetRef cResultSet = CGCOutNoDbFromCGCOutNoDb(resultSet);
  return CGCOutNoDbGetA(cResultSet);
}

static inline double CGCOutNoDbGetB(CGCOutNoDb *resultSet)
{
  CGCOutNoDbResultSetRef cResultSet = CGCOutNoDbFromCGCOutNoDb(resultSet);
  return CGCOutNoDbGetB(cResultSet);
}

static inline int32_t CGCOutNoDbResultCount(CGCOutNoDb *resultSet)
{
  return CGCOutNoDbResultCount(CGCOutNoDbFromCGCOutNoDb(resultSet));
}

static inline CGCOutNoDb *CGCOutNoDbCopy(CGCOutNoDb *resultSet)
{
  CGCOutNoDbResultSetRef copy;
  CGCOutNoDbCopy(CGCOutNoDbFromCGCOutNoDb(resultSet), &copy);
  return (__bridge_transfer CGCOutNoDb *)copy;
}

static inline NSUInteger CGCOutNoDbHash(CGCOutNoDb *resultSet)
{
  return CGCOutNoDbHash(CGCOutNoDbFromCGCOutNoDb(resultSet));
}

static inline BOOL CGCOutNoDbEqual(CGCOutNoDb *resultSet1, CGCOutNoDb *resultSet2)
{
  return CGCOutNoDbEqual(CGCOutNoDbFromCGCOutNoDb(resultSet1), CGCOutNoDbFromCGCOutNoDb(resultSet2));
}

@class CGCDeclareCursorLikeCursor;

static inline CGCDeclareCursorLikeCursor *CGCDeclareCursorLikeCursorFromCGCDeclareCursorLikeCursor(CGCDeclareCursorLikeCursorResultSetRef resultSet)
{
  return (__bridge CGCDeclareCursorLikeCursor *)resultSet;
}

static inline CGCDeclareCursorLikeCursorResultSetRef CGCDeclareCursorLikeCursorFromCGCDeclareCursorLikeCursor(CGCDeclareCursorLikeCursor *resultSet)
{
  return (__bridge CGCDeclareCursorLikeCursorResultSetRef)resultSet;
}

static inline int32_t CGCDeclareCursorLikeCursorGetA(CGCDeclareCursorLikeCursor *resultSet)
{
  CGCDeclareCursorLikeCursorResultSetRef cResultSet = CGCDeclareCursorLikeCursorFromCGCDeclareCursorLikeCursor(resultSet);
  return CGCDeclareCursorLikeCursorGetA(cResultSet);
}

static inline double CGCDeclareCursorLikeCursorGetB(CGCDeclareCursorLikeCursor *resultSet)
{
  CGCDeclareCursorLikeCursorResultSetRef cResultSet = CGCDeclareCursorLikeCursorFromCGCDeclareCursorLikeCursor(resultSet);
  return CGCDeclareCursorLikeCursorGetB(cResultSet);
}

static inline int32_t CGCDeclareCursorLikeCursorResultCount(CGCDeclareCursorLikeCursor *resultSet)
{
  return CGCDeclareCursorLikeCursorResultCount(CGCDeclareCursorLikeCursorFromCGCDeclareCursorLikeCursor(resultSet));
}

static inline CGCDeclareCursorLikeCursor *CGCDeclareCursorLikeCursorCopy(CGCDeclareCursorLikeCursor *resultSet)
{
  CGCDeclareCursorLikeCursorResultSetRef copy;
  CGCDeclareCursorLikeCursorCopy(CGCDeclareCursorLikeCursorFromCGCDeclareCursorLikeCursor(resultSet), &copy);
  return (__bridge_transfer CGCDeclareCursorLikeCursor *)copy;
}

static inline NSUInteger CGCDeclareCursorLikeCursorHash(CGCDeclareCursorLikeCursor *resultSet)
{
  return CGCDeclareCursorLikeCursorHash(CGCDeclareCursorLikeCursorFromCGCDeclareCursorLikeCursor(resultSet));
}

static inline BOOL CGCDeclareCursorLikeCursorEqual(CGCDeclareCursorLikeCursor *resultSet1, CGCDeclareCursorLikeCursor *resultSet2)
{
  return CGCDeclareCursorLikeCursorEqual(CGCDeclareCursorLikeCursorFromCGCDeclareCursorLikeCursor(resultSet1), CGCDeclareCursorLikeCursorFromCGCDeclareCursorLikeCursor(resultSet2));
}

@class CGCDeclareCursorLikeProc;

static inline CGCDeclareCursorLikeProc *CGCDeclareCursorLikeProcFromCGCDeclareCursorLikeProc(CGCDeclareCursorLikeProcResultSetRef resultSet)
{
  return (__bridge CGCDeclareCursorLikeProc *)resultSet;
}

static inline CGCDeclareCursorLikeProcResultSetRef CGCDeclareCursorLikeProcFromCGCDeclareCursorLikeProc(CGCDeclareCursorLikeProc *resultSet)
{
  return (__bridge CGCDeclareCursorLikeProcResultSetRef)resultSet;
}

static inline NSNumber *_Nullable CGCDeclareCursorLikeProcGetA(CGCDeclareCursorLikeProc *resultSet)
{
  CGCDeclareCursorLikeProcResultSetRef cResultSet = CGCDeclareCursorLikeProcFromCGCDeclareCursorLikeProc(resultSet);
  return CGCDeclareCursorLikeProcGetAIsNull(cResultSet) ? nil : @(CGCDeclareCursorLikeProcGetAValue(cResultSet));
}

static inline NSString *_Nullable CGCDeclareCursorLikeProcGetB(CGCDeclareCursorLikeProc *resultSet)
{
  CGCDeclareCursorLikeProcResultSetRef cResultSet = CGCDeclareCursorLikeProcFromCGCDeclareCursorLikeProc(resultSet);
  return (__bridge NSString *)CGCDeclareCursorLikeProcGetB(cResultSet);
}

static inline int32_t CGCDeclareCursorLikeProcResultCount(CGCDeclareCursorLikeProc *resultSet)
{
  return CGCDeclareCursorLikeProcResultCount(CGCDeclareCursorLikeProcFromCGCDeclareCursorLikeProc(resultSet));
}

static inline CGCDeclareCursorLikeProc *CGCDeclareCursorLikeProcCopy(CGCDeclareCursorLikeProc *resultSet)
{
  CGCDeclareCursorLikeProcResultSetRef copy;
  CGCDeclareCursorLikeProcCopy(CGCDeclareCursorLikeProcFromCGCDeclareCursorLikeProc(resultSet), &copy);
  return (__bridge_transfer CGCDeclareCursorLikeProc *)copy;
}

static inline NSUInteger CGCDeclareCursorLikeProcHash(CGCDeclareCursorLikeProc *resultSet)
{
  return CGCDeclareCursorLikeProcHash(CGCDeclareCursorLikeProcFromCGCDeclareCursorLikeProc(resultSet));
}

static inline BOOL CGCDeclareCursorLikeProcEqual(CGCDeclareCursorLikeProc *resultSet1, CGCDeclareCursorLikeProc *resultSet2)
{
  return CGCDeclareCursorLikeProcEqual(CGCDeclareCursorLikeProcFromCGCDeclareCursorLikeProc(resultSet1), CGCDeclareCursorLikeProcFromCGCDeclareCursorLikeProc(resultSet2));
}

@class CGCDeclareCursorLikeTable;

static inline CGCDeclareCursorLikeTable *CGCDeclareCursorLikeTableFromCGCDeclareCursorLikeTable(CGCDeclareCursorLikeTableResultSetRef resultSet)
{
  return (__bridge CGCDeclareCursorLikeTable *)resultSet;
}

static inline CGCDeclareCursorLikeTableResultSetRef CGCDeclareCursorLikeTableFromCGCDeclareCursorLikeTable(CGCDeclareCursorLikeTable *resultSet)
{
  return (__bridge CGCDeclareCursorLikeTableResultSetRef)resultSet;
}

static inline int32_t CGCDeclareCursorLikeTableGetId(CGCDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef cResultSet = CGCDeclareCursorLikeTableFromCGCDeclareCursorLikeTable(resultSet);
  return CGCDeclareCursorLikeTableGetId(cResultSet);
}

static inline NSString *_Nullable CGCDeclareCursorLikeTableGetName(CGCDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef cResultSet = CGCDeclareCursorLikeTableFromCGCDeclareCursorLikeTable(resultSet);
  return (__bridge NSString *)CGCDeclareCursorLikeTableGetName(cResultSet);
}

static inline NSNumber *_Nullable CGCDeclareCursorLikeTableGetRate(CGCDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef cResultSet = CGCDeclareCursorLikeTableFromCGCDeclareCursorLikeTable(resultSet);
  return CGCDeclareCursorLikeTableGetRateIsNull(cResultSet) ? nil : @(CGCDeclareCursorLikeTableGetRateValue(cResultSet));
}

static inline NSNumber *_Nullable CGCDeclareCursorLikeTableGetType(CGCDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef cResultSet = CGCDeclareCursorLikeTableFromCGCDeclareCursorLikeTable(resultSet);
  return CGCDeclareCursorLikeTableGetTypeIsNull(cResultSet) ? nil : @(CGCDeclareCursorLikeTableGetTypeValue(cResultSet));
}

static inline NSNumber *_Nullable CGCDeclareCursorLikeTableGetSize(CGCDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef cResultSet = CGCDeclareCursorLikeTableFromCGCDeclareCursorLikeTable(resultSet);
  return CGCDeclareCursorLikeTableGetSizeIsNull(cResultSet) ? nil : @(CGCDeclareCursorLikeTableGetSizeValue(cResultSet));
}

static inline int32_t CGCDeclareCursorLikeTableResultCount(CGCDeclareCursorLikeTable *resultSet)
{
  return CGCDeclareCursorLikeTableResultCount(CGCDeclareCursorLikeTableFromCGCDeclareCursorLikeTable(resultSet));
}

static inline CGCDeclareCursorLikeTable *CGCDeclareCursorLikeTableCopy(CGCDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef copy;
  CGCDeclareCursorLikeTableCopy(CGCDeclareCursorLikeTableFromCGCDeclareCursorLikeTable(resultSet), &copy);
  return (__bridge_transfer CGCDeclareCursorLikeTable *)copy;
}

static inline NSUInteger CGCDeclareCursorLikeTableHash(CGCDeclareCursorLikeTable *resultSet)
{
  return CGCDeclareCursorLikeTableHash(CGCDeclareCursorLikeTableFromCGCDeclareCursorLikeTable(resultSet));
}

static inline BOOL CGCDeclareCursorLikeTableEqual(CGCDeclareCursorLikeTable *resultSet1, CGCDeclareCursorLikeTable *resultSet2)
{
  return CGCDeclareCursorLikeTableEqual(CGCDeclareCursorLikeTableFromCGCDeclareCursorLikeTable(resultSet1), CGCDeclareCursorLikeTableFromCGCDeclareCursorLikeTable(resultSet2));
}

@class CGCDeclareCursorLikeView;

static inline CGCDeclareCursorLikeView *CGCDeclareCursorLikeViewFromCGCDeclareCursorLikeView(CGCDeclareCursorLikeViewResultSetRef resultSet)
{
  return (__bridge CGCDeclareCursorLikeView *)resultSet;
}

static inline CGCDeclareCursorLikeViewResultSetRef CGCDeclareCursorLikeViewFromCGCDeclareCursorLikeView(CGCDeclareCursorLikeView *resultSet)
{
  return (__bridge CGCDeclareCursorLikeViewResultSetRef)resultSet;
}

static inline int32_t CGCDeclareCursorLikeViewGetF1(CGCDeclareCursorLikeView *resultSet)
{
  CGCDeclareCursorLikeViewResultSetRef cResultSet = CGCDeclareCursorLikeViewFromCGCDeclareCursorLikeView(resultSet);
  return CGCDeclareCursorLikeViewGetF1(cResultSet);
}

static inline int32_t CGCDeclareCursorLikeViewGetF2(CGCDeclareCursorLikeView *resultSet)
{
  CGCDeclareCursorLikeViewResultSetRef cResultSet = CGCDeclareCursorLikeViewFromCGCDeclareCursorLikeView(resultSet);
  return CGCDeclareCursorLikeViewGetF2(cResultSet);
}

static inline int32_t CGCDeclareCursorLikeViewGetF3(CGCDeclareCursorLikeView *resultSet)
{
  CGCDeclareCursorLikeViewResultSetRef cResultSet = CGCDeclareCursorLikeViewFromCGCDeclareCursorLikeView(resultSet);
  return CGCDeclareCursorLikeViewGetF3(cResultSet);
}

static inline int32_t CGCDeclareCursorLikeViewResultCount(CGCDeclareCursorLikeView *resultSet)
{
  return CGCDeclareCursorLikeViewResultCount(CGCDeclareCursorLikeViewFromCGCDeclareCursorLikeView(resultSet));
}

static inline CGCDeclareCursorLikeView *CGCDeclareCursorLikeViewCopy(CGCDeclareCursorLikeView *resultSet)
{
  CGCDeclareCursorLikeViewResultSetRef copy;
  CGCDeclareCursorLikeViewCopy(CGCDeclareCursorLikeViewFromCGCDeclareCursorLikeView(resultSet), &copy);
  return (__bridge_transfer CGCDeclareCursorLikeView *)copy;
}

static inline NSUInteger CGCDeclareCursorLikeViewHash(CGCDeclareCursorLikeView *resultSet)
{
  return CGCDeclareCursorLikeViewHash(CGCDeclareCursorLikeViewFromCGCDeclareCursorLikeView(resultSet));
}

static inline BOOL CGCDeclareCursorLikeViewEqual(CGCDeclareCursorLikeView *resultSet1, CGCDeclareCursorLikeView *resultSet2)
{
  return CGCDeclareCursorLikeViewEqual(CGCDeclareCursorLikeViewFromCGCDeclareCursorLikeView(resultSet1), CGCDeclareCursorLikeViewFromCGCDeclareCursorLikeView(resultSet2));
}

@class CGCFetchToCursorFromCursor;

static inline CGCFetchToCursorFromCursor *CGCFetchToCursorFromCursorFromCGCFetchToCursorFromCursor(CGCFetchToCursorFromCursorResultSetRef resultSet)
{
  return (__bridge CGCFetchToCursorFromCursor *)resultSet;
}

static inline CGCFetchToCursorFromCursorResultSetRef CGCFetchToCursorFromCursorFromCGCFetchToCursorFromCursor(CGCFetchToCursorFromCursor *resultSet)
{
  return (__bridge CGCFetchToCursorFromCursorResultSetRef)resultSet;
}

static inline int32_t CGCFetchToCursorFromCursorGetA(CGCFetchToCursorFromCursor *resultSet)
{
  CGCFetchToCursorFromCursorResultSetRef cResultSet = CGCFetchToCursorFromCursorFromCGCFetchToCursorFromCursor(resultSet);
  return CGCFetchToCursorFromCursorGetA(cResultSet);
}

static inline NSString *CGCFetchToCursorFromCursorGetB(CGCFetchToCursorFromCursor *resultSet)
{
  CGCFetchToCursorFromCursorResultSetRef cResultSet = CGCFetchToCursorFromCursorFromCGCFetchToCursorFromCursor(resultSet);
  return (__bridge NSString *)CGCFetchToCursorFromCursorGetB(cResultSet);
}

static inline int32_t CGCFetchToCursorFromCursorResultCount(CGCFetchToCursorFromCursor *resultSet)
{
  return CGCFetchToCursorFromCursorResultCount(CGCFetchToCursorFromCursorFromCGCFetchToCursorFromCursor(resultSet));
}

static inline CGCFetchToCursorFromCursor *CGCFetchToCursorFromCursorCopy(CGCFetchToCursorFromCursor *resultSet)
{
  CGCFetchToCursorFromCursorResultSetRef copy;
  CGCFetchToCursorFromCursorCopy(CGCFetchToCursorFromCursorFromCGCFetchToCursorFromCursor(resultSet), &copy);
  return (__bridge_transfer CGCFetchToCursorFromCursor *)copy;
}

static inline NSUInteger CGCFetchToCursorFromCursorHash(CGCFetchToCursorFromCursor *resultSet)
{
  return CGCFetchToCursorFromCursorHash(CGCFetchToCursorFromCursorFromCGCFetchToCursorFromCursor(resultSet));
}

static inline BOOL CGCFetchToCursorFromCursorEqual(CGCFetchToCursorFromCursor *resultSet1, CGCFetchToCursorFromCursor *resultSet2)
{
  return CGCFetchToCursorFromCursorEqual(CGCFetchToCursorFromCursorFromCGCFetchToCursorFromCursor(resultSet1), CGCFetchToCursorFromCursorFromCGCFetchToCursorFromCursor(resultSet2));
}

@class CGCSimpleIdentity;

static inline CGCSimpleIdentity *CGCSimpleIdentityFromCGCSimpleIdentity(CGCSimpleIdentityResultSetRef resultSet)
{
  return (__bridge CGCSimpleIdentity *)resultSet;
}

static inline CGCSimpleIdentityResultSetRef CGCSimpleIdentityFromCGCSimpleIdentity(CGCSimpleIdentity *resultSet)
{
  return (__bridge CGCSimpleIdentityResultSetRef)resultSet;
}

static inline int32_t CGCSimpleIdentityGetId(CGCSimpleIdentity *resultSet, int32_t row)
{
  CGCSimpleIdentityResultSetRef cResultSet = CGCSimpleIdentityFromCGCSimpleIdentity(resultSet);
  return CGCSimpleIdentityGetId(cResultSet, row);
}

static inline int32_t CGCSimpleIdentityGetData(CGCSimpleIdentity *resultSet, int32_t row)
{
  CGCSimpleIdentityResultSetRef cResultSet = CGCSimpleIdentityFromCGCSimpleIdentity(resultSet);
  return CGCSimpleIdentityGetData(cResultSet, row);
}

static inline int32_t CGCSimpleIdentityResultCount(CGCSimpleIdentity *resultSet)
{
  return CGCSimpleIdentityResultCount(CGCSimpleIdentityFromCGCSimpleIdentity(resultSet));
}

static inline CGCSimpleIdentity *CGCSimpleIdentityCopy(CGCSimpleIdentity *resultSet, int32_t from, int32_t count)
{
  CGCSimpleIdentityResultSetRef copy;
  CGCSimpleIdentityCopy(CGCSimpleIdentityFromCGCSimpleIdentity(resultSet), &copy, from, count);
  return (__bridge_transfer CGCSimpleIdentity *)copy;
}

static inline NSUInteger CGCSimpleIdentityRowHash(CGCSimpleIdentity *resultSet, int32_t row)
{
  return CGCSimpleIdentityRowHash(CGCSimpleIdentityFromCGCSimpleIdentity(resultSet), row);
}

static inline BOOL CGCSimpleIdentityRowEqual(CGCSimpleIdentity *resultSet1, int32_t row1, CGCSimpleIdentity *resultSet2, int32_t row2)
{
  return CGCSimpleIdentityRowEqual(CGCSimpleIdentityFromCGCSimpleIdentity(resultSet1), row1, CGCSimpleIdentityFromCGCSimpleIdentity(resultSet2), row2);
}

@class CGCComplexIdentity;

static inline CGCComplexIdentity *CGCComplexIdentityFromCGCComplexIdentity(CGCComplexIdentityResultSetRef resultSet)
{
  return (__bridge CGCComplexIdentity *)resultSet;
}

static inline CGCComplexIdentityResultSetRef CGCComplexIdentityFromCGCComplexIdentity(CGCComplexIdentity *resultSet)
{
  return (__bridge CGCComplexIdentityResultSetRef)resultSet;
}

static inline int32_t CGCComplexIdentityGetCol1(CGCComplexIdentity *resultSet, int32_t row)
{
  CGCComplexIdentityResultSetRef cResultSet = CGCComplexIdentityFromCGCComplexIdentity(resultSet);
  return CGCComplexIdentityGetCol1(cResultSet, row);
}

static inline int32_t CGCComplexIdentityGetCol2(CGCComplexIdentity *resultSet, int32_t row)
{
  CGCComplexIdentityResultSetRef cResultSet = CGCComplexIdentityFromCGCComplexIdentity(resultSet);
  return CGCComplexIdentityGetCol2(cResultSet, row);
}

static inline int32_t CGCComplexIdentityGetData(CGCComplexIdentity *resultSet, int32_t row)
{
  CGCComplexIdentityResultSetRef cResultSet = CGCComplexIdentityFromCGCComplexIdentity(resultSet);
  return CGCComplexIdentityGetData(cResultSet, row);
}

static inline int32_t CGCComplexIdentityResultCount(CGCComplexIdentity *resultSet)
{
  return CGCComplexIdentityResultCount(CGCComplexIdentityFromCGCComplexIdentity(resultSet));
}

static inline CGCComplexIdentity *CGCComplexIdentityCopy(CGCComplexIdentity *resultSet, int32_t from, int32_t count)
{
  CGCComplexIdentityResultSetRef copy;
  CGCComplexIdentityCopy(CGCComplexIdentityFromCGCComplexIdentity(resultSet), &copy, from, count);
  return (__bridge_transfer CGCComplexIdentity *)copy;
}

static inline NSUInteger CGCComplexIdentityRowHash(CGCComplexIdentity *resultSet, int32_t row)
{
  return CGCComplexIdentityRowHash(CGCComplexIdentityFromCGCComplexIdentity(resultSet), row);
}

static inline BOOL CGCComplexIdentityRowEqual(CGCComplexIdentity *resultSet1, int32_t row1, CGCComplexIdentity *resultSet2, int32_t row2)
{
  return CGCComplexIdentityRowEqual(CGCComplexIdentityFromCGCComplexIdentity(resultSet1), row1, CGCComplexIdentityFromCGCComplexIdentity(resultSet2), row2);
}

@class CGCOutCursorIdentity;

static inline CGCOutCursorIdentity *CGCOutCursorIdentityFromCGCOutCursorIdentity(CGCOutCursorIdentityResultSetRef resultSet)
{
  return (__bridge CGCOutCursorIdentity *)resultSet;
}

static inline CGCOutCursorIdentityResultSetRef CGCOutCursorIdentityFromCGCOutCursorIdentity(CGCOutCursorIdentity *resultSet)
{
  return (__bridge CGCOutCursorIdentityResultSetRef)resultSet;
}

static inline int32_t CGCOutCursorIdentityGetId(CGCOutCursorIdentity *resultSet)
{
  CGCOutCursorIdentityResultSetRef cResultSet = CGCOutCursorIdentityFromCGCOutCursorIdentity(resultSet);
  return CGCOutCursorIdentityGetId(cResultSet);
}

static inline int32_t CGCOutCursorIdentityGetData(CGCOutCursorIdentity *resultSet)
{
  CGCOutCursorIdentityResultSetRef cResultSet = CGCOutCursorIdentityFromCGCOutCursorIdentity(resultSet);
  return CGCOutCursorIdentityGetData(cResultSet);
}

static inline int32_t CGCOutCursorIdentityResultCount(CGCOutCursorIdentity *resultSet)
{
  return CGCOutCursorIdentityResultCount(CGCOutCursorIdentityFromCGCOutCursorIdentity(resultSet));
}

static inline CGCOutCursorIdentity *CGCOutCursorIdentityCopy(CGCOutCursorIdentity *resultSet)
{
  CGCOutCursorIdentityResultSetRef copy;
  CGCOutCursorIdentityCopy(CGCOutCursorIdentityFromCGCOutCursorIdentity(resultSet), &copy);
  return (__bridge_transfer CGCOutCursorIdentity *)copy;
}

static inline NSUInteger CGCOutCursorIdentityHash(CGCOutCursorIdentity *resultSet)
{
  return CGCOutCursorIdentityHash(CGCOutCursorIdentityFromCGCOutCursorIdentity(resultSet));
}

static inline BOOL CGCOutCursorIdentityEqual(CGCOutCursorIdentity *resultSet1, CGCOutCursorIdentity *resultSet2)
{
  return CGCOutCursorIdentityEqual(CGCOutCursorIdentityFromCGCOutCursorIdentity(resultSet1), CGCOutCursorIdentityFromCGCOutCursorIdentity(resultSet2));
}

@class CGCRadioactiveProc;

static inline CGCRadioactiveProc *CGCRadioactiveProcFromCGCRadioactiveProc(CGCRadioactiveProcResultSetRef resultSet)
{
  return (__bridge CGCRadioactiveProc *)resultSet;
}

static inline CGCRadioactiveProcResultSetRef CGCRadioactiveProcFromCGCRadioactiveProc(CGCRadioactiveProc *resultSet)
{
  return (__bridge CGCRadioactiveProcResultSetRef)resultSet;
}

static inline int32_t CGCRadioactiveProcGetId(CGCRadioactiveProc *resultSet, int32_t row)
{
  CGCRadioactiveProcResultSetRef cResultSet = CGCRadioactiveProcFromCGCRadioactiveProc(resultSet);
  return CGCRadioactiveProcGetId(cResultSet, row);
}

static inline NSString *_Nullable CGCRadioactiveProcGetData(CGCRadioactiveProc *resultSet, int32_t row)
{
  CGCRadioactiveProcResultSetRef cResultSet = CGCRadioactiveProcFromCGCRadioactiveProc(resultSet);
  return (__bridge NSString *)CGCRadioactiveProcGetData(cResultSet, row);
}

static inline int32_t CGCRadioactiveProcResultCount(CGCRadioactiveProc *resultSet)
{
  return CGCRadioactiveProcResultCount(CGCRadioactiveProcFromCGCRadioactiveProc(resultSet));
}

static inline CGCRadioactiveProc *CGCRadioactiveProcCopy(CGCRadioactiveProc *resultSet, int32_t from, int32_t count)
{
  CGCRadioactiveProcResultSetRef copy;
  CGCRadioactiveProcCopy(CGCRadioactiveProcFromCGCRadioactiveProc(resultSet), &copy, from, count);
  return (__bridge_transfer CGCRadioactiveProc *)copy;
}

static inline NSUInteger CGCRadioactiveProcRowHash(CGCRadioactiveProc *resultSet, int32_t row)
{
  return CGCRadioactiveProcRowHash(CGCRadioactiveProcFromCGCRadioactiveProc(resultSet), row);
}

static inline BOOL CGCRadioactiveProcRowEqual(CGCRadioactiveProc *resultSet1, int32_t row1, CGCRadioactiveProc *resultSet2, int32_t row2)
{
  return CGCRadioactiveProcRowEqual(CGCRadioactiveProcFromCGCRadioactiveProc(resultSet1), row1, CGCRadioactiveProcFromCGCRadioactiveProc(resultSet2), row2);
}

@class CGCAutodropper;

static inline CGCAutodropper *CGCAutodropperFromCGCAutodropper(CGCAutodropperResultSetRef resultSet)
{
  return (__bridge CGCAutodropper *)resultSet;
}

static inline CGCAutodropperResultSetRef CGCAutodropperFromCGCAutodropper(CGCAutodropper *resultSet)
{
  return (__bridge CGCAutodropperResultSetRef)resultSet;
}

static inline int32_t CGCAutodropperGetA(CGCAutodropper *resultSet, int32_t row)
{
  CGCAutodropperResultSetRef cResultSet = CGCAutodropperFromCGCAutodropper(resultSet);
  return CGCAutodropperGetA(cResultSet, row);
}

static inline int32_t CGCAutodropperGetB(CGCAutodropper *resultSet, int32_t row)
{
  CGCAutodropperResultSetRef cResultSet = CGCAutodropperFromCGCAutodropper(resultSet);
  return CGCAutodropperGetB(cResultSet, row);
}

static inline int32_t CGCAutodropperResultCount(CGCAutodropper *resultSet)
{
  return CGCAutodropperResultCount(CGCAutodropperFromCGCAutodropper(resultSet));
}

static inline CGCAutodropper *CGCAutodropperCopy(CGCAutodropper *resultSet, int32_t from, int32_t count)
{
  CGCAutodropperResultSetRef copy;
  CGCAutodropperCopy(CGCAutodropperFromCGCAutodropper(resultSet), &copy, from, count);
  return (__bridge_transfer CGCAutodropper *)copy;
}

static inline NSUInteger CGCAutodropperRowHash(CGCAutodropper *resultSet, int32_t row)
{
  return CGCAutodropperRowHash(CGCAutodropperFromCGCAutodropper(resultSet), row);
}

static inline BOOL CGCAutodropperRowEqual(CGCAutodropper *resultSet1, int32_t row1, CGCAutodropper *resultSet2, int32_t row2)
{
  return CGCAutodropperRowEqual(CGCAutodropperFromCGCAutodropper(resultSet1), row1, CGCAutodropperFromCGCAutodropper(resultSet2), row2);
}

@class CGCSimpleCursorProc;

static inline CGCSimpleCursorProc *CGCSimpleCursorProcFromCGCSimpleCursorProc(CGCSimpleCursorProcResultSetRef resultSet)
{
  return (__bridge CGCSimpleCursorProc *)resultSet;
}

static inline CGCSimpleCursorProcResultSetRef CGCSimpleCursorProcFromCGCSimpleCursorProc(CGCSimpleCursorProc *resultSet)
{
  return (__bridge CGCSimpleCursorProcResultSetRef)resultSet;
}

static inline int32_t CGCSimpleCursorProcGetId(CGCSimpleCursorProc *resultSet)
{
  CGCSimpleCursorProcResultSetRef cResultSet = CGCSimpleCursorProcFromCGCSimpleCursorProc(resultSet);
  return CGCSimpleCursorProcGetId(cResultSet);
}

static inline int32_t CGCSimpleCursorProcResultCount(CGCSimpleCursorProc *resultSet)
{
  return CGCSimpleCursorProcResultCount(CGCSimpleCursorProcFromCGCSimpleCursorProc(resultSet));
}

static inline CGCSimpleCursorProc *CGCSimpleCursorProcCopy(CGCSimpleCursorProc *resultSet)
{
  CGCSimpleCursorProcResultSetRef copy;
  CGCSimpleCursorProcCopy(CGCSimpleCursorProcFromCGCSimpleCursorProc(resultSet), &copy);
  return (__bridge_transfer CGCSimpleCursorProc *)copy;
}

static inline NSUInteger CGCSimpleCursorProcHash(CGCSimpleCursorProc *resultSet)
{
  return CGCSimpleCursorProcHash(CGCSimpleCursorProcFromCGCSimpleCursorProc(resultSet));
}

static inline BOOL CGCSimpleCursorProcEqual(CGCSimpleCursorProc *resultSet1, CGCSimpleCursorProc *resultSet2)
{
  return CGCSimpleCursorProcEqual(CGCSimpleCursorProcFromCGCSimpleCursorProc(resultSet1), CGCSimpleCursorProcFromCGCSimpleCursorProc(resultSet2));
}

@class CGCRedundantCast;

static inline CGCRedundantCast *CGCRedundantCastFromCGCRedundantCast(CGCRedundantCastResultSetRef resultSet)
{
  return (__bridge CGCRedundantCast *)resultSet;
}

static inline CGCRedundantCastResultSetRef CGCRedundantCastFromCGCRedundantCast(CGCRedundantCast *resultSet)
{
  return (__bridge CGCRedundantCastResultSetRef)resultSet;
}

static inline int32_t CGCRedundantCastGetPlugh(CGCRedundantCast *resultSet, int32_t row)
{
  CGCRedundantCastResultSetRef cResultSet = CGCRedundantCastFromCGCRedundantCast(resultSet);
  return CGCRedundantCastGetPlugh(cResultSet, row);
}

static inline int32_t CGCRedundantCastGetFive(CGCRedundantCast *resultSet, int32_t row)
{
  CGCRedundantCastResultSetRef cResultSet = CGCRedundantCastFromCGCRedundantCast(resultSet);
  return CGCRedundantCastGetFive(cResultSet, row);
}

static inline int32_t CGCRedundantCastResultCount(CGCRedundantCast *resultSet)
{
  return CGCRedundantCastResultCount(CGCRedundantCastFromCGCRedundantCast(resultSet));
}

static inline CGCRedundantCast *CGCRedundantCastCopy(CGCRedundantCast *resultSet, int32_t from, int32_t count)
{
  CGCRedundantCastResultSetRef copy;
  CGCRedundantCastCopy(CGCRedundantCastFromCGCRedundantCast(resultSet), &copy, from, count);
  return (__bridge_transfer CGCRedundantCast *)copy;
}

static inline NSUInteger CGCRedundantCastRowHash(CGCRedundantCast *resultSet, int32_t row)
{
  return CGCRedundantCastRowHash(CGCRedundantCastFromCGCRedundantCast(resultSet), row);
}

static inline BOOL CGCRedundantCastRowEqual(CGCRedundantCast *resultSet1, int32_t row1, CGCRedundantCast *resultSet2, int32_t row2)
{
  return CGCRedundantCastRowEqual(CGCRedundantCastFromCGCRedundantCast(resultSet1), row1, CGCRedundantCastFromCGCRedundantCast(resultSet2), row2);
}

@class CGCOutUnionTwo;

static inline CGCOutUnionTwo *CGCOutUnionTwoFromCGCOutUnionTwo(CGCOutUnionTwoResultSetRef resultSet)
{
  return (__bridge CGCOutUnionTwo *)resultSet;
}

static inline CGCOutUnionTwoResultSetRef CGCOutUnionTwoFromCGCOutUnionTwo(CGCOutUnionTwo *resultSet)
{
  return (__bridge CGCOutUnionTwoResultSetRef)resultSet;
}

static inline int32_t CGCOutUnionTwoGetX(CGCOutUnionTwo *resultSet, int32_t row)
{
  CGCOutUnionTwoResultSetRef cResultSet = CGCOutUnionTwoFromCGCOutUnionTwo(resultSet);
  return CGCOutUnionTwoGetX(cResultSet, row);
}

static inline NSString *CGCOutUnionTwoGetY(CGCOutUnionTwo *resultSet, int32_t row)
{
  CGCOutUnionTwoResultSetRef cResultSet = CGCOutUnionTwoFromCGCOutUnionTwo(resultSet);
  return (__bridge NSString *)CGCOutUnionTwoGetY(cResultSet, row);
}

static inline int32_t CGCOutUnionTwoResultCount(CGCOutUnionTwo *resultSet)
{
  return CGCOutUnionTwoResultCount(CGCOutUnionTwoFromCGCOutUnionTwo(resultSet));
}

static inline CGCOutUnionTwo *CGCOutUnionTwoCopy(CGCOutUnionTwo *resultSet, int32_t from, int32_t count)
{
  CGCOutUnionTwoResultSetRef copy;
  CGCOutUnionTwoCopy(CGCOutUnionTwoFromCGCOutUnionTwo(resultSet), &copy, from, count);
  return (__bridge_transfer CGCOutUnionTwo *)copy;
}

static inline NSUInteger CGCOutUnionTwoRowHash(CGCOutUnionTwo *resultSet, int32_t row)
{
  return CGCOutUnionTwoRowHash(CGCOutUnionTwoFromCGCOutUnionTwo(resultSet), row);
}

static inline BOOL CGCOutUnionTwoRowEqual(CGCOutUnionTwo *resultSet1, int32_t row1, CGCOutUnionTwo *resultSet2, int32_t row2)
{
  return CGCOutUnionTwoRowEqual(CGCOutUnionTwoFromCGCOutUnionTwo(resultSet1), row1, CGCOutUnionTwoFromCGCOutUnionTwo(resultSet2), row2);
}

@class CGCOutUnionFromSelect;

static inline CGCOutUnionFromSelect *CGCOutUnionFromSelectFromCGCOutUnionFromSelect(CGCOutUnionFromSelectResultSetRef resultSet)
{
  return (__bridge CGCOutUnionFromSelect *)resultSet;
}

static inline CGCOutUnionFromSelectResultSetRef CGCOutUnionFromSelectFromCGCOutUnionFromSelect(CGCOutUnionFromSelect *resultSet)
{
  return (__bridge CGCOutUnionFromSelectResultSetRef)resultSet;
}

static inline int32_t CGCOutUnionFromSelectGetX(CGCOutUnionFromSelect *resultSet, int32_t row)
{
  CGCOutUnionFromSelectResultSetRef cResultSet = CGCOutUnionFromSelectFromCGCOutUnionFromSelect(resultSet);
  return CGCOutUnionFromSelectGetX(cResultSet, row);
}

static inline NSString *CGCOutUnionFromSelectGetY(CGCOutUnionFromSelect *resultSet, int32_t row)
{
  CGCOutUnionFromSelectResultSetRef cResultSet = CGCOutUnionFromSelectFromCGCOutUnionFromSelect(resultSet);
  return (__bridge NSString *)CGCOutUnionFromSelectGetY(cResultSet, row);
}

static inline int32_t CGCOutUnionFromSelectResultCount(CGCOutUnionFromSelect *resultSet)
{
  return CGCOutUnionFromSelectResultCount(CGCOutUnionFromSelectFromCGCOutUnionFromSelect(resultSet));
}

static inline CGCOutUnionFromSelect *CGCOutUnionFromSelectCopy(CGCOutUnionFromSelect *resultSet, int32_t from, int32_t count)
{
  CGCOutUnionFromSelectResultSetRef copy;
  CGCOutUnionFromSelectCopy(CGCOutUnionFromSelectFromCGCOutUnionFromSelect(resultSet), &copy, from, count);
  return (__bridge_transfer CGCOutUnionFromSelect *)copy;
}

static inline NSUInteger CGCOutUnionFromSelectRowHash(CGCOutUnionFromSelect *resultSet, int32_t row)
{
  return CGCOutUnionFromSelectRowHash(CGCOutUnionFromSelectFromCGCOutUnionFromSelect(resultSet), row);
}

static inline BOOL CGCOutUnionFromSelectRowEqual(CGCOutUnionFromSelect *resultSet1, int32_t row1, CGCOutUnionFromSelect *resultSet2, int32_t row2)
{
  return CGCOutUnionFromSelectRowEqual(CGCOutUnionFromSelectFromCGCOutUnionFromSelect(resultSet1), row1, CGCOutUnionFromSelectFromCGCOutUnionFromSelect(resultSet2), row2);
}

@class CGCWindowFunctionInvocation;

static inline CGCWindowFunctionInvocation *CGCWindowFunctionInvocationFromCGCWindowFunctionInvocation(CGCWindowFunctionInvocationResultSetRef resultSet)
{
  return (__bridge CGCWindowFunctionInvocation *)resultSet;
}

static inline CGCWindowFunctionInvocationResultSetRef CGCWindowFunctionInvocationFromCGCWindowFunctionInvocation(CGCWindowFunctionInvocation *resultSet)
{
  return (__bridge CGCWindowFunctionInvocationResultSetRef)resultSet;
}

static inline int32_t CGCWindowFunctionInvocationGetId(CGCWindowFunctionInvocation *resultSet, int32_t row)
{
  CGCWindowFunctionInvocationResultSetRef cResultSet = CGCWindowFunctionInvocationFromCGCWindowFunctionInvocation(resultSet);
  return CGCWindowFunctionInvocationGetId(cResultSet, row);
}

static inline int32_t CGCWindowFunctionInvocationGetRowNum(CGCWindowFunctionInvocation *resultSet, int32_t row)
{
  CGCWindowFunctionInvocationResultSetRef cResultSet = CGCWindowFunctionInvocationFromCGCWindowFunctionInvocation(resultSet);
  return CGCWindowFunctionInvocationGetRowNum(cResultSet, row);
}

static inline int32_t CGCWindowFunctionInvocationResultCount(CGCWindowFunctionInvocation *resultSet)
{
  return CGCWindowFunctionInvocationResultCount(CGCWindowFunctionInvocationFromCGCWindowFunctionInvocation(resultSet));
}

static inline CGCWindowFunctionInvocation *CGCWindowFunctionInvocationCopy(CGCWindowFunctionInvocation *resultSet, int32_t from, int32_t count)
{
  CGCWindowFunctionInvocationResultSetRef copy;
  CGCWindowFunctionInvocationCopy(CGCWindowFunctionInvocationFromCGCWindowFunctionInvocation(resultSet), &copy, from, count);
  return (__bridge_transfer CGCWindowFunctionInvocation *)copy;
}

static inline NSUInteger CGCWindowFunctionInvocationRowHash(CGCWindowFunctionInvocation *resultSet, int32_t row)
{
  return CGCWindowFunctionInvocationRowHash(CGCWindowFunctionInvocationFromCGCWindowFunctionInvocation(resultSet), row);
}

static inline BOOL CGCWindowFunctionInvocationRowEqual(CGCWindowFunctionInvocation *resultSet1, int32_t row1, CGCWindowFunctionInvocation *resultSet2, int32_t row2)
{
  return CGCWindowFunctionInvocationRowEqual(CGCWindowFunctionInvocationFromCGCWindowFunctionInvocation(resultSet1), row1, CGCWindowFunctionInvocationFromCGCWindowFunctionInvocation(resultSet2), row2);
}

@class CGCUseReturn;

static inline CGCUseReturn *CGCUseReturnFromCGCUseReturn(CGCUseReturnResultSetRef resultSet)
{
  return (__bridge CGCUseReturn *)resultSet;
}

static inline CGCUseReturnResultSetRef CGCUseReturnFromCGCUseReturn(CGCUseReturn *resultSet)
{
  return (__bridge CGCUseReturnResultSetRef)resultSet;
}

static inline int32_t CGCUseReturnGetX(CGCUseReturn *resultSet, int32_t row)
{
  CGCUseReturnResultSetRef cResultSet = CGCUseReturnFromCGCUseReturn(resultSet);
  return CGCUseReturnGetX(cResultSet, row);
}

static inline int32_t CGCUseReturnResultCount(CGCUseReturn *resultSet)
{
  return CGCUseReturnResultCount(CGCUseReturnFromCGCUseReturn(resultSet));
}

static inline CGCUseReturn *CGCUseReturnCopy(CGCUseReturn *resultSet, int32_t from, int32_t count)
{
  CGCUseReturnResultSetRef copy;
  CGCUseReturnCopy(CGCUseReturnFromCGCUseReturn(resultSet), &copy, from, count);
  return (__bridge_transfer CGCUseReturn *)copy;
}

static inline NSUInteger CGCUseReturnRowHash(CGCUseReturn *resultSet, int32_t row)
{
  return CGCUseReturnRowHash(CGCUseReturnFromCGCUseReturn(resultSet), row);
}

static inline BOOL CGCUseReturnRowEqual(CGCUseReturn *resultSet1, int32_t row1, CGCUseReturn *resultSet2, int32_t row2)
{
  return CGCUseReturnRowEqual(CGCUseReturnFromCGCUseReturn(resultSet1), row1, CGCUseReturnFromCGCUseReturn(resultSet2), row2);
}

NS_ASSUME_NONNULL_END
