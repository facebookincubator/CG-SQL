// @generated SignedSource<<deadbeef8badf00ddefec8edfacefeed>>

#include "out/cg_test_extension_fragment_c.h"

#pragma clang diagnostic ignored "-Wbitwise-op-parentheses"
#pragma clang diagnostic ignored "-Wshift-op-parentheses"
#pragma clang diagnostic ignored "-Wlogical-not-parentheses"

// The statement ending at line XXXX
//

// The statement ending at line XXXX
//

// The statement ending at line XXXX

/*
CREATE PROC extension_fragment_one (id_ INTEGER NOT NULL, name_ TEXT NOT NULL)
BEGIN
  WITH
  assembly_core (x, y, z) AS (SELECT 1, nullable("a"), nullable(3)),
  plugin_one (x, y, z, flag) AS (SELECT assembly_core.*, plugin_table.flag
    FROM assembly_core
    LEFT OUTER JOIN plugin_table ON plugin_table.name = assembly_core.y AND plugin_table.id = id_)
  SELECT *
    FROM plugin_one;
END;
*/

cql_int32 extension_fragment_one_result_count(assembly_core_result_set_ref _Nonnull result_set) {
  return cql_result_set_get_count((cql_result_set_ref)result_set);
}

// The statement ending at line XXXX

/*
CREATE PROC extension_fragment_three (name_ TEXT NOT NULL)
BEGIN
  WITH
  assembly_non_core (a, b, c) AS (SELECT "a", nullable("x"), nullable(1)),
  plugin_three (a, b, c, d) AS (SELECT assembly_non_core.*, plugin_table.timestamp_ms
    FROM assembly_non_core
    LEFT OUTER JOIN plugin_table ON plugin_table.name = assembly_non_core.b AND plugin_table.name = name_)
  SELECT *
    FROM plugin_three;
END;
*/

cql_int32 extension_fragment_three_result_count(assembly_non_core_result_set_ref _Nonnull result_set) {
  return cql_result_set_get_count((cql_result_set_ref)result_set);
}

// The statement ending at line XXXX

/*
CREATE PROC extension_fragment_two (id_ INTEGER NOT NULL, name_ TEXT NOT NULL)
BEGIN
  WITH
  assembly_core (x, y, z) AS (SELECT 1, nullable("a"), nullable(3)),
  plugin_two (x, y, z, name) AS (SELECT assembly_core.*, CAST(NULL AS TEXT) AS name
    FROM assembly_core
  UNION ALL
  SELECT assembly_core.*, plugin_table.name
    FROM assembly_core
    INNER JOIN plugin_table ON plugin_table.name = name_)
  SELECT *
    FROM plugin_two;
END;
*/

cql_int32 extension_fragment_two_result_count(assembly_core_result_set_ref _Nonnull result_set) {
  return cql_result_set_get_count((cql_result_set_ref)result_set);
}
