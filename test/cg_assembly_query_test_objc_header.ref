
#pragma once

#import <Foundation/Foundation.h>

#import <Test/TestFile.h>

NS_ASSUME_NONNULL_BEGIN

@class MBQAssemblyCore;

static inline MBQAssemblyCore *MBQAssemblyCoreFromCGCAssemblyCore(CGCAssemblyCoreResultSetRef resultSet)
{
  return (__bridge MBQAssemblyCore *)resultSet;
}

static inline CGCAssemblyCoreResultSetRef CGCAssemblyCoreFromMBQAssemblyCore(MBQAssemblyCore *resultSet)
{
  return (__bridge CGCAssemblyCoreResultSetRef)resultSet;
}

static inline int32_t MBQAssemblyCoreGetX(MBQAssemblyCore *resultSet, int32_t row)
{
  CGCAssemblyCoreResultSetRef cResultSet = CGCAssemblyCoreFromMBQAssemblyCore(resultSet);
  return CGCAssemblyCoreGetX(cResultSet, row);
}

static inline NSString *_Nullable MBQAssemblyCoreGetY(MBQAssemblyCore *resultSet, int32_t row)
{
  CGCAssemblyCoreResultSetRef cResultSet = CGCAssemblyCoreFromMBQAssemblyCore(resultSet);
  return (__bridge NSString *)CGCAssemblyCoreGetY(cResultSet, row);
}

static inline NSNumber *_Nullable MBQAssemblyCoreGetZ(MBQAssemblyCore *resultSet, int32_t row)
{
  CGCAssemblyCoreResultSetRef cResultSet = CGCAssemblyCoreFromMBQAssemblyCore(resultSet);
  return CGCAssemblyCoreGetZIsNull(cResultSet, row) ? nil : @(CGCAssemblyCoreGetZValue(cResultSet, row));
}

static inline NSNumber *_Nullable __PRIVATE__MBQAssemblyCoreGetFlag(MBQAssemblyCore *resultSet, int32_t row)
{
  CGCAssemblyCoreResultSetRef cResultSet = CGCAssemblyCoreFromMBQAssemblyCore(resultSet);
  return __PRIVATE__CGCAssemblyCoreGetFlagIsNull(cResultSet, row) ? nil : @(__PRIVATE__CGCAssemblyCoreGetFlagValue(cResultSet, row));
}

static inline NSString *_Nullable __PRIVATE__MBQAssemblyCoreGetName(MBQAssemblyCore *resultSet, int32_t row)
{
  CGCAssemblyCoreResultSetRef cResultSet = CGCAssemblyCoreFromMBQAssemblyCore(resultSet);
  return (__bridge NSString *)__PRIVATE__CGCAssemblyCoreGetName(cResultSet, row);
}

static inline int32_t MBQAssemblyCoreResultCount(MBQAssemblyCore *resultSet)
{
  return CGCAssemblyCoreResultCount(CGCAssemblyCoreFromMBQAssemblyCore(resultSet));
}

static inline MBQAssemblyCore *MBQAssemblyCoreCopy(MBQAssemblyCore *resultSet, int32_t from, int32_t count)
{
  CGCAssemblyCoreResultSetRef copy;
  CGCAssemblyCoreCopy(CGCAssemblyCoreFromMBQAssemblyCore(resultSet), &copy, from, count);
  return (__bridge_transfer MBQAssemblyCore *)copy;
}

static inline NSUInteger MBQAssemblyCoreRowHash(MBQAssemblyCore *resultSet, int32_t row)
{
  return CGCAssemblyCoreRowHash(CGCAssemblyCoreFromMBQAssemblyCore(resultSet), row);
}

static inline BOOL MBQAssemblyCoreRowEqual(MBQAssemblyCore *resultSet1, int32_t row1, MBQAssemblyCore *resultSet2, int32_t row2)
{
  return CGCAssemblyCoreRowEqual(CGCAssemblyCoreFromMBQAssemblyCore(resultSet1), row1, CGCAssemblyCoreFromMBQAssemblyCore(resultSet2), row2);
}

NS_ASSUME_NONNULL_END
