#pragma once

#import <Foundation/Foundation.h>


#import <Test/TestFile.h>

NS_ASSUME_NONNULL_BEGIN

@class CGBAssemblyCore;

#ifdef CQL_EMIT_OBJC_INTERFACES
@interface CGBAssemblyCore
@end
#endif

static inline CGBAssemblyCore *CGBAssemblyCoreFromCGCAssemblyCore(CGCAssemblyCoreResultSetRef resultSet)
{
  return (__bridge CGBAssemblyCore *)resultSet;
}

static inline CGCAssemblyCoreResultSetRef CGCAssemblyCoreFromCGBAssemblyCore(CGBAssemblyCore *resultSet)
{
  return (__bridge CGCAssemblyCoreResultSetRef)resultSet;
}

static inline int32_t CGBAssemblyCoreGetX(CGBAssemblyCore *resultSet, int32_t row)
{
  CGCAssemblyCoreResultSetRef cResultSet = CGCAssemblyCoreFromCGBAssemblyCore(resultSet);
  return CGCAssemblyCoreGetX(cResultSet, row);
}

static inline NSString *_Nullable CGBAssemblyCoreGetY(CGBAssemblyCore *resultSet, int32_t row)
{
  CGCAssemblyCoreResultSetRef cResultSet = CGCAssemblyCoreFromCGBAssemblyCore(resultSet);
  return (__bridge NSString *)CGCAssemblyCoreGetY(cResultSet, row);
}

static inline NSNumber *_Nullable CGBAssemblyCoreGetZ(CGBAssemblyCore *resultSet, int32_t row)
{
  CGCAssemblyCoreResultSetRef cResultSet = CGCAssemblyCoreFromCGBAssemblyCore(resultSet);
  return CGCAssemblyCoreGetZIsNull(cResultSet, row) ? nil : @(CGCAssemblyCoreGetZValue(cResultSet, row));
}

static inline NSNumber *_Nullable __PRIVATE__CGBAssemblyCoreGetFlag(CGBAssemblyCore *resultSet, int32_t row)
{
  CGCAssemblyCoreResultSetRef cResultSet = CGCAssemblyCoreFromCGBAssemblyCore(resultSet);
  return __PRIVATE__CGCAssemblyCoreGetFlagIsNull(cResultSet, row) ? nil : @(__PRIVATE__CGCAssemblyCoreGetFlagValue(cResultSet, row));
}

static inline int32_t CGBAssemblyCoreResultCount(CGBAssemblyCore *resultSet)
{
  return CGCAssemblyCoreResultCount(CGCAssemblyCoreFromCGBAssemblyCore(resultSet));
}

static inline NSUInteger CGBAssemblyCoreRowHash(CGBAssemblyCore *resultSet, int32_t row)
{
  return CGCAssemblyCoreRowHash(CGCAssemblyCoreFromCGBAssemblyCore(resultSet), row);
}

static inline BOOL CGBAssemblyCoreRowEqual(CGBAssemblyCore *resultSet1, int32_t row1, CGBAssemblyCore *resultSet2, int32_t row2)
{
  return CGCAssemblyCoreRowEqual(CGCAssemblyCoreFromCGBAssemblyCore(resultSet1), row1, CGCAssemblyCoreFromCGBAssemblyCore(resultSet2), row2);
}

NS_ASSUME_NONNULL_END
