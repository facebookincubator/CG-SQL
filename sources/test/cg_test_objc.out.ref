#pragma once

#import <Foundation/Foundation.h>

#import <Test/TestFile.h>

NS_ASSUME_NONNULL_BEGIN

@class CGBWithResultSet;

static inline CGBWithResultSet *CGBWithResultSetFromCGCWithResultSet(CGCWithResultSetResultSetRef resultSet)
{
  return (__bridge CGBWithResultSet *)resultSet;
}

static inline CGCWithResultSetResultSetRef CGCWithResultSetFromCGBWithResultSet(CGBWithResultSet *resultSet)
{
  return (__bridge CGCWithResultSetResultSetRef)resultSet;
}

static inline int32_t CGBWithResultSetGetId(CGBWithResultSet *resultSet, int32_t row)
{
  CGCWithResultSetResultSetRef cResultSet = CGCWithResultSetFromCGBWithResultSet(resultSet);
  return CGCWithResultSetGetId(cResultSet, row);
}

static inline NSString *_Nullable CGBWithResultSetGetName(CGBWithResultSet *resultSet, int32_t row)
{
  CGCWithResultSetResultSetRef cResultSet = CGCWithResultSetFromCGBWithResultSet(resultSet);
  return (__bridge NSString *)CGCWithResultSetGetName(cResultSet, row);
}

static inline NSNumber *_Nullable CGBWithResultSetGetRate(CGBWithResultSet *resultSet, int32_t row)
{
  CGCWithResultSetResultSetRef cResultSet = CGCWithResultSetFromCGBWithResultSet(resultSet);
  return CGCWithResultSetGetRateIsNull(cResultSet, row) ? nil : @(CGCWithResultSetGetRateValue(cResultSet, row));
}

static inline NSNumber *_Nullable CGBWithResultSetGetType(CGBWithResultSet *resultSet, int32_t row)
{
  CGCWithResultSetResultSetRef cResultSet = CGCWithResultSetFromCGBWithResultSet(resultSet);
  return CGCWithResultSetGetTypeIsNull(cResultSet, row) ? nil : @(CGCWithResultSetGetTypeValue(cResultSet, row));
}

static inline NSNumber *_Nullable CGBWithResultSetGetSize(CGBWithResultSet *resultSet, int32_t row)
{
  CGCWithResultSetResultSetRef cResultSet = CGCWithResultSetFromCGBWithResultSet(resultSet);
  return CGCWithResultSetGetSizeIsNull(cResultSet, row) ? nil : @(CGCWithResultSetGetSizeValue(cResultSet, row));
}

static inline int32_t CGBWithResultSetResultCount(CGBWithResultSet *resultSet)
{
  return CGCWithResultSetResultCount(CGCWithResultSetFromCGBWithResultSet(resultSet));
}

static inline CGBWithResultSet *CGBWithResultSetCopy(CGBWithResultSet *resultSet, int32_t from, int32_t count)
{
  CGCWithResultSetResultSetRef copy;
  CGCWithResultSetCopy(CGCWithResultSetFromCGBWithResultSet(resultSet), &copy, from, count);
  return (__bridge_transfer CGBWithResultSet *)copy;
}

static inline NSUInteger CGBWithResultSetRowHash(CGBWithResultSet *resultSet, int32_t row)
{
  return CGCWithResultSetRowHash(CGCWithResultSetFromCGBWithResultSet(resultSet), row);
}

static inline BOOL CGBWithResultSetRowEqual(CGBWithResultSet *resultSet1, int32_t row1, CGBWithResultSet *resultSet2, int32_t row2)
{
  return CGCWithResultSetRowEqual(CGCWithResultSetFromCGBWithResultSet(resultSet1), row1, CGCWithResultSetFromCGBWithResultSet(resultSet2), row2);
}

@class CGBSelectFromView;

static inline CGBSelectFromView *CGBSelectFromViewFromCGCSelectFromView(CGCSelectFromViewResultSetRef resultSet)
{
  return (__bridge CGBSelectFromView *)resultSet;
}

static inline CGCSelectFromViewResultSetRef CGCSelectFromViewFromCGBSelectFromView(CGBSelectFromView *resultSet)
{
  return (__bridge CGCSelectFromViewResultSetRef)resultSet;
}

static inline int32_t CGBSelectFromViewGetId(CGBSelectFromView *resultSet, int32_t row)
{
  CGCSelectFromViewResultSetRef cResultSet = CGCSelectFromViewFromCGBSelectFromView(resultSet);
  return CGCSelectFromViewGetId(cResultSet, row);
}

static inline NSNumber *_Nullable CGBSelectFromViewGetType(CGBSelectFromView *resultSet, int32_t row)
{
  CGCSelectFromViewResultSetRef cResultSet = CGCSelectFromViewFromCGBSelectFromView(resultSet);
  return CGCSelectFromViewGetTypeIsNull(cResultSet, row) ? nil : @(CGCSelectFromViewGetTypeValue(cResultSet, row));
}

static inline int32_t CGBSelectFromViewResultCount(CGBSelectFromView *resultSet)
{
  return CGCSelectFromViewResultCount(CGCSelectFromViewFromCGBSelectFromView(resultSet));
}

static inline CGBSelectFromView *CGBSelectFromViewCopy(CGBSelectFromView *resultSet, int32_t from, int32_t count)
{
  CGCSelectFromViewResultSetRef copy;
  CGCSelectFromViewCopy(CGCSelectFromViewFromCGBSelectFromView(resultSet), &copy, from, count);
  return (__bridge_transfer CGBSelectFromView *)copy;
}

static inline NSUInteger CGBSelectFromViewRowHash(CGBSelectFromView *resultSet, int32_t row)
{
  return CGCSelectFromViewRowHash(CGCSelectFromViewFromCGBSelectFromView(resultSet), row);
}

static inline BOOL CGBSelectFromViewRowEqual(CGBSelectFromView *resultSet1, int32_t row1, CGBSelectFromView *resultSet2, int32_t row2)
{
  return CGCSelectFromViewRowEqual(CGCSelectFromViewFromCGBSelectFromView(resultSet1), row1, CGCSelectFromViewFromCGBSelectFromView(resultSet2), row2);
}

@class CGBGetData;

static inline CGBGetData *CGBGetDataFromCGCGetData(CGCGetDataResultSetRef resultSet)
{
  return (__bridge CGBGetData *)resultSet;
}

static inline CGCGetDataResultSetRef CGCGetDataFromCGBGetData(CGBGetData *resultSet)
{
  return (__bridge CGCGetDataResultSetRef)resultSet;
}

static inline int32_t CGBGetDataGetId(CGBGetData *resultSet, int32_t row)
{
  CGCGetDataResultSetRef cResultSet = CGCGetDataFromCGBGetData(resultSet);
  return CGCGetDataGetId(cResultSet, row);
}

static inline NSString *_Nullable CGBGetDataGetName(CGBGetData *resultSet, int32_t row)
{
  CGCGetDataResultSetRef cResultSet = CGCGetDataFromCGBGetData(resultSet);
  return (__bridge NSString *)CGCGetDataGetName(cResultSet, row);
}

static inline NSNumber *_Nullable CGBGetDataGetRate(CGBGetData *resultSet, int32_t row)
{
  CGCGetDataResultSetRef cResultSet = CGCGetDataFromCGBGetData(resultSet);
  return CGCGetDataGetRateIsNull(cResultSet, row) ? nil : @(CGCGetDataGetRateValue(cResultSet, row));
}

static inline NSNumber *_Nullable CGBGetDataGetType(CGBGetData *resultSet, int32_t row)
{
  CGCGetDataResultSetRef cResultSet = CGCGetDataFromCGBGetData(resultSet);
  return CGCGetDataGetTypeIsNull(cResultSet, row) ? nil : @(CGCGetDataGetTypeValue(cResultSet, row));
}

static inline NSNumber *_Nullable CGBGetDataGetSize(CGBGetData *resultSet, int32_t row)
{
  CGCGetDataResultSetRef cResultSet = CGCGetDataFromCGBGetData(resultSet);
  return CGCGetDataGetSizeIsNull(cResultSet, row) ? nil : @(CGCGetDataGetSizeValue(cResultSet, row));
}

static inline int32_t CGBGetDataResultCount(CGBGetData *resultSet)
{
  return CGCGetDataResultCount(CGCGetDataFromCGBGetData(resultSet));
}

static inline CGBGetData *CGBGetDataCopy(CGBGetData *resultSet, int32_t from, int32_t count)
{
  CGCGetDataResultSetRef copy;
  CGCGetDataCopy(CGCGetDataFromCGBGetData(resultSet), &copy, from, count);
  return (__bridge_transfer CGBGetData *)copy;
}

static inline NSUInteger CGBGetDataRowHash(CGBGetData *resultSet, int32_t row)
{
  return CGCGetDataRowHash(CGCGetDataFromCGBGetData(resultSet), row);
}

static inline BOOL CGBGetDataRowEqual(CGBGetData *resultSet1, int32_t row1, CGBGetData *resultSet2, int32_t row2)
{
  return CGCGetDataRowEqual(CGCGetDataFromCGBGetData(resultSet1), row1, CGCGetDataFromCGBGetData(resultSet2), row2);
}

@class CGBComplexReturn;

static inline CGBComplexReturn *CGBComplexReturnFromCGCComplexReturn(CGCComplexReturnResultSetRef resultSet)
{
  return (__bridge CGBComplexReturn *)resultSet;
}

static inline CGCComplexReturnResultSetRef CGCComplexReturnFromCGBComplexReturn(CGBComplexReturn *resultSet)
{
  return (__bridge CGCComplexReturnResultSetRef)resultSet;
}

static inline BOOL CGBComplexReturnGetBool(CGBComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromCGBComplexReturn(resultSet);
  return CGCComplexReturnGetBool(cResultSet, row) ? YES : NO;
}

static inline int32_t CGBComplexReturnGetInteger(CGBComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromCGBComplexReturn(resultSet);
  return CGCComplexReturnGetInteger(cResultSet, row);
}

static inline int64_t CGBComplexReturnGetLongint(CGBComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromCGBComplexReturn(resultSet);
  return CGCComplexReturnGetLongint(cResultSet, row);
}

static inline double CGBComplexReturnGetReal(CGBComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromCGBComplexReturn(resultSet);
  return CGCComplexReturnGetReal(cResultSet, row);
}

static inline NSString *CGBComplexReturnGetText(CGBComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromCGBComplexReturn(resultSet);
  return (__bridge NSString *)CGCComplexReturnGetText(cResultSet, row);
}

static inline NSNumber *_Nullable CGBComplexReturnGetNullableBool(CGBComplexReturn *resultSet, int32_t row)
{
  CGCComplexReturnResultSetRef cResultSet = CGCComplexReturnFromCGBComplexReturn(resultSet);
  return CGCComplexReturnGetNullableBoolIsNull(cResultSet, row) ? nil : @(CGCComplexReturnGetNullableBoolValue(cResultSet, row));
}

static inline int32_t CGBComplexReturnResultCount(CGBComplexReturn *resultSet)
{
  return CGCComplexReturnResultCount(CGCComplexReturnFromCGBComplexReturn(resultSet));
}

static inline CGBComplexReturn *CGBComplexReturnCopy(CGBComplexReturn *resultSet, int32_t from, int32_t count)
{
  CGCComplexReturnResultSetRef copy;
  CGCComplexReturnCopy(CGCComplexReturnFromCGBComplexReturn(resultSet), &copy, from, count);
  return (__bridge_transfer CGBComplexReturn *)copy;
}

static inline NSUInteger CGBComplexReturnRowHash(CGBComplexReturn *resultSet, int32_t row)
{
  return CGCComplexReturnRowHash(CGCComplexReturnFromCGBComplexReturn(resultSet), row);
}

static inline BOOL CGBComplexReturnRowEqual(CGBComplexReturn *resultSet1, int32_t row1, CGBComplexReturn *resultSet2, int32_t row2)
{
  return CGCComplexReturnRowEqual(CGCComplexReturnFromCGBComplexReturn(resultSet1), row1, CGCComplexReturnFromCGBComplexReturn(resultSet2), row2);
}

@class CGBHierarchicalQuery;

static inline CGBHierarchicalQuery *CGBHierarchicalQueryFromCGCHierarchicalQuery(CGCHierarchicalQueryResultSetRef resultSet)
{
  return (__bridge CGBHierarchicalQuery *)resultSet;
}

static inline CGCHierarchicalQueryResultSetRef CGCHierarchicalQueryFromCGBHierarchicalQuery(CGBHierarchicalQuery *resultSet)
{
  return (__bridge CGCHierarchicalQueryResultSetRef)resultSet;
}

static inline int32_t CGBHierarchicalQueryGetId(CGBHierarchicalQuery *resultSet, int32_t row)
{
  CGCHierarchicalQueryResultSetRef cResultSet = CGCHierarchicalQueryFromCGBHierarchicalQuery(resultSet);
  return CGCHierarchicalQueryGetId(cResultSet, row);
}

static inline int32_t CGBHierarchicalQueryResultCount(CGBHierarchicalQuery *resultSet)
{
  return CGCHierarchicalQueryResultCount(CGCHierarchicalQueryFromCGBHierarchicalQuery(resultSet));
}

static inline CGBHierarchicalQuery *CGBHierarchicalQueryCopy(CGBHierarchicalQuery *resultSet, int32_t from, int32_t count)
{
  CGCHierarchicalQueryResultSetRef copy;
  CGCHierarchicalQueryCopy(CGCHierarchicalQueryFromCGBHierarchicalQuery(resultSet), &copy, from, count);
  return (__bridge_transfer CGBHierarchicalQuery *)copy;
}

static inline NSUInteger CGBHierarchicalQueryRowHash(CGBHierarchicalQuery *resultSet, int32_t row)
{
  return CGCHierarchicalQueryRowHash(CGCHierarchicalQueryFromCGBHierarchicalQuery(resultSet), row);
}

static inline BOOL CGBHierarchicalQueryRowEqual(CGBHierarchicalQuery *resultSet1, int32_t row1, CGBHierarchicalQuery *resultSet2, int32_t row2)
{
  return CGCHierarchicalQueryRowEqual(CGCHierarchicalQueryFromCGBHierarchicalQuery(resultSet1), row1, CGCHierarchicalQueryFromCGBHierarchicalQuery(resultSet2), row2);
}

@class CGBHierarchicalUnmatchedQuery;

static inline CGBHierarchicalUnmatchedQuery *CGBHierarchicalUnmatchedQueryFromCGCHierarchicalUnmatchedQuery(CGCHierarchicalUnmatchedQueryResultSetRef resultSet)
{
  return (__bridge CGBHierarchicalUnmatchedQuery *)resultSet;
}

static inline CGCHierarchicalUnmatchedQueryResultSetRef CGCHierarchicalUnmatchedQueryFromCGBHierarchicalUnmatchedQuery(CGBHierarchicalUnmatchedQuery *resultSet)
{
  return (__bridge CGCHierarchicalUnmatchedQueryResultSetRef)resultSet;
}

static inline int32_t CGBHierarchicalUnmatchedQueryGetId(CGBHierarchicalUnmatchedQuery *resultSet, int32_t row)
{
  CGCHierarchicalUnmatchedQueryResultSetRef cResultSet = CGCHierarchicalUnmatchedQueryFromCGBHierarchicalUnmatchedQuery(resultSet);
  return CGCHierarchicalUnmatchedQueryGetId(cResultSet, row);
}

static inline int32_t CGBHierarchicalUnmatchedQueryResultCount(CGBHierarchicalUnmatchedQuery *resultSet)
{
  return CGCHierarchicalUnmatchedQueryResultCount(CGCHierarchicalUnmatchedQueryFromCGBHierarchicalUnmatchedQuery(resultSet));
}

static inline CGBHierarchicalUnmatchedQuery *CGBHierarchicalUnmatchedQueryCopy(CGBHierarchicalUnmatchedQuery *resultSet, int32_t from, int32_t count)
{
  CGCHierarchicalUnmatchedQueryResultSetRef copy;
  CGCHierarchicalUnmatchedQueryCopy(CGCHierarchicalUnmatchedQueryFromCGBHierarchicalUnmatchedQuery(resultSet), &copy, from, count);
  return (__bridge_transfer CGBHierarchicalUnmatchedQuery *)copy;
}

static inline NSUInteger CGBHierarchicalUnmatchedQueryRowHash(CGBHierarchicalUnmatchedQuery *resultSet, int32_t row)
{
  return CGCHierarchicalUnmatchedQueryRowHash(CGCHierarchicalUnmatchedQueryFromCGBHierarchicalUnmatchedQuery(resultSet), row);
}

static inline BOOL CGBHierarchicalUnmatchedQueryRowEqual(CGBHierarchicalUnmatchedQuery *resultSet1, int32_t row1, CGBHierarchicalUnmatchedQuery *resultSet2, int32_t row2)
{
  return CGCHierarchicalUnmatchedQueryRowEqual(CGCHierarchicalUnmatchedQueryFromCGBHierarchicalUnmatchedQuery(resultSet1), row1, CGCHierarchicalUnmatchedQueryFromCGBHierarchicalUnmatchedQuery(resultSet2), row2);
}

@class CGBUnionSelect;

static inline CGBUnionSelect *CGBUnionSelectFromCGCUnionSelect(CGCUnionSelectResultSetRef resultSet)
{
  return (__bridge CGBUnionSelect *)resultSet;
}

static inline CGCUnionSelectResultSetRef CGCUnionSelectFromCGBUnionSelect(CGBUnionSelect *resultSet)
{
  return (__bridge CGCUnionSelectResultSetRef)resultSet;
}

static inline int32_t CGBUnionSelectGetA(CGBUnionSelect *resultSet, int32_t row)
{
  CGCUnionSelectResultSetRef cResultSet = CGCUnionSelectFromCGBUnionSelect(resultSet);
  return CGCUnionSelectGetA(cResultSet, row);
}

static inline int32_t CGBUnionSelectResultCount(CGBUnionSelect *resultSet)
{
  return CGCUnionSelectResultCount(CGCUnionSelectFromCGBUnionSelect(resultSet));
}

static inline CGBUnionSelect *CGBUnionSelectCopy(CGBUnionSelect *resultSet, int32_t from, int32_t count)
{
  CGCUnionSelectResultSetRef copy;
  CGCUnionSelectCopy(CGCUnionSelectFromCGBUnionSelect(resultSet), &copy, from, count);
  return (__bridge_transfer CGBUnionSelect *)copy;
}

static inline NSUInteger CGBUnionSelectRowHash(CGBUnionSelect *resultSet, int32_t row)
{
  return CGCUnionSelectRowHash(CGCUnionSelectFromCGBUnionSelect(resultSet), row);
}

static inline BOOL CGBUnionSelectRowEqual(CGBUnionSelect *resultSet1, int32_t row1, CGBUnionSelect *resultSet2, int32_t row2)
{
  return CGCUnionSelectRowEqual(CGCUnionSelectFromCGBUnionSelect(resultSet1), row1, CGCUnionSelectFromCGBUnionSelect(resultSet2), row2);
}

@class CGBUnionAllSelect;

static inline CGBUnionAllSelect *CGBUnionAllSelectFromCGCUnionAllSelect(CGCUnionAllSelectResultSetRef resultSet)
{
  return (__bridge CGBUnionAllSelect *)resultSet;
}

static inline CGCUnionAllSelectResultSetRef CGCUnionAllSelectFromCGBUnionAllSelect(CGBUnionAllSelect *resultSet)
{
  return (__bridge CGCUnionAllSelectResultSetRef)resultSet;
}

static inline int32_t CGBUnionAllSelectGetA(CGBUnionAllSelect *resultSet, int32_t row)
{
  CGCUnionAllSelectResultSetRef cResultSet = CGCUnionAllSelectFromCGBUnionAllSelect(resultSet);
  return CGCUnionAllSelectGetA(cResultSet, row);
}

static inline int32_t CGBUnionAllSelectResultCount(CGBUnionAllSelect *resultSet)
{
  return CGCUnionAllSelectResultCount(CGCUnionAllSelectFromCGBUnionAllSelect(resultSet));
}

static inline CGBUnionAllSelect *CGBUnionAllSelectCopy(CGBUnionAllSelect *resultSet, int32_t from, int32_t count)
{
  CGCUnionAllSelectResultSetRef copy;
  CGCUnionAllSelectCopy(CGCUnionAllSelectFromCGBUnionAllSelect(resultSet), &copy, from, count);
  return (__bridge_transfer CGBUnionAllSelect *)copy;
}

static inline NSUInteger CGBUnionAllSelectRowHash(CGBUnionAllSelect *resultSet, int32_t row)
{
  return CGCUnionAllSelectRowHash(CGCUnionAllSelectFromCGBUnionAllSelect(resultSet), row);
}

static inline BOOL CGBUnionAllSelectRowEqual(CGBUnionAllSelect *resultSet1, int32_t row1, CGBUnionAllSelect *resultSet2, int32_t row2)
{
  return CGCUnionAllSelectRowEqual(CGCUnionAllSelectFromCGBUnionAllSelect(resultSet1), row1, CGCUnionAllSelectFromCGBUnionAllSelect(resultSet2), row2);
}

@class CGBUnionAllWithNullable;

static inline CGBUnionAllWithNullable *CGBUnionAllWithNullableFromCGCUnionAllWithNullable(CGCUnionAllWithNullableResultSetRef resultSet)
{
  return (__bridge CGBUnionAllWithNullable *)resultSet;
}

static inline CGCUnionAllWithNullableResultSetRef CGCUnionAllWithNullableFromCGBUnionAllWithNullable(CGBUnionAllWithNullable *resultSet)
{
  return (__bridge CGCUnionAllWithNullableResultSetRef)resultSet;
}

static inline NSString *_Nullable CGBUnionAllWithNullableGetName(CGBUnionAllWithNullable *resultSet, int32_t row)
{
  CGCUnionAllWithNullableResultSetRef cResultSet = CGCUnionAllWithNullableFromCGBUnionAllWithNullable(resultSet);
  return (__bridge NSString *)CGCUnionAllWithNullableGetName(cResultSet, row);
}

static inline int32_t CGBUnionAllWithNullableResultCount(CGBUnionAllWithNullable *resultSet)
{
  return CGCUnionAllWithNullableResultCount(CGCUnionAllWithNullableFromCGBUnionAllWithNullable(resultSet));
}

static inline CGBUnionAllWithNullable *CGBUnionAllWithNullableCopy(CGBUnionAllWithNullable *resultSet, int32_t from, int32_t count)
{
  CGCUnionAllWithNullableResultSetRef copy;
  CGCUnionAllWithNullableCopy(CGCUnionAllWithNullableFromCGBUnionAllWithNullable(resultSet), &copy, from, count);
  return (__bridge_transfer CGBUnionAllWithNullable *)copy;
}

static inline NSUInteger CGBUnionAllWithNullableRowHash(CGBUnionAllWithNullable *resultSet, int32_t row)
{
  return CGCUnionAllWithNullableRowHash(CGCUnionAllWithNullableFromCGBUnionAllWithNullable(resultSet), row);
}

static inline BOOL CGBUnionAllWithNullableRowEqual(CGBUnionAllWithNullable *resultSet1, int32_t row1, CGBUnionAllWithNullable *resultSet2, int32_t row2)
{
  return CGCUnionAllWithNullableRowEqual(CGCUnionAllWithNullableFromCGBUnionAllWithNullable(resultSet1), row1, CGCUnionAllWithNullableFromCGBUnionAllWithNullable(resultSet2), row2);
}

@class CGBWithStmt;

static inline CGBWithStmt *CGBWithStmtFromCGCWithStmt(CGCWithStmtResultSetRef resultSet)
{
  return (__bridge CGBWithStmt *)resultSet;
}

static inline CGCWithStmtResultSetRef CGCWithStmtFromCGBWithStmt(CGBWithStmt *resultSet)
{
  return (__bridge CGCWithStmtResultSetRef)resultSet;
}

static inline int32_t CGBWithStmtGetA(CGBWithStmt *resultSet, int32_t row)
{
  CGCWithStmtResultSetRef cResultSet = CGCWithStmtFromCGBWithStmt(resultSet);
  return CGCWithStmtGetA(cResultSet, row);
}

static inline int32_t CGBWithStmtGetB(CGBWithStmt *resultSet, int32_t row)
{
  CGCWithStmtResultSetRef cResultSet = CGCWithStmtFromCGBWithStmt(resultSet);
  return CGCWithStmtGetB(cResultSet, row);
}

static inline int32_t CGBWithStmtGetC(CGBWithStmt *resultSet, int32_t row)
{
  CGCWithStmtResultSetRef cResultSet = CGCWithStmtFromCGBWithStmt(resultSet);
  return CGCWithStmtGetC(cResultSet, row);
}

static inline int32_t CGBWithStmtResultCount(CGBWithStmt *resultSet)
{
  return CGCWithStmtResultCount(CGCWithStmtFromCGBWithStmt(resultSet));
}

static inline CGBWithStmt *CGBWithStmtCopy(CGBWithStmt *resultSet, int32_t from, int32_t count)
{
  CGCWithStmtResultSetRef copy;
  CGCWithStmtCopy(CGCWithStmtFromCGBWithStmt(resultSet), &copy, from, count);
  return (__bridge_transfer CGBWithStmt *)copy;
}

static inline NSUInteger CGBWithStmtRowHash(CGBWithStmt *resultSet, int32_t row)
{
  return CGCWithStmtRowHash(CGCWithStmtFromCGBWithStmt(resultSet), row);
}

static inline BOOL CGBWithStmtRowEqual(CGBWithStmt *resultSet1, int32_t row1, CGBWithStmt *resultSet2, int32_t row2)
{
  return CGCWithStmtRowEqual(CGCWithStmtFromCGBWithStmt(resultSet1), row1, CGCWithStmtFromCGBWithStmt(resultSet2), row2);
}

@class CGBWithRecursiveStmt;

static inline CGBWithRecursiveStmt *CGBWithRecursiveStmtFromCGCWithRecursiveStmt(CGCWithRecursiveStmtResultSetRef resultSet)
{
  return (__bridge CGBWithRecursiveStmt *)resultSet;
}

static inline CGCWithRecursiveStmtResultSetRef CGCWithRecursiveStmtFromCGBWithRecursiveStmt(CGBWithRecursiveStmt *resultSet)
{
  return (__bridge CGCWithRecursiveStmtResultSetRef)resultSet;
}

static inline int32_t CGBWithRecursiveStmtGetA(CGBWithRecursiveStmt *resultSet, int32_t row)
{
  CGCWithRecursiveStmtResultSetRef cResultSet = CGCWithRecursiveStmtFromCGBWithRecursiveStmt(resultSet);
  return CGCWithRecursiveStmtGetA(cResultSet, row);
}

static inline int32_t CGBWithRecursiveStmtGetB(CGBWithRecursiveStmt *resultSet, int32_t row)
{
  CGCWithRecursiveStmtResultSetRef cResultSet = CGCWithRecursiveStmtFromCGBWithRecursiveStmt(resultSet);
  return CGCWithRecursiveStmtGetB(cResultSet, row);
}

static inline int32_t CGBWithRecursiveStmtGetC(CGBWithRecursiveStmt *resultSet, int32_t row)
{
  CGCWithRecursiveStmtResultSetRef cResultSet = CGCWithRecursiveStmtFromCGBWithRecursiveStmt(resultSet);
  return CGCWithRecursiveStmtGetC(cResultSet, row);
}

static inline int32_t CGBWithRecursiveStmtResultCount(CGBWithRecursiveStmt *resultSet)
{
  return CGCWithRecursiveStmtResultCount(CGCWithRecursiveStmtFromCGBWithRecursiveStmt(resultSet));
}

static inline CGBWithRecursiveStmt *CGBWithRecursiveStmtCopy(CGBWithRecursiveStmt *resultSet, int32_t from, int32_t count)
{
  CGCWithRecursiveStmtResultSetRef copy;
  CGCWithRecursiveStmtCopy(CGCWithRecursiveStmtFromCGBWithRecursiveStmt(resultSet), &copy, from, count);
  return (__bridge_transfer CGBWithRecursiveStmt *)copy;
}

static inline NSUInteger CGBWithRecursiveStmtRowHash(CGBWithRecursiveStmt *resultSet, int32_t row)
{
  return CGCWithRecursiveStmtRowHash(CGCWithRecursiveStmtFromCGBWithRecursiveStmt(resultSet), row);
}

static inline BOOL CGBWithRecursiveStmtRowEqual(CGBWithRecursiveStmt *resultSet1, int32_t row1, CGBWithRecursiveStmt *resultSet2, int32_t row2)
{
  return CGCWithRecursiveStmtRowEqual(CGCWithRecursiveStmtFromCGBWithRecursiveStmt(resultSet1), row1, CGCWithRecursiveStmtFromCGBWithRecursiveStmt(resultSet2), row2);
}

@class CGBParentProc;

static inline CGBParentProc *CGBParentProcFromCGCParentProc(CGCParentProcResultSetRef resultSet)
{
  return (__bridge CGBParentProc *)resultSet;
}

static inline CGCParentProcResultSetRef CGCParentProcFromCGBParentProc(CGBParentProc *resultSet)
{
  return (__bridge CGCParentProcResultSetRef)resultSet;
}

static inline int32_t CGBParentProcGetOne(CGBParentProc *resultSet, int32_t row)
{
  CGCParentProcResultSetRef cResultSet = CGCParentProcFromCGBParentProc(resultSet);
  return CGCParentProcGetOne(cResultSet, row);
}

static inline int32_t CGBParentProcGetTwo(CGBParentProc *resultSet, int32_t row)
{
  CGCParentProcResultSetRef cResultSet = CGCParentProcFromCGBParentProc(resultSet);
  return CGCParentProcGetTwo(cResultSet, row);
}

static inline int32_t CGBParentProcGetThree(CGBParentProc *resultSet, int32_t row)
{
  CGCParentProcResultSetRef cResultSet = CGCParentProcFromCGBParentProc(resultSet);
  return CGCParentProcGetThree(cResultSet, row);
}

static inline int32_t CGBParentProcResultCount(CGBParentProc *resultSet)
{
  return CGCParentProcResultCount(CGCParentProcFromCGBParentProc(resultSet));
}

static inline CGBParentProc *CGBParentProcCopy(CGBParentProc *resultSet, int32_t from, int32_t count)
{
  CGCParentProcResultSetRef copy;
  CGCParentProcCopy(CGCParentProcFromCGBParentProc(resultSet), &copy, from, count);
  return (__bridge_transfer CGBParentProc *)copy;
}

static inline NSUInteger CGBParentProcRowHash(CGBParentProc *resultSet, int32_t row)
{
  return CGCParentProcRowHash(CGCParentProcFromCGBParentProc(resultSet), row);
}

static inline BOOL CGBParentProcRowEqual(CGBParentProc *resultSet1, int32_t row1, CGBParentProc *resultSet2, int32_t row2)
{
  return CGCParentProcRowEqual(CGCParentProcFromCGBParentProc(resultSet1), row1, CGCParentProcFromCGBParentProc(resultSet2), row2);
}

@class CGBParentProcChild;

static inline CGBParentProcChild *CGBParentProcChildFromCGCParentProcChild(CGCParentProcChildResultSetRef resultSet)
{
  return (__bridge CGBParentProcChild *)resultSet;
}

static inline CGCParentProcChildResultSetRef CGCParentProcChildFromCGBParentProcChild(CGBParentProcChild *resultSet)
{
  return (__bridge CGCParentProcChildResultSetRef)resultSet;
}

static inline int32_t CGBParentProcChildGetFour(CGBParentProcChild *resultSet, int32_t row)
{
  CGCParentProcChildResultSetRef cResultSet = CGCParentProcChildFromCGBParentProcChild(resultSet);
  return CGCParentProcChildGetFour(cResultSet, row);
}

static inline int32_t CGBParentProcChildGetFive(CGBParentProcChild *resultSet, int32_t row)
{
  CGCParentProcChildResultSetRef cResultSet = CGCParentProcChildFromCGBParentProcChild(resultSet);
  return CGCParentProcChildGetFive(cResultSet, row);
}

static inline int32_t CGBParentProcChildGetSix(CGBParentProcChild *resultSet, int32_t row)
{
  CGCParentProcChildResultSetRef cResultSet = CGCParentProcChildFromCGBParentProcChild(resultSet);
  return CGCParentProcChildGetSix(cResultSet, row);
}

static inline int32_t CGBParentProcChildResultCount(CGBParentProcChild *resultSet)
{
  return CGCParentProcChildResultCount(CGCParentProcChildFromCGBParentProcChild(resultSet));
}

static inline CGBParentProcChild *CGBParentProcChildCopy(CGBParentProcChild *resultSet, int32_t from, int32_t count)
{
  CGCParentProcChildResultSetRef copy;
  CGCParentProcChildCopy(CGCParentProcChildFromCGBParentProcChild(resultSet), &copy, from, count);
  return (__bridge_transfer CGBParentProcChild *)copy;
}

static inline NSUInteger CGBParentProcChildRowHash(CGBParentProcChild *resultSet, int32_t row)
{
  return CGCParentProcChildRowHash(CGCParentProcChildFromCGBParentProcChild(resultSet), row);
}

static inline BOOL CGBParentProcChildRowEqual(CGBParentProcChild *resultSet1, int32_t row1, CGBParentProcChild *resultSet2, int32_t row2)
{
  return CGCParentProcChildRowEqual(CGCParentProcChildFromCGBParentProcChild(resultSet1), row1, CGCParentProcChildFromCGBParentProcChild(resultSet2), row2);
}

@class CGBCursorWithObject;

static inline CGBCursorWithObject *CGBCursorWithObjectFromCGCCursorWithObject(CGCCursorWithObjectResultSetRef resultSet)
{
  return (__bridge CGBCursorWithObject *)resultSet;
}

static inline CGCCursorWithObjectResultSetRef CGCCursorWithObjectFromCGBCursorWithObject(CGBCursorWithObject *resultSet)
{
  return (__bridge CGCCursorWithObjectResultSetRef)resultSet;
}

static inline NSObject *_Nullable CGBCursorWithObjectGetObject(CGBCursorWithObject *resultSet)
{
  CGCCursorWithObjectResultSetRef cResultSet = CGCCursorWithObjectFromCGBCursorWithObject(resultSet);
  return (__bridge NSObject *)CGCCursorWithObjectGetObject(cResultSet);
}

static inline int32_t CGBCursorWithObjectResultCount(CGBCursorWithObject *resultSet)
{
  return CGCCursorWithObjectResultCount(CGCCursorWithObjectFromCGBCursorWithObject(resultSet));
}

static inline CGBCursorWithObject *CGBCursorWithObjectCopy(CGBCursorWithObject *resultSet)
{
  CGCCursorWithObjectResultSetRef copy;
  CGCCursorWithObjectCopy(CGCCursorWithObjectFromCGBCursorWithObject(resultSet), &copy);
  return (__bridge_transfer CGBCursorWithObject *)copy;
}

static inline NSUInteger CGBCursorWithObjectHash(CGBCursorWithObject *resultSet)
{
  return CGCCursorWithObjectHash(CGCCursorWithObjectFromCGBCursorWithObject(resultSet));
}

static inline BOOL CGBCursorWithObjectEqual(CGBCursorWithObject *resultSet1, CGBCursorWithObject *resultSet2)
{
  return CGCCursorWithObjectEqual(CGCCursorWithObjectFromCGBCursorWithObject(resultSet1), CGCCursorWithObjectFromCGBCursorWithObject(resultSet2));
}

@class CGBUsesProcForResult;

static inline CGBUsesProcForResult *CGBUsesProcForResultFromCGCUsesProcForResult(CGCUsesProcForResultResultSetRef resultSet)
{
  return (__bridge CGBUsesProcForResult *)resultSet;
}

static inline CGCUsesProcForResultResultSetRef CGCUsesProcForResultFromCGBUsesProcForResult(CGBUsesProcForResult *resultSet)
{
  return (__bridge CGCUsesProcForResultResultSetRef)resultSet;
}

static inline int32_t CGBUsesProcForResultGetId(CGBUsesProcForResult *resultSet, int32_t row)
{
  CGCUsesProcForResultResultSetRef cResultSet = CGCUsesProcForResultFromCGBUsesProcForResult(resultSet);
  return CGCUsesProcForResultGetId(cResultSet, row);
}

static inline NSString *_Nullable CGBUsesProcForResultGetName(CGBUsesProcForResult *resultSet, int32_t row)
{
  CGCUsesProcForResultResultSetRef cResultSet = CGCUsesProcForResultFromCGBUsesProcForResult(resultSet);
  return (__bridge NSString *)CGCUsesProcForResultGetName(cResultSet, row);
}

static inline NSNumber *_Nullable CGBUsesProcForResultGetRate(CGBUsesProcForResult *resultSet, int32_t row)
{
  CGCUsesProcForResultResultSetRef cResultSet = CGCUsesProcForResultFromCGBUsesProcForResult(resultSet);
  return CGCUsesProcForResultGetRateIsNull(cResultSet, row) ? nil : @(CGCUsesProcForResultGetRateValue(cResultSet, row));
}

static inline NSNumber *_Nullable CGBUsesProcForResultGetType(CGBUsesProcForResult *resultSet, int32_t row)
{
  CGCUsesProcForResultResultSetRef cResultSet = CGCUsesProcForResultFromCGBUsesProcForResult(resultSet);
  return CGCUsesProcForResultGetTypeIsNull(cResultSet, row) ? nil : @(CGCUsesProcForResultGetTypeValue(cResultSet, row));
}

static inline NSNumber *_Nullable CGBUsesProcForResultGetSize(CGBUsesProcForResult *resultSet, int32_t row)
{
  CGCUsesProcForResultResultSetRef cResultSet = CGCUsesProcForResultFromCGBUsesProcForResult(resultSet);
  return CGCUsesProcForResultGetSizeIsNull(cResultSet, row) ? nil : @(CGCUsesProcForResultGetSizeValue(cResultSet, row));
}

static inline int32_t CGBUsesProcForResultResultCount(CGBUsesProcForResult *resultSet)
{
  return CGCUsesProcForResultResultCount(CGCUsesProcForResultFromCGBUsesProcForResult(resultSet));
}

static inline CGBUsesProcForResult *CGBUsesProcForResultCopy(CGBUsesProcForResult *resultSet, int32_t from, int32_t count)
{
  CGCUsesProcForResultResultSetRef copy;
  CGCUsesProcForResultCopy(CGCUsesProcForResultFromCGBUsesProcForResult(resultSet), &copy, from, count);
  return (__bridge_transfer CGBUsesProcForResult *)copy;
}

static inline NSUInteger CGBUsesProcForResultRowHash(CGBUsesProcForResult *resultSet, int32_t row)
{
  return CGCUsesProcForResultRowHash(CGCUsesProcForResultFromCGBUsesProcForResult(resultSet), row);
}

static inline BOOL CGBUsesProcForResultRowEqual(CGBUsesProcForResult *resultSet1, int32_t row1, CGBUsesProcForResult *resultSet2, int32_t row2)
{
  return CGCUsesProcForResultRowEqual(CGCUsesProcForResultFromCGBUsesProcForResult(resultSet1), row1, CGCUsesProcForResultFromCGBUsesProcForResult(resultSet2), row2);
}

@class CGBBlobReturner;

static inline CGBBlobReturner *CGBBlobReturnerFromCGCBlobReturner(CGCBlobReturnerResultSetRef resultSet)
{
  return (__bridge CGBBlobReturner *)resultSet;
}

static inline CGCBlobReturnerResultSetRef CGCBlobReturnerFromCGBBlobReturner(CGBBlobReturner *resultSet)
{
  return (__bridge CGCBlobReturnerResultSetRef)resultSet;
}

static inline int32_t CGBBlobReturnerGetBlobId(CGBBlobReturner *resultSet, int32_t row)
{
  CGCBlobReturnerResultSetRef cResultSet = CGCBlobReturnerFromCGBBlobReturner(resultSet);
  return CGCBlobReturnerGetBlobId(cResultSet, row);
}

static inline NSData *CGBBlobReturnerGetBNotnull(CGBBlobReturner *resultSet, int32_t row)
{
  CGCBlobReturnerResultSetRef cResultSet = CGCBlobReturnerFromCGBBlobReturner(resultSet);
  return (__bridge NSData *)CGCBlobReturnerGetBNotnull(cResultSet, row);
}

static inline NSData *_Nullable CGBBlobReturnerGetBNullable(CGBBlobReturner *resultSet, int32_t row)
{
  CGCBlobReturnerResultSetRef cResultSet = CGCBlobReturnerFromCGBBlobReturner(resultSet);
  return (__bridge NSData *)CGCBlobReturnerGetBNullable(cResultSet, row);
}

static inline int32_t CGBBlobReturnerResultCount(CGBBlobReturner *resultSet)
{
  return CGCBlobReturnerResultCount(CGCBlobReturnerFromCGBBlobReturner(resultSet));
}

static inline CGBBlobReturner *CGBBlobReturnerCopy(CGBBlobReturner *resultSet, int32_t from, int32_t count)
{
  CGCBlobReturnerResultSetRef copy;
  CGCBlobReturnerCopy(CGCBlobReturnerFromCGBBlobReturner(resultSet), &copy, from, count);
  return (__bridge_transfer CGBBlobReturner *)copy;
}

static inline NSUInteger CGBBlobReturnerRowHash(CGBBlobReturner *resultSet, int32_t row)
{
  return CGCBlobReturnerRowHash(CGCBlobReturnerFromCGBBlobReturner(resultSet), row);
}

static inline BOOL CGBBlobReturnerRowEqual(CGBBlobReturner *resultSet1, int32_t row1, CGBBlobReturner *resultSet2, int32_t row2)
{
  return CGCBlobReturnerRowEqual(CGCBlobReturnerFromCGBBlobReturner(resultSet1), row1, CGCBlobReturnerFromCGBBlobReturner(resultSet2), row2);
}

@class CGBOutCursorProc;

static inline CGBOutCursorProc *CGBOutCursorProcFromCGCOutCursorProc(CGCOutCursorProcResultSetRef resultSet)
{
  return (__bridge CGBOutCursorProc *)resultSet;
}

static inline CGCOutCursorProcResultSetRef CGCOutCursorProcFromCGBOutCursorProc(CGBOutCursorProc *resultSet)
{
  return (__bridge CGCOutCursorProcResultSetRef)resultSet;
}

static inline int32_t CGBOutCursorProcGetId(CGBOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromCGBOutCursorProc(resultSet);
  return CGCOutCursorProcGetId(cResultSet);
}

static inline NSString *_Nullable CGBOutCursorProcGetName(CGBOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromCGBOutCursorProc(resultSet);
  return (__bridge NSString *)CGCOutCursorProcGetName(cResultSet);
}

static inline NSNumber *_Nullable CGBOutCursorProcGetRate(CGBOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromCGBOutCursorProc(resultSet);
  return CGCOutCursorProcGetRateIsNull(cResultSet) ? nil : @(CGCOutCursorProcGetRateValue(cResultSet));
}

static inline NSNumber *_Nullable CGBOutCursorProcGetType(CGBOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromCGBOutCursorProc(resultSet);
  return CGCOutCursorProcGetTypeIsNull(cResultSet) ? nil : @(CGCOutCursorProcGetTypeValue(cResultSet));
}

static inline NSNumber *_Nullable CGBOutCursorProcGetSize(CGBOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromCGBOutCursorProc(resultSet);
  return CGCOutCursorProcGetSizeIsNull(cResultSet) ? nil : @(CGCOutCursorProcGetSizeValue(cResultSet));
}

static inline NSString *CGBOutCursorProcGetExtra1(CGBOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromCGBOutCursorProc(resultSet);
  return (__bridge NSString *)CGCOutCursorProcGetExtra1(cResultSet);
}

static inline NSString *CGBOutCursorProcGetExtra2(CGBOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef cResultSet = CGCOutCursorProcFromCGBOutCursorProc(resultSet);
  return (__bridge NSString *)CGCOutCursorProcGetExtra2(cResultSet);
}

static inline int32_t CGBOutCursorProcResultCount(CGBOutCursorProc *resultSet)
{
  return CGCOutCursorProcResultCount(CGCOutCursorProcFromCGBOutCursorProc(resultSet));
}

static inline CGBOutCursorProc *CGBOutCursorProcCopy(CGBOutCursorProc *resultSet)
{
  CGCOutCursorProcResultSetRef copy;
  CGCOutCursorProcCopy(CGCOutCursorProcFromCGBOutCursorProc(resultSet), &copy);
  return (__bridge_transfer CGBOutCursorProc *)copy;
}

static inline NSUInteger CGBOutCursorProcHash(CGBOutCursorProc *resultSet)
{
  return CGCOutCursorProcHash(CGCOutCursorProcFromCGBOutCursorProc(resultSet));
}

static inline BOOL CGBOutCursorProcEqual(CGBOutCursorProc *resultSet1, CGBOutCursorProc *resultSet2)
{
  return CGCOutCursorProcEqual(CGCOutCursorProcFromCGBOutCursorProc(resultSet1), CGCOutCursorProcFromCGBOutCursorProc(resultSet2));
}

@class CGBThreadThemeInfoList;

static inline CGBThreadThemeInfoList *CGBThreadThemeInfoListFromCGCThreadThemeInfoList(CGCThreadThemeInfoListResultSetRef resultSet)
{
  return (__bridge CGBThreadThemeInfoList *)resultSet;
}

static inline CGCThreadThemeInfoListResultSetRef CGCThreadThemeInfoListFromCGBThreadThemeInfoList(CGBThreadThemeInfoList *resultSet)
{
  return (__bridge CGCThreadThemeInfoListResultSetRef)resultSet;
}

static inline int64_t CGBThreadThemeInfoListGetThreadKey(CGBThreadThemeInfoList *resultSet, int32_t row)
{
  CGCThreadThemeInfoListResultSetRef cResultSet = CGCThreadThemeInfoListFromCGBThreadThemeInfoList(resultSet);
  return CGCThreadThemeInfoListGetThreadKey(cResultSet, row);
}

static inline int32_t CGBThreadThemeInfoListResultCount(CGBThreadThemeInfoList *resultSet)
{
  return CGCThreadThemeInfoListResultCount(CGCThreadThemeInfoListFromCGBThreadThemeInfoList(resultSet));
}

static inline CGBThreadThemeInfoList *CGBThreadThemeInfoListCopy(CGBThreadThemeInfoList *resultSet, int32_t from, int32_t count)
{
  CGCThreadThemeInfoListResultSetRef copy;
  CGCThreadThemeInfoListCopy(CGCThreadThemeInfoListFromCGBThreadThemeInfoList(resultSet), &copy, from, count);
  return (__bridge_transfer CGBThreadThemeInfoList *)copy;
}

static inline NSUInteger CGBThreadThemeInfoListRowHash(CGBThreadThemeInfoList *resultSet, int32_t row)
{
  return CGCThreadThemeInfoListRowHash(CGCThreadThemeInfoListFromCGBThreadThemeInfoList(resultSet), row);
}

static inline BOOL CGBThreadThemeInfoListRowEqual(CGBThreadThemeInfoList *resultSet1, int32_t row1, CGBThreadThemeInfoList *resultSet2, int32_t row2)
{
  return CGCThreadThemeInfoListRowEqual(CGCThreadThemeInfoListFromCGBThreadThemeInfoList(resultSet1), row1, CGCThreadThemeInfoListFromCGBThreadThemeInfoList(resultSet2), row2);
}

@class CGBOutNoDb;

static inline CGBOutNoDb *CGBOutNoDbFromCGCOutNoDb(CGCOutNoDbResultSetRef resultSet)
{
  return (__bridge CGBOutNoDb *)resultSet;
}

static inline CGCOutNoDbResultSetRef CGCOutNoDbFromCGBOutNoDb(CGBOutNoDb *resultSet)
{
  return (__bridge CGCOutNoDbResultSetRef)resultSet;
}

static inline int32_t CGBOutNoDbGetA(CGBOutNoDb *resultSet)
{
  CGCOutNoDbResultSetRef cResultSet = CGCOutNoDbFromCGBOutNoDb(resultSet);
  return CGCOutNoDbGetA(cResultSet);
}

static inline double CGBOutNoDbGetB(CGBOutNoDb *resultSet)
{
  CGCOutNoDbResultSetRef cResultSet = CGCOutNoDbFromCGBOutNoDb(resultSet);
  return CGCOutNoDbGetB(cResultSet);
}

static inline int32_t CGBOutNoDbResultCount(CGBOutNoDb *resultSet)
{
  return CGCOutNoDbResultCount(CGCOutNoDbFromCGBOutNoDb(resultSet));
}

static inline CGBOutNoDb *CGBOutNoDbCopy(CGBOutNoDb *resultSet)
{
  CGCOutNoDbResultSetRef copy;
  CGCOutNoDbCopy(CGCOutNoDbFromCGBOutNoDb(resultSet), &copy);
  return (__bridge_transfer CGBOutNoDb *)copy;
}

static inline NSUInteger CGBOutNoDbHash(CGBOutNoDb *resultSet)
{
  return CGCOutNoDbHash(CGCOutNoDbFromCGBOutNoDb(resultSet));
}

static inline BOOL CGBOutNoDbEqual(CGBOutNoDb *resultSet1, CGBOutNoDb *resultSet2)
{
  return CGCOutNoDbEqual(CGCOutNoDbFromCGBOutNoDb(resultSet1), CGCOutNoDbFromCGBOutNoDb(resultSet2));
}

@class CGBDeclareCursorLikeCursor;

static inline CGBDeclareCursorLikeCursor *CGBDeclareCursorLikeCursorFromCGCDeclareCursorLikeCursor(CGCDeclareCursorLikeCursorResultSetRef resultSet)
{
  return (__bridge CGBDeclareCursorLikeCursor *)resultSet;
}

static inline CGCDeclareCursorLikeCursorResultSetRef CGCDeclareCursorLikeCursorFromCGBDeclareCursorLikeCursor(CGBDeclareCursorLikeCursor *resultSet)
{
  return (__bridge CGCDeclareCursorLikeCursorResultSetRef)resultSet;
}

static inline int32_t CGBDeclareCursorLikeCursorGetA(CGBDeclareCursorLikeCursor *resultSet)
{
  CGCDeclareCursorLikeCursorResultSetRef cResultSet = CGCDeclareCursorLikeCursorFromCGBDeclareCursorLikeCursor(resultSet);
  return CGCDeclareCursorLikeCursorGetA(cResultSet);
}

static inline double CGBDeclareCursorLikeCursorGetB(CGBDeclareCursorLikeCursor *resultSet)
{
  CGCDeclareCursorLikeCursorResultSetRef cResultSet = CGCDeclareCursorLikeCursorFromCGBDeclareCursorLikeCursor(resultSet);
  return CGCDeclareCursorLikeCursorGetB(cResultSet);
}

static inline int32_t CGBDeclareCursorLikeCursorResultCount(CGBDeclareCursorLikeCursor *resultSet)
{
  return CGCDeclareCursorLikeCursorResultCount(CGCDeclareCursorLikeCursorFromCGBDeclareCursorLikeCursor(resultSet));
}

static inline CGBDeclareCursorLikeCursor *CGBDeclareCursorLikeCursorCopy(CGBDeclareCursorLikeCursor *resultSet)
{
  CGCDeclareCursorLikeCursorResultSetRef copy;
  CGCDeclareCursorLikeCursorCopy(CGCDeclareCursorLikeCursorFromCGBDeclareCursorLikeCursor(resultSet), &copy);
  return (__bridge_transfer CGBDeclareCursorLikeCursor *)copy;
}

static inline NSUInteger CGBDeclareCursorLikeCursorHash(CGBDeclareCursorLikeCursor *resultSet)
{
  return CGCDeclareCursorLikeCursorHash(CGCDeclareCursorLikeCursorFromCGBDeclareCursorLikeCursor(resultSet));
}

static inline BOOL CGBDeclareCursorLikeCursorEqual(CGBDeclareCursorLikeCursor *resultSet1, CGBDeclareCursorLikeCursor *resultSet2)
{
  return CGCDeclareCursorLikeCursorEqual(CGCDeclareCursorLikeCursorFromCGBDeclareCursorLikeCursor(resultSet1), CGCDeclareCursorLikeCursorFromCGBDeclareCursorLikeCursor(resultSet2));
}

@class CGBDeclareCursorLikeProc;

static inline CGBDeclareCursorLikeProc *CGBDeclareCursorLikeProcFromCGCDeclareCursorLikeProc(CGCDeclareCursorLikeProcResultSetRef resultSet)
{
  return (__bridge CGBDeclareCursorLikeProc *)resultSet;
}

static inline CGCDeclareCursorLikeProcResultSetRef CGCDeclareCursorLikeProcFromCGBDeclareCursorLikeProc(CGBDeclareCursorLikeProc *resultSet)
{
  return (__bridge CGCDeclareCursorLikeProcResultSetRef)resultSet;
}

static inline NSNumber *_Nullable CGBDeclareCursorLikeProcGetA(CGBDeclareCursorLikeProc *resultSet)
{
  CGCDeclareCursorLikeProcResultSetRef cResultSet = CGCDeclareCursorLikeProcFromCGBDeclareCursorLikeProc(resultSet);
  return CGCDeclareCursorLikeProcGetAIsNull(cResultSet) ? nil : @(CGCDeclareCursorLikeProcGetAValue(cResultSet));
}

static inline NSString *_Nullable CGBDeclareCursorLikeProcGetB(CGBDeclareCursorLikeProc *resultSet)
{
  CGCDeclareCursorLikeProcResultSetRef cResultSet = CGCDeclareCursorLikeProcFromCGBDeclareCursorLikeProc(resultSet);
  return (__bridge NSString *)CGCDeclareCursorLikeProcGetB(cResultSet);
}

static inline int32_t CGBDeclareCursorLikeProcResultCount(CGBDeclareCursorLikeProc *resultSet)
{
  return CGCDeclareCursorLikeProcResultCount(CGCDeclareCursorLikeProcFromCGBDeclareCursorLikeProc(resultSet));
}

static inline CGBDeclareCursorLikeProc *CGBDeclareCursorLikeProcCopy(CGBDeclareCursorLikeProc *resultSet)
{
  CGCDeclareCursorLikeProcResultSetRef copy;
  CGCDeclareCursorLikeProcCopy(CGCDeclareCursorLikeProcFromCGBDeclareCursorLikeProc(resultSet), &copy);
  return (__bridge_transfer CGBDeclareCursorLikeProc *)copy;
}

static inline NSUInteger CGBDeclareCursorLikeProcHash(CGBDeclareCursorLikeProc *resultSet)
{
  return CGCDeclareCursorLikeProcHash(CGCDeclareCursorLikeProcFromCGBDeclareCursorLikeProc(resultSet));
}

static inline BOOL CGBDeclareCursorLikeProcEqual(CGBDeclareCursorLikeProc *resultSet1, CGBDeclareCursorLikeProc *resultSet2)
{
  return CGCDeclareCursorLikeProcEqual(CGCDeclareCursorLikeProcFromCGBDeclareCursorLikeProc(resultSet1), CGCDeclareCursorLikeProcFromCGBDeclareCursorLikeProc(resultSet2));
}

@class CGBDeclareCursorLikeTable;

static inline CGBDeclareCursorLikeTable *CGBDeclareCursorLikeTableFromCGCDeclareCursorLikeTable(CGCDeclareCursorLikeTableResultSetRef resultSet)
{
  return (__bridge CGBDeclareCursorLikeTable *)resultSet;
}

static inline CGCDeclareCursorLikeTableResultSetRef CGCDeclareCursorLikeTableFromCGBDeclareCursorLikeTable(CGBDeclareCursorLikeTable *resultSet)
{
  return (__bridge CGCDeclareCursorLikeTableResultSetRef)resultSet;
}

static inline int32_t CGBDeclareCursorLikeTableGetId(CGBDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef cResultSet = CGCDeclareCursorLikeTableFromCGBDeclareCursorLikeTable(resultSet);
  return CGCDeclareCursorLikeTableGetId(cResultSet);
}

static inline NSString *_Nullable CGBDeclareCursorLikeTableGetName(CGBDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef cResultSet = CGCDeclareCursorLikeTableFromCGBDeclareCursorLikeTable(resultSet);
  return (__bridge NSString *)CGCDeclareCursorLikeTableGetName(cResultSet);
}

static inline NSNumber *_Nullable CGBDeclareCursorLikeTableGetRate(CGBDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef cResultSet = CGCDeclareCursorLikeTableFromCGBDeclareCursorLikeTable(resultSet);
  return CGCDeclareCursorLikeTableGetRateIsNull(cResultSet) ? nil : @(CGCDeclareCursorLikeTableGetRateValue(cResultSet));
}

static inline NSNumber *_Nullable CGBDeclareCursorLikeTableGetType(CGBDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef cResultSet = CGCDeclareCursorLikeTableFromCGBDeclareCursorLikeTable(resultSet);
  return CGCDeclareCursorLikeTableGetTypeIsNull(cResultSet) ? nil : @(CGCDeclareCursorLikeTableGetTypeValue(cResultSet));
}

static inline NSNumber *_Nullable CGBDeclareCursorLikeTableGetSize(CGBDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef cResultSet = CGCDeclareCursorLikeTableFromCGBDeclareCursorLikeTable(resultSet);
  return CGCDeclareCursorLikeTableGetSizeIsNull(cResultSet) ? nil : @(CGCDeclareCursorLikeTableGetSizeValue(cResultSet));
}

static inline int32_t CGBDeclareCursorLikeTableResultCount(CGBDeclareCursorLikeTable *resultSet)
{
  return CGCDeclareCursorLikeTableResultCount(CGCDeclareCursorLikeTableFromCGBDeclareCursorLikeTable(resultSet));
}

static inline CGBDeclareCursorLikeTable *CGBDeclareCursorLikeTableCopy(CGBDeclareCursorLikeTable *resultSet)
{
  CGCDeclareCursorLikeTableResultSetRef copy;
  CGCDeclareCursorLikeTableCopy(CGCDeclareCursorLikeTableFromCGBDeclareCursorLikeTable(resultSet), &copy);
  return (__bridge_transfer CGBDeclareCursorLikeTable *)copy;
}

static inline NSUInteger CGBDeclareCursorLikeTableHash(CGBDeclareCursorLikeTable *resultSet)
{
  return CGCDeclareCursorLikeTableHash(CGCDeclareCursorLikeTableFromCGBDeclareCursorLikeTable(resultSet));
}

static inline BOOL CGBDeclareCursorLikeTableEqual(CGBDeclareCursorLikeTable *resultSet1, CGBDeclareCursorLikeTable *resultSet2)
{
  return CGCDeclareCursorLikeTableEqual(CGCDeclareCursorLikeTableFromCGBDeclareCursorLikeTable(resultSet1), CGCDeclareCursorLikeTableFromCGBDeclareCursorLikeTable(resultSet2));
}

@class CGBDeclareCursorLikeView;

static inline CGBDeclareCursorLikeView *CGBDeclareCursorLikeViewFromCGCDeclareCursorLikeView(CGCDeclareCursorLikeViewResultSetRef resultSet)
{
  return (__bridge CGBDeclareCursorLikeView *)resultSet;
}

static inline CGCDeclareCursorLikeViewResultSetRef CGCDeclareCursorLikeViewFromCGBDeclareCursorLikeView(CGBDeclareCursorLikeView *resultSet)
{
  return (__bridge CGCDeclareCursorLikeViewResultSetRef)resultSet;
}

static inline int32_t CGBDeclareCursorLikeViewGetF1(CGBDeclareCursorLikeView *resultSet)
{
  CGCDeclareCursorLikeViewResultSetRef cResultSet = CGCDeclareCursorLikeViewFromCGBDeclareCursorLikeView(resultSet);
  return CGCDeclareCursorLikeViewGetF1(cResultSet);
}

static inline int32_t CGBDeclareCursorLikeViewGetF2(CGBDeclareCursorLikeView *resultSet)
{
  CGCDeclareCursorLikeViewResultSetRef cResultSet = CGCDeclareCursorLikeViewFromCGBDeclareCursorLikeView(resultSet);
  return CGCDeclareCursorLikeViewGetF2(cResultSet);
}

static inline int32_t CGBDeclareCursorLikeViewGetF3(CGBDeclareCursorLikeView *resultSet)
{
  CGCDeclareCursorLikeViewResultSetRef cResultSet = CGCDeclareCursorLikeViewFromCGBDeclareCursorLikeView(resultSet);
  return CGCDeclareCursorLikeViewGetF3(cResultSet);
}

static inline int32_t CGBDeclareCursorLikeViewResultCount(CGBDeclareCursorLikeView *resultSet)
{
  return CGCDeclareCursorLikeViewResultCount(CGCDeclareCursorLikeViewFromCGBDeclareCursorLikeView(resultSet));
}

static inline CGBDeclareCursorLikeView *CGBDeclareCursorLikeViewCopy(CGBDeclareCursorLikeView *resultSet)
{
  CGCDeclareCursorLikeViewResultSetRef copy;
  CGCDeclareCursorLikeViewCopy(CGCDeclareCursorLikeViewFromCGBDeclareCursorLikeView(resultSet), &copy);
  return (__bridge_transfer CGBDeclareCursorLikeView *)copy;
}

static inline NSUInteger CGBDeclareCursorLikeViewHash(CGBDeclareCursorLikeView *resultSet)
{
  return CGCDeclareCursorLikeViewHash(CGCDeclareCursorLikeViewFromCGBDeclareCursorLikeView(resultSet));
}

static inline BOOL CGBDeclareCursorLikeViewEqual(CGBDeclareCursorLikeView *resultSet1, CGBDeclareCursorLikeView *resultSet2)
{
  return CGCDeclareCursorLikeViewEqual(CGCDeclareCursorLikeViewFromCGBDeclareCursorLikeView(resultSet1), CGCDeclareCursorLikeViewFromCGBDeclareCursorLikeView(resultSet2));
}

@class CGBFetchToCursorFromCursor;

static inline CGBFetchToCursorFromCursor *CGBFetchToCursorFromCursorFromCGCFetchToCursorFromCursor(CGCFetchToCursorFromCursorResultSetRef resultSet)
{
  return (__bridge CGBFetchToCursorFromCursor *)resultSet;
}

static inline CGCFetchToCursorFromCursorResultSetRef CGCFetchToCursorFromCursorFromCGBFetchToCursorFromCursor(CGBFetchToCursorFromCursor *resultSet)
{
  return (__bridge CGCFetchToCursorFromCursorResultSetRef)resultSet;
}

static inline int32_t CGBFetchToCursorFromCursorGetA(CGBFetchToCursorFromCursor *resultSet)
{
  CGCFetchToCursorFromCursorResultSetRef cResultSet = CGCFetchToCursorFromCursorFromCGBFetchToCursorFromCursor(resultSet);
  return CGCFetchToCursorFromCursorGetA(cResultSet);
}

static inline NSString *CGBFetchToCursorFromCursorGetB(CGBFetchToCursorFromCursor *resultSet)
{
  CGCFetchToCursorFromCursorResultSetRef cResultSet = CGCFetchToCursorFromCursorFromCGBFetchToCursorFromCursor(resultSet);
  return (__bridge NSString *)CGCFetchToCursorFromCursorGetB(cResultSet);
}

static inline int32_t CGBFetchToCursorFromCursorResultCount(CGBFetchToCursorFromCursor *resultSet)
{
  return CGCFetchToCursorFromCursorResultCount(CGCFetchToCursorFromCursorFromCGBFetchToCursorFromCursor(resultSet));
}

static inline CGBFetchToCursorFromCursor *CGBFetchToCursorFromCursorCopy(CGBFetchToCursorFromCursor *resultSet)
{
  CGCFetchToCursorFromCursorResultSetRef copy;
  CGCFetchToCursorFromCursorCopy(CGCFetchToCursorFromCursorFromCGBFetchToCursorFromCursor(resultSet), &copy);
  return (__bridge_transfer CGBFetchToCursorFromCursor *)copy;
}

static inline NSUInteger CGBFetchToCursorFromCursorHash(CGBFetchToCursorFromCursor *resultSet)
{
  return CGCFetchToCursorFromCursorHash(CGCFetchToCursorFromCursorFromCGBFetchToCursorFromCursor(resultSet));
}

static inline BOOL CGBFetchToCursorFromCursorEqual(CGBFetchToCursorFromCursor *resultSet1, CGBFetchToCursorFromCursor *resultSet2)
{
  return CGCFetchToCursorFromCursorEqual(CGCFetchToCursorFromCursorFromCGBFetchToCursorFromCursor(resultSet1), CGCFetchToCursorFromCursorFromCGBFetchToCursorFromCursor(resultSet2));
}

@class CGBOutUnionHelper;

static inline CGBOutUnionHelper *CGBOutUnionHelperFromCGCOutUnionHelper(CGCOutUnionHelperResultSetRef resultSet)
{
  return (__bridge CGBOutUnionHelper *)resultSet;
}

static inline CGCOutUnionHelperResultSetRef CGCOutUnionHelperFromCGBOutUnionHelper(CGBOutUnionHelper *resultSet)
{
  return (__bridge CGCOutUnionHelperResultSetRef)resultSet;
}

static inline int32_t CGBOutUnionHelperGetX(CGBOutUnionHelper *resultSet, int32_t row)
{
  CGCOutUnionHelperResultSetRef cResultSet = CGCOutUnionHelperFromCGBOutUnionHelper(resultSet);
  return CGCOutUnionHelperGetX(cResultSet, row);
}

static inline int32_t CGBOutUnionHelperResultCount(CGBOutUnionHelper *resultSet)
{
  return CGCOutUnionHelperResultCount(CGCOutUnionHelperFromCGBOutUnionHelper(resultSet));
}

static inline CGBOutUnionHelper *CGBOutUnionHelperCopy(CGBOutUnionHelper *resultSet, int32_t from, int32_t count)
{
  CGCOutUnionHelperResultSetRef copy;
  CGCOutUnionHelperCopy(CGCOutUnionHelperFromCGBOutUnionHelper(resultSet), &copy, from, count);
  return (__bridge_transfer CGBOutUnionHelper *)copy;
}

static inline NSUInteger CGBOutUnionHelperRowHash(CGBOutUnionHelper *resultSet, int32_t row)
{
  return CGCOutUnionHelperRowHash(CGCOutUnionHelperFromCGBOutUnionHelper(resultSet), row);
}

static inline BOOL CGBOutUnionHelperRowEqual(CGBOutUnionHelper *resultSet1, int32_t row1, CGBOutUnionHelper *resultSet2, int32_t row2)
{
  return CGCOutUnionHelperRowEqual(CGCOutUnionHelperFromCGBOutUnionHelper(resultSet1), row1, CGCOutUnionHelperFromCGBOutUnionHelper(resultSet2), row2);
}

@class CGBOutUnionDmlHelper;

static inline CGBOutUnionDmlHelper *CGBOutUnionDmlHelperFromCGCOutUnionDmlHelper(CGCOutUnionDmlHelperResultSetRef resultSet)
{
  return (__bridge CGBOutUnionDmlHelper *)resultSet;
}

static inline CGCOutUnionDmlHelperResultSetRef CGCOutUnionDmlHelperFromCGBOutUnionDmlHelper(CGBOutUnionDmlHelper *resultSet)
{
  return (__bridge CGCOutUnionDmlHelperResultSetRef)resultSet;
}

static inline int32_t CGBOutUnionDmlHelperGetX(CGBOutUnionDmlHelper *resultSet, int32_t row)
{
  CGCOutUnionDmlHelperResultSetRef cResultSet = CGCOutUnionDmlHelperFromCGBOutUnionDmlHelper(resultSet);
  return CGCOutUnionDmlHelperGetX(cResultSet, row);
}

static inline int32_t CGBOutUnionDmlHelperResultCount(CGBOutUnionDmlHelper *resultSet)
{
  return CGCOutUnionDmlHelperResultCount(CGCOutUnionDmlHelperFromCGBOutUnionDmlHelper(resultSet));
}

static inline CGBOutUnionDmlHelper *CGBOutUnionDmlHelperCopy(CGBOutUnionDmlHelper *resultSet, int32_t from, int32_t count)
{
  CGCOutUnionDmlHelperResultSetRef copy;
  CGCOutUnionDmlHelperCopy(CGCOutUnionDmlHelperFromCGBOutUnionDmlHelper(resultSet), &copy, from, count);
  return (__bridge_transfer CGBOutUnionDmlHelper *)copy;
}

static inline NSUInteger CGBOutUnionDmlHelperRowHash(CGBOutUnionDmlHelper *resultSet, int32_t row)
{
  return CGCOutUnionDmlHelperRowHash(CGCOutUnionDmlHelperFromCGBOutUnionDmlHelper(resultSet), row);
}

static inline BOOL CGBOutUnionDmlHelperRowEqual(CGBOutUnionDmlHelper *resultSet1, int32_t row1, CGBOutUnionDmlHelper *resultSet2, int32_t row2)
{
  return CGCOutUnionDmlHelperRowEqual(CGCOutUnionDmlHelperFromCGBOutUnionDmlHelper(resultSet1), row1, CGCOutUnionDmlHelperFromCGBOutUnionDmlHelper(resultSet2), row2);
}

@class CGBForwardOutUnion;

static inline CGBForwardOutUnion *CGBForwardOutUnionFromCGCForwardOutUnion(CGCForwardOutUnionResultSetRef resultSet)
{
  return (__bridge CGBForwardOutUnion *)resultSet;
}

static inline CGCForwardOutUnionResultSetRef CGCForwardOutUnionFromCGBForwardOutUnion(CGBForwardOutUnion *resultSet)
{
  return (__bridge CGCForwardOutUnionResultSetRef)resultSet;
}

static inline int32_t CGBForwardOutUnionGetX(CGBForwardOutUnion *resultSet, int32_t row)
{
  CGCForwardOutUnionResultSetRef cResultSet = CGCForwardOutUnionFromCGBForwardOutUnion(resultSet);
  return CGCForwardOutUnionGetX(cResultSet, row);
}

static inline int32_t CGBForwardOutUnionResultCount(CGBForwardOutUnion *resultSet)
{
  return CGCForwardOutUnionResultCount(CGCForwardOutUnionFromCGBForwardOutUnion(resultSet));
}

static inline CGBForwardOutUnion *CGBForwardOutUnionCopy(CGBForwardOutUnion *resultSet, int32_t from, int32_t count)
{
  CGCForwardOutUnionResultSetRef copy;
  CGCForwardOutUnionCopy(CGCForwardOutUnionFromCGBForwardOutUnion(resultSet), &copy, from, count);
  return (__bridge_transfer CGBForwardOutUnion *)copy;
}

static inline NSUInteger CGBForwardOutUnionRowHash(CGBForwardOutUnion *resultSet, int32_t row)
{
  return CGCForwardOutUnionRowHash(CGCForwardOutUnionFromCGBForwardOutUnion(resultSet), row);
}

static inline BOOL CGBForwardOutUnionRowEqual(CGBForwardOutUnion *resultSet1, int32_t row1, CGBForwardOutUnion *resultSet2, int32_t row2)
{
  return CGCForwardOutUnionRowEqual(CGCForwardOutUnionFromCGBForwardOutUnion(resultSet1), row1, CGCForwardOutUnionFromCGBForwardOutUnion(resultSet2), row2);
}

@class CGBForwardOutUnionExtern;

static inline CGBForwardOutUnionExtern *CGBForwardOutUnionExternFromCGCForwardOutUnionExtern(CGCForwardOutUnionExternResultSetRef resultSet)
{
  return (__bridge CGBForwardOutUnionExtern *)resultSet;
}

static inline CGCForwardOutUnionExternResultSetRef CGCForwardOutUnionExternFromCGBForwardOutUnionExtern(CGBForwardOutUnionExtern *resultSet)
{
  return (__bridge CGCForwardOutUnionExternResultSetRef)resultSet;
}

static inline int32_t CGBForwardOutUnionExternGetX(CGBForwardOutUnionExtern *resultSet, int32_t row)
{
  CGCForwardOutUnionExternResultSetRef cResultSet = CGCForwardOutUnionExternFromCGBForwardOutUnionExtern(resultSet);
  return CGCForwardOutUnionExternGetX(cResultSet, row);
}

static inline int32_t CGBForwardOutUnionExternResultCount(CGBForwardOutUnionExtern *resultSet)
{
  return CGCForwardOutUnionExternResultCount(CGCForwardOutUnionExternFromCGBForwardOutUnionExtern(resultSet));
}

static inline CGBForwardOutUnionExtern *CGBForwardOutUnionExternCopy(CGBForwardOutUnionExtern *resultSet, int32_t from, int32_t count)
{
  CGCForwardOutUnionExternResultSetRef copy;
  CGCForwardOutUnionExternCopy(CGCForwardOutUnionExternFromCGBForwardOutUnionExtern(resultSet), &copy, from, count);
  return (__bridge_transfer CGBForwardOutUnionExtern *)copy;
}

static inline NSUInteger CGBForwardOutUnionExternRowHash(CGBForwardOutUnionExtern *resultSet, int32_t row)
{
  return CGCForwardOutUnionExternRowHash(CGCForwardOutUnionExternFromCGBForwardOutUnionExtern(resultSet), row);
}

static inline BOOL CGBForwardOutUnionExternRowEqual(CGBForwardOutUnionExtern *resultSet1, int32_t row1, CGBForwardOutUnionExtern *resultSet2, int32_t row2)
{
  return CGCForwardOutUnionExternRowEqual(CGCForwardOutUnionExternFromCGBForwardOutUnionExtern(resultSet1), row1, CGCForwardOutUnionExternFromCGBForwardOutUnionExtern(resultSet2), row2);
}

@class CGBForwardOutUnionDml;

static inline CGBForwardOutUnionDml *CGBForwardOutUnionDmlFromCGCForwardOutUnionDml(CGCForwardOutUnionDmlResultSetRef resultSet)
{
  return (__bridge CGBForwardOutUnionDml *)resultSet;
}

static inline CGCForwardOutUnionDmlResultSetRef CGCForwardOutUnionDmlFromCGBForwardOutUnionDml(CGBForwardOutUnionDml *resultSet)
{
  return (__bridge CGCForwardOutUnionDmlResultSetRef)resultSet;
}

static inline int32_t CGBForwardOutUnionDmlGetX(CGBForwardOutUnionDml *resultSet, int32_t row)
{
  CGCForwardOutUnionDmlResultSetRef cResultSet = CGCForwardOutUnionDmlFromCGBForwardOutUnionDml(resultSet);
  return CGCForwardOutUnionDmlGetX(cResultSet, row);
}

static inline int32_t CGBForwardOutUnionDmlResultCount(CGBForwardOutUnionDml *resultSet)
{
  return CGCForwardOutUnionDmlResultCount(CGCForwardOutUnionDmlFromCGBForwardOutUnionDml(resultSet));
}

static inline CGBForwardOutUnionDml *CGBForwardOutUnionDmlCopy(CGBForwardOutUnionDml *resultSet, int32_t from, int32_t count)
{
  CGCForwardOutUnionDmlResultSetRef copy;
  CGCForwardOutUnionDmlCopy(CGCForwardOutUnionDmlFromCGBForwardOutUnionDml(resultSet), &copy, from, count);
  return (__bridge_transfer CGBForwardOutUnionDml *)copy;
}

static inline NSUInteger CGBForwardOutUnionDmlRowHash(CGBForwardOutUnionDml *resultSet, int32_t row)
{
  return CGCForwardOutUnionDmlRowHash(CGCForwardOutUnionDmlFromCGBForwardOutUnionDml(resultSet), row);
}

static inline BOOL CGBForwardOutUnionDmlRowEqual(CGBForwardOutUnionDml *resultSet1, int32_t row1, CGBForwardOutUnionDml *resultSet2, int32_t row2)
{
  return CGCForwardOutUnionDmlRowEqual(CGCForwardOutUnionDmlFromCGBForwardOutUnionDml(resultSet1), row1, CGCForwardOutUnionDmlFromCGBForwardOutUnionDml(resultSet2), row2);
}

@class CGBSimpleIdentity;

static inline CGBSimpleIdentity *CGBSimpleIdentityFromCGCSimpleIdentity(CGCSimpleIdentityResultSetRef resultSet)
{
  return (__bridge CGBSimpleIdentity *)resultSet;
}

static inline CGCSimpleIdentityResultSetRef CGCSimpleIdentityFromCGBSimpleIdentity(CGBSimpleIdentity *resultSet)
{
  return (__bridge CGCSimpleIdentityResultSetRef)resultSet;
}

static inline int32_t CGBSimpleIdentityGetId(CGBSimpleIdentity *resultSet, int32_t row)
{
  CGCSimpleIdentityResultSetRef cResultSet = CGCSimpleIdentityFromCGBSimpleIdentity(resultSet);
  return CGCSimpleIdentityGetId(cResultSet, row);
}

static inline int32_t CGBSimpleIdentityGetData(CGBSimpleIdentity *resultSet, int32_t row)
{
  CGCSimpleIdentityResultSetRef cResultSet = CGCSimpleIdentityFromCGBSimpleIdentity(resultSet);
  return CGCSimpleIdentityGetData(cResultSet, row);
}

static inline int32_t CGBSimpleIdentityResultCount(CGBSimpleIdentity *resultSet)
{
  return CGCSimpleIdentityResultCount(CGCSimpleIdentityFromCGBSimpleIdentity(resultSet));
}

static inline CGBSimpleIdentity *CGBSimpleIdentityCopy(CGBSimpleIdentity *resultSet, int32_t from, int32_t count)
{
  CGCSimpleIdentityResultSetRef copy;
  CGCSimpleIdentityCopy(CGCSimpleIdentityFromCGBSimpleIdentity(resultSet), &copy, from, count);
  return (__bridge_transfer CGBSimpleIdentity *)copy;
}

static inline NSUInteger CGBSimpleIdentityRowHash(CGBSimpleIdentity *resultSet, int32_t row)
{
  return CGCSimpleIdentityRowHash(CGCSimpleIdentityFromCGBSimpleIdentity(resultSet), row);
}

static inline BOOL CGBSimpleIdentityRowEqual(CGBSimpleIdentity *resultSet1, int32_t row1, CGBSimpleIdentity *resultSet2, int32_t row2)
{
  return CGCSimpleIdentityRowEqual(CGCSimpleIdentityFromCGBSimpleIdentity(resultSet1), row1, CGCSimpleIdentityFromCGBSimpleIdentity(resultSet2), row2);
}

@class CGBComplexIdentity;

static inline CGBComplexIdentity *CGBComplexIdentityFromCGCComplexIdentity(CGCComplexIdentityResultSetRef resultSet)
{
  return (__bridge CGBComplexIdentity *)resultSet;
}

static inline CGCComplexIdentityResultSetRef CGCComplexIdentityFromCGBComplexIdentity(CGBComplexIdentity *resultSet)
{
  return (__bridge CGCComplexIdentityResultSetRef)resultSet;
}

static inline int32_t CGBComplexIdentityGetCol1(CGBComplexIdentity *resultSet, int32_t row)
{
  CGCComplexIdentityResultSetRef cResultSet = CGCComplexIdentityFromCGBComplexIdentity(resultSet);
  return CGCComplexIdentityGetCol1(cResultSet, row);
}

static inline int32_t CGBComplexIdentityGetCol2(CGBComplexIdentity *resultSet, int32_t row)
{
  CGCComplexIdentityResultSetRef cResultSet = CGCComplexIdentityFromCGBComplexIdentity(resultSet);
  return CGCComplexIdentityGetCol2(cResultSet, row);
}

static inline int32_t CGBComplexIdentityGetData(CGBComplexIdentity *resultSet, int32_t row)
{
  CGCComplexIdentityResultSetRef cResultSet = CGCComplexIdentityFromCGBComplexIdentity(resultSet);
  return CGCComplexIdentityGetData(cResultSet, row);
}

static inline int32_t CGBComplexIdentityResultCount(CGBComplexIdentity *resultSet)
{
  return CGCComplexIdentityResultCount(CGCComplexIdentityFromCGBComplexIdentity(resultSet));
}

static inline CGBComplexIdentity *CGBComplexIdentityCopy(CGBComplexIdentity *resultSet, int32_t from, int32_t count)
{
  CGCComplexIdentityResultSetRef copy;
  CGCComplexIdentityCopy(CGCComplexIdentityFromCGBComplexIdentity(resultSet), &copy, from, count);
  return (__bridge_transfer CGBComplexIdentity *)copy;
}

static inline NSUInteger CGBComplexIdentityRowHash(CGBComplexIdentity *resultSet, int32_t row)
{
  return CGCComplexIdentityRowHash(CGCComplexIdentityFromCGBComplexIdentity(resultSet), row);
}

static inline BOOL CGBComplexIdentityRowEqual(CGBComplexIdentity *resultSet1, int32_t row1, CGBComplexIdentity *resultSet2, int32_t row2)
{
  return CGCComplexIdentityRowEqual(CGCComplexIdentityFromCGBComplexIdentity(resultSet1), row1, CGCComplexIdentityFromCGBComplexIdentity(resultSet2), row2);
}

@class CGBOutCursorIdentity;

static inline CGBOutCursorIdentity *CGBOutCursorIdentityFromCGCOutCursorIdentity(CGCOutCursorIdentityResultSetRef resultSet)
{
  return (__bridge CGBOutCursorIdentity *)resultSet;
}

static inline CGCOutCursorIdentityResultSetRef CGCOutCursorIdentityFromCGBOutCursorIdentity(CGBOutCursorIdentity *resultSet)
{
  return (__bridge CGCOutCursorIdentityResultSetRef)resultSet;
}

static inline int32_t CGBOutCursorIdentityGetId(CGBOutCursorIdentity *resultSet)
{
  CGCOutCursorIdentityResultSetRef cResultSet = CGCOutCursorIdentityFromCGBOutCursorIdentity(resultSet);
  return CGCOutCursorIdentityGetId(cResultSet);
}

static inline int32_t CGBOutCursorIdentityGetData(CGBOutCursorIdentity *resultSet)
{
  CGCOutCursorIdentityResultSetRef cResultSet = CGCOutCursorIdentityFromCGBOutCursorIdentity(resultSet);
  return CGCOutCursorIdentityGetData(cResultSet);
}

static inline int32_t CGBOutCursorIdentityResultCount(CGBOutCursorIdentity *resultSet)
{
  return CGCOutCursorIdentityResultCount(CGCOutCursorIdentityFromCGBOutCursorIdentity(resultSet));
}

static inline CGBOutCursorIdentity *CGBOutCursorIdentityCopy(CGBOutCursorIdentity *resultSet)
{
  CGCOutCursorIdentityResultSetRef copy;
  CGCOutCursorIdentityCopy(CGCOutCursorIdentityFromCGBOutCursorIdentity(resultSet), &copy);
  return (__bridge_transfer CGBOutCursorIdentity *)copy;
}

static inline NSUInteger CGBOutCursorIdentityHash(CGBOutCursorIdentity *resultSet)
{
  return CGCOutCursorIdentityHash(CGCOutCursorIdentityFromCGBOutCursorIdentity(resultSet));
}

static inline BOOL CGBOutCursorIdentityEqual(CGBOutCursorIdentity *resultSet1, CGBOutCursorIdentity *resultSet2)
{
  return CGCOutCursorIdentityEqual(CGCOutCursorIdentityFromCGBOutCursorIdentity(resultSet1), CGCOutCursorIdentityFromCGBOutCursorIdentity(resultSet2));
}

@class CGBRadioactiveProc;

static inline CGBRadioactiveProc *CGBRadioactiveProcFromCGCRadioactiveProc(CGCRadioactiveProcResultSetRef resultSet)
{
  return (__bridge CGBRadioactiveProc *)resultSet;
}

static inline CGCRadioactiveProcResultSetRef CGCRadioactiveProcFromCGBRadioactiveProc(CGBRadioactiveProc *resultSet)
{
  return (__bridge CGCRadioactiveProcResultSetRef)resultSet;
}

static inline int32_t CGBRadioactiveProcGetId(CGBRadioactiveProc *resultSet, int32_t row)
{
  CGCRadioactiveProcResultSetRef cResultSet = CGCRadioactiveProcFromCGBRadioactiveProc(resultSet);
  return CGCRadioactiveProcGetId(cResultSet, row);
}

static inline NSString *_Nullable CGBRadioactiveProcGetData(CGBRadioactiveProc *resultSet, int32_t row)
{
  CGCRadioactiveProcResultSetRef cResultSet = CGCRadioactiveProcFromCGBRadioactiveProc(resultSet);
  return (__bridge NSString *)CGCRadioactiveProcGetData(cResultSet, row);
}

static inline BOOL CGBRadioactiveProcGetDataIsEncoded(CGBRadioactiveProc *resultSet)
{
  return CGCRadioactiveProcGetDataIsEncoded(CGCRadioactiveProcFromCGBRadioactiveProc(resultSet));
}

static inline void CGBRadioactiveProcSetEncoding(int32_t col, BOOL encode)
{
  return CGCRadioactiveProcSetEncoding(col, encode);
}

static inline int32_t CGBRadioactiveProcResultCount(CGBRadioactiveProc *resultSet)
{
  return CGCRadioactiveProcResultCount(CGCRadioactiveProcFromCGBRadioactiveProc(resultSet));
}

static inline CGBRadioactiveProc *CGBRadioactiveProcCopy(CGBRadioactiveProc *resultSet, int32_t from, int32_t count)
{
  CGCRadioactiveProcResultSetRef copy;
  CGCRadioactiveProcCopy(CGCRadioactiveProcFromCGBRadioactiveProc(resultSet), &copy, from, count);
  return (__bridge_transfer CGBRadioactiveProc *)copy;
}

static inline NSUInteger CGBRadioactiveProcRowHash(CGBRadioactiveProc *resultSet, int32_t row)
{
  return CGCRadioactiveProcRowHash(CGCRadioactiveProcFromCGBRadioactiveProc(resultSet), row);
}

static inline BOOL CGBRadioactiveProcRowEqual(CGBRadioactiveProc *resultSet1, int32_t row1, CGBRadioactiveProc *resultSet2, int32_t row2)
{
  return CGCRadioactiveProcRowEqual(CGCRadioactiveProcFromCGBRadioactiveProc(resultSet1), row1, CGCRadioactiveProcFromCGBRadioactiveProc(resultSet2), row2);
}

@class CGBAutodropper;

static inline CGBAutodropper *CGBAutodropperFromCGCAutodropper(CGCAutodropperResultSetRef resultSet)
{
  return (__bridge CGBAutodropper *)resultSet;
}

static inline CGCAutodropperResultSetRef CGCAutodropperFromCGBAutodropper(CGBAutodropper *resultSet)
{
  return (__bridge CGCAutodropperResultSetRef)resultSet;
}

static inline int32_t CGBAutodropperGetA(CGBAutodropper *resultSet, int32_t row)
{
  CGCAutodropperResultSetRef cResultSet = CGCAutodropperFromCGBAutodropper(resultSet);
  return CGCAutodropperGetA(cResultSet, row);
}

static inline int32_t CGBAutodropperGetB(CGBAutodropper *resultSet, int32_t row)
{
  CGCAutodropperResultSetRef cResultSet = CGCAutodropperFromCGBAutodropper(resultSet);
  return CGCAutodropperGetB(cResultSet, row);
}

static inline int32_t CGBAutodropperResultCount(CGBAutodropper *resultSet)
{
  return CGCAutodropperResultCount(CGCAutodropperFromCGBAutodropper(resultSet));
}

static inline CGBAutodropper *CGBAutodropperCopy(CGBAutodropper *resultSet, int32_t from, int32_t count)
{
  CGCAutodropperResultSetRef copy;
  CGCAutodropperCopy(CGCAutodropperFromCGBAutodropper(resultSet), &copy, from, count);
  return (__bridge_transfer CGBAutodropper *)copy;
}

static inline NSUInteger CGBAutodropperRowHash(CGBAutodropper *resultSet, int32_t row)
{
  return CGCAutodropperRowHash(CGCAutodropperFromCGBAutodropper(resultSet), row);
}

static inline BOOL CGBAutodropperRowEqual(CGBAutodropper *resultSet1, int32_t row1, CGBAutodropper *resultSet2, int32_t row2)
{
  return CGCAutodropperRowEqual(CGCAutodropperFromCGBAutodropper(resultSet1), row1, CGCAutodropperFromCGBAutodropper(resultSet2), row2);
}

@class CGBSimpleCursorProc;

static inline CGBSimpleCursorProc *CGBSimpleCursorProcFromCGCSimpleCursorProc(CGCSimpleCursorProcResultSetRef resultSet)
{
  return (__bridge CGBSimpleCursorProc *)resultSet;
}

static inline CGCSimpleCursorProcResultSetRef CGCSimpleCursorProcFromCGBSimpleCursorProc(CGBSimpleCursorProc *resultSet)
{
  return (__bridge CGCSimpleCursorProcResultSetRef)resultSet;
}

static inline int32_t CGBSimpleCursorProcGetId(CGBSimpleCursorProc *resultSet)
{
  CGCSimpleCursorProcResultSetRef cResultSet = CGCSimpleCursorProcFromCGBSimpleCursorProc(resultSet);
  return CGCSimpleCursorProcGetId(cResultSet);
}

static inline int32_t CGBSimpleCursorProcResultCount(CGBSimpleCursorProc *resultSet)
{
  return CGCSimpleCursorProcResultCount(CGCSimpleCursorProcFromCGBSimpleCursorProc(resultSet));
}

static inline CGBSimpleCursorProc *CGBSimpleCursorProcCopy(CGBSimpleCursorProc *resultSet)
{
  CGCSimpleCursorProcResultSetRef copy;
  CGCSimpleCursorProcCopy(CGCSimpleCursorProcFromCGBSimpleCursorProc(resultSet), &copy);
  return (__bridge_transfer CGBSimpleCursorProc *)copy;
}

static inline NSUInteger CGBSimpleCursorProcHash(CGBSimpleCursorProc *resultSet)
{
  return CGCSimpleCursorProcHash(CGCSimpleCursorProcFromCGBSimpleCursorProc(resultSet));
}

static inline BOOL CGBSimpleCursorProcEqual(CGBSimpleCursorProc *resultSet1, CGBSimpleCursorProc *resultSet2)
{
  return CGCSimpleCursorProcEqual(CGCSimpleCursorProcFromCGBSimpleCursorProc(resultSet1), CGCSimpleCursorProcFromCGBSimpleCursorProc(resultSet2));
}

@class CGBRedundantCast;

static inline CGBRedundantCast *CGBRedundantCastFromCGCRedundantCast(CGCRedundantCastResultSetRef resultSet)
{
  return (__bridge CGBRedundantCast *)resultSet;
}

static inline CGCRedundantCastResultSetRef CGCRedundantCastFromCGBRedundantCast(CGBRedundantCast *resultSet)
{
  return (__bridge CGCRedundantCastResultSetRef)resultSet;
}

static inline int32_t CGBRedundantCastGetPlugh(CGBRedundantCast *resultSet, int32_t row)
{
  CGCRedundantCastResultSetRef cResultSet = CGCRedundantCastFromCGBRedundantCast(resultSet);
  return CGCRedundantCastGetPlugh(cResultSet, row);
}

static inline int32_t CGBRedundantCastGetFive(CGBRedundantCast *resultSet, int32_t row)
{
  CGCRedundantCastResultSetRef cResultSet = CGCRedundantCastFromCGBRedundantCast(resultSet);
  return CGCRedundantCastGetFive(cResultSet, row);
}

static inline int32_t CGBRedundantCastResultCount(CGBRedundantCast *resultSet)
{
  return CGCRedundantCastResultCount(CGCRedundantCastFromCGBRedundantCast(resultSet));
}

static inline CGBRedundantCast *CGBRedundantCastCopy(CGBRedundantCast *resultSet, int32_t from, int32_t count)
{
  CGCRedundantCastResultSetRef copy;
  CGCRedundantCastCopy(CGCRedundantCastFromCGBRedundantCast(resultSet), &copy, from, count);
  return (__bridge_transfer CGBRedundantCast *)copy;
}

static inline NSUInteger CGBRedundantCastRowHash(CGBRedundantCast *resultSet, int32_t row)
{
  return CGCRedundantCastRowHash(CGCRedundantCastFromCGBRedundantCast(resultSet), row);
}

static inline BOOL CGBRedundantCastRowEqual(CGBRedundantCast *resultSet1, int32_t row1, CGBRedundantCast *resultSet2, int32_t row2)
{
  return CGCRedundantCastRowEqual(CGCRedundantCastFromCGBRedundantCast(resultSet1), row1, CGCRedundantCastFromCGBRedundantCast(resultSet2), row2);
}

@class CGBOutUnionTwo;

static inline CGBOutUnionTwo *CGBOutUnionTwoFromCGCOutUnionTwo(CGCOutUnionTwoResultSetRef resultSet)
{
  return (__bridge CGBOutUnionTwo *)resultSet;
}

static inline CGCOutUnionTwoResultSetRef CGCOutUnionTwoFromCGBOutUnionTwo(CGBOutUnionTwo *resultSet)
{
  return (__bridge CGCOutUnionTwoResultSetRef)resultSet;
}

static inline int32_t CGBOutUnionTwoGetX(CGBOutUnionTwo *resultSet, int32_t row)
{
  CGCOutUnionTwoResultSetRef cResultSet = CGCOutUnionTwoFromCGBOutUnionTwo(resultSet);
  return CGCOutUnionTwoGetX(cResultSet, row);
}

static inline NSString *CGBOutUnionTwoGetY(CGBOutUnionTwo *resultSet, int32_t row)
{
  CGCOutUnionTwoResultSetRef cResultSet = CGCOutUnionTwoFromCGBOutUnionTwo(resultSet);
  return (__bridge NSString *)CGCOutUnionTwoGetY(cResultSet, row);
}

static inline int32_t CGBOutUnionTwoResultCount(CGBOutUnionTwo *resultSet)
{
  return CGCOutUnionTwoResultCount(CGCOutUnionTwoFromCGBOutUnionTwo(resultSet));
}

static inline CGBOutUnionTwo *CGBOutUnionTwoCopy(CGBOutUnionTwo *resultSet, int32_t from, int32_t count)
{
  CGCOutUnionTwoResultSetRef copy;
  CGCOutUnionTwoCopy(CGCOutUnionTwoFromCGBOutUnionTwo(resultSet), &copy, from, count);
  return (__bridge_transfer CGBOutUnionTwo *)copy;
}

static inline NSUInteger CGBOutUnionTwoRowHash(CGBOutUnionTwo *resultSet, int32_t row)
{
  return CGCOutUnionTwoRowHash(CGCOutUnionTwoFromCGBOutUnionTwo(resultSet), row);
}

static inline BOOL CGBOutUnionTwoRowEqual(CGBOutUnionTwo *resultSet1, int32_t row1, CGBOutUnionTwo *resultSet2, int32_t row2)
{
  return CGCOutUnionTwoRowEqual(CGCOutUnionTwoFromCGBOutUnionTwo(resultSet1), row1, CGCOutUnionTwoFromCGBOutUnionTwo(resultSet2), row2);
}

@class CGBOutUnionFromSelect;

static inline CGBOutUnionFromSelect *CGBOutUnionFromSelectFromCGCOutUnionFromSelect(CGCOutUnionFromSelectResultSetRef resultSet)
{
  return (__bridge CGBOutUnionFromSelect *)resultSet;
}

static inline CGCOutUnionFromSelectResultSetRef CGCOutUnionFromSelectFromCGBOutUnionFromSelect(CGBOutUnionFromSelect *resultSet)
{
  return (__bridge CGCOutUnionFromSelectResultSetRef)resultSet;
}

static inline int32_t CGBOutUnionFromSelectGetX(CGBOutUnionFromSelect *resultSet, int32_t row)
{
  CGCOutUnionFromSelectResultSetRef cResultSet = CGCOutUnionFromSelectFromCGBOutUnionFromSelect(resultSet);
  return CGCOutUnionFromSelectGetX(cResultSet, row);
}

static inline NSString *CGBOutUnionFromSelectGetY(CGBOutUnionFromSelect *resultSet, int32_t row)
{
  CGCOutUnionFromSelectResultSetRef cResultSet = CGCOutUnionFromSelectFromCGBOutUnionFromSelect(resultSet);
  return (__bridge NSString *)CGCOutUnionFromSelectGetY(cResultSet, row);
}

static inline int32_t CGBOutUnionFromSelectResultCount(CGBOutUnionFromSelect *resultSet)
{
  return CGCOutUnionFromSelectResultCount(CGCOutUnionFromSelectFromCGBOutUnionFromSelect(resultSet));
}

static inline CGBOutUnionFromSelect *CGBOutUnionFromSelectCopy(CGBOutUnionFromSelect *resultSet, int32_t from, int32_t count)
{
  CGCOutUnionFromSelectResultSetRef copy;
  CGCOutUnionFromSelectCopy(CGCOutUnionFromSelectFromCGBOutUnionFromSelect(resultSet), &copy, from, count);
  return (__bridge_transfer CGBOutUnionFromSelect *)copy;
}

static inline NSUInteger CGBOutUnionFromSelectRowHash(CGBOutUnionFromSelect *resultSet, int32_t row)
{
  return CGCOutUnionFromSelectRowHash(CGCOutUnionFromSelectFromCGBOutUnionFromSelect(resultSet), row);
}

static inline BOOL CGBOutUnionFromSelectRowEqual(CGBOutUnionFromSelect *resultSet1, int32_t row1, CGBOutUnionFromSelect *resultSet2, int32_t row2)
{
  return CGCOutUnionFromSelectRowEqual(CGCOutUnionFromSelectFromCGBOutUnionFromSelect(resultSet1), row1, CGCOutUnionFromSelectFromCGBOutUnionFromSelect(resultSet2), row2);
}

@class CGBOutUnionValues;

static inline CGBOutUnionValues *CGBOutUnionValuesFromCGCOutUnionValues(CGCOutUnionValuesResultSetRef resultSet)
{
  return (__bridge CGBOutUnionValues *)resultSet;
}

static inline CGCOutUnionValuesResultSetRef CGCOutUnionValuesFromCGBOutUnionValues(CGBOutUnionValues *resultSet)
{
  return (__bridge CGCOutUnionValuesResultSetRef)resultSet;
}

static inline int32_t CGBOutUnionValuesGetX(CGBOutUnionValues *resultSet, int32_t row)
{
  CGCOutUnionValuesResultSetRef cResultSet = CGCOutUnionValuesFromCGBOutUnionValues(resultSet);
  return CGCOutUnionValuesGetX(cResultSet, row);
}

static inline int32_t CGBOutUnionValuesGetY(CGBOutUnionValues *resultSet, int32_t row)
{
  CGCOutUnionValuesResultSetRef cResultSet = CGCOutUnionValuesFromCGBOutUnionValues(resultSet);
  return CGCOutUnionValuesGetY(cResultSet, row);
}

static inline int32_t CGBOutUnionValuesResultCount(CGBOutUnionValues *resultSet)
{
  return CGCOutUnionValuesResultCount(CGCOutUnionValuesFromCGBOutUnionValues(resultSet));
}

static inline CGBOutUnionValues *CGBOutUnionValuesCopy(CGBOutUnionValues *resultSet, int32_t from, int32_t count)
{
  CGCOutUnionValuesResultSetRef copy;
  CGCOutUnionValuesCopy(CGCOutUnionValuesFromCGBOutUnionValues(resultSet), &copy, from, count);
  return (__bridge_transfer CGBOutUnionValues *)copy;
}

static inline NSUInteger CGBOutUnionValuesRowHash(CGBOutUnionValues *resultSet, int32_t row)
{
  return CGCOutUnionValuesRowHash(CGCOutUnionValuesFromCGBOutUnionValues(resultSet), row);
}

static inline BOOL CGBOutUnionValuesRowEqual(CGBOutUnionValues *resultSet1, int32_t row1, CGBOutUnionValues *resultSet2, int32_t row2)
{
  return CGCOutUnionValuesRowEqual(CGCOutUnionValuesFromCGBOutUnionValues(resultSet1), row1, CGCOutUnionValuesFromCGBOutUnionValues(resultSet2), row2);
}

@class CGBOutUnionDml;

static inline CGBOutUnionDml *CGBOutUnionDmlFromCGCOutUnionDml(CGCOutUnionDmlResultSetRef resultSet)
{
  return (__bridge CGBOutUnionDml *)resultSet;
}

static inline CGCOutUnionDmlResultSetRef CGCOutUnionDmlFromCGBOutUnionDml(CGBOutUnionDml *resultSet)
{
  return (__bridge CGCOutUnionDmlResultSetRef)resultSet;
}

static inline int32_t CGBOutUnionDmlGetId(CGBOutUnionDml *resultSet, int32_t row)
{
  CGCOutUnionDmlResultSetRef cResultSet = CGCOutUnionDmlFromCGBOutUnionDml(resultSet);
  return CGCOutUnionDmlGetId(cResultSet, row);
}

static inline NSString *_Nullable CGBOutUnionDmlGetData(CGBOutUnionDml *resultSet, int32_t row)
{
  CGCOutUnionDmlResultSetRef cResultSet = CGCOutUnionDmlFromCGBOutUnionDml(resultSet);
  return (__bridge NSString *)CGCOutUnionDmlGetData(cResultSet, row);
}

static inline BOOL CGBOutUnionDmlGetDataIsEncoded(CGBOutUnionDml *resultSet)
{
  return CGCOutUnionDmlGetDataIsEncoded(CGCOutUnionDmlFromCGBOutUnionDml(resultSet));
}

static inline void CGBOutUnionDmlSetEncoding(int32_t col, BOOL encode)
{
  return CGCOutUnionDmlSetEncoding(col, encode);
}

static inline int32_t CGBOutUnionDmlResultCount(CGBOutUnionDml *resultSet)
{
  return CGCOutUnionDmlResultCount(CGCOutUnionDmlFromCGBOutUnionDml(resultSet));
}

static inline CGBOutUnionDml *CGBOutUnionDmlCopy(CGBOutUnionDml *resultSet, int32_t from, int32_t count)
{
  CGCOutUnionDmlResultSetRef copy;
  CGCOutUnionDmlCopy(CGCOutUnionDmlFromCGBOutUnionDml(resultSet), &copy, from, count);
  return (__bridge_transfer CGBOutUnionDml *)copy;
}

static inline NSUInteger CGBOutUnionDmlRowHash(CGBOutUnionDml *resultSet, int32_t row)
{
  return CGCOutUnionDmlRowHash(CGCOutUnionDmlFromCGBOutUnionDml(resultSet), row);
}

static inline BOOL CGBOutUnionDmlRowEqual(CGBOutUnionDml *resultSet1, int32_t row1, CGBOutUnionDml *resultSet2, int32_t row2)
{
  return CGCOutUnionDmlRowEqual(CGCOutUnionDmlFromCGBOutUnionDml(resultSet1), row1, CGCOutUnionDmlFromCGBOutUnionDml(resultSet2), row2);
}

@class CGBWindowFunctionInvocation;

static inline CGBWindowFunctionInvocation *CGBWindowFunctionInvocationFromCGCWindowFunctionInvocation(CGCWindowFunctionInvocationResultSetRef resultSet)
{
  return (__bridge CGBWindowFunctionInvocation *)resultSet;
}

static inline CGCWindowFunctionInvocationResultSetRef CGCWindowFunctionInvocationFromCGBWindowFunctionInvocation(CGBWindowFunctionInvocation *resultSet)
{
  return (__bridge CGCWindowFunctionInvocationResultSetRef)resultSet;
}

static inline int32_t CGBWindowFunctionInvocationGetId(CGBWindowFunctionInvocation *resultSet, int32_t row)
{
  CGCWindowFunctionInvocationResultSetRef cResultSet = CGCWindowFunctionInvocationFromCGBWindowFunctionInvocation(resultSet);
  return CGCWindowFunctionInvocationGetId(cResultSet, row);
}

static inline int32_t CGBWindowFunctionInvocationGetRowNum(CGBWindowFunctionInvocation *resultSet, int32_t row)
{
  CGCWindowFunctionInvocationResultSetRef cResultSet = CGCWindowFunctionInvocationFromCGBWindowFunctionInvocation(resultSet);
  return CGCWindowFunctionInvocationGetRowNum(cResultSet, row);
}

static inline int32_t CGBWindowFunctionInvocationResultCount(CGBWindowFunctionInvocation *resultSet)
{
  return CGCWindowFunctionInvocationResultCount(CGCWindowFunctionInvocationFromCGBWindowFunctionInvocation(resultSet));
}

static inline CGBWindowFunctionInvocation *CGBWindowFunctionInvocationCopy(CGBWindowFunctionInvocation *resultSet, int32_t from, int32_t count)
{
  CGCWindowFunctionInvocationResultSetRef copy;
  CGCWindowFunctionInvocationCopy(CGCWindowFunctionInvocationFromCGBWindowFunctionInvocation(resultSet), &copy, from, count);
  return (__bridge_transfer CGBWindowFunctionInvocation *)copy;
}

static inline NSUInteger CGBWindowFunctionInvocationRowHash(CGBWindowFunctionInvocation *resultSet, int32_t row)
{
  return CGCWindowFunctionInvocationRowHash(CGCWindowFunctionInvocationFromCGBWindowFunctionInvocation(resultSet), row);
}

static inline BOOL CGBWindowFunctionInvocationRowEqual(CGBWindowFunctionInvocation *resultSet1, int32_t row1, CGBWindowFunctionInvocation *resultSet2, int32_t row2)
{
  return CGCWindowFunctionInvocationRowEqual(CGCWindowFunctionInvocationFromCGBWindowFunctionInvocation(resultSet1), row1, CGCWindowFunctionInvocationFromCGBWindowFunctionInvocation(resultSet2), row2);
}

@class CGBUseReturn;

static inline CGBUseReturn *CGBUseReturnFromCGCUseReturn(CGCUseReturnResultSetRef resultSet)
{
  return (__bridge CGBUseReturn *)resultSet;
}

static inline CGCUseReturnResultSetRef CGCUseReturnFromCGBUseReturn(CGBUseReturn *resultSet)
{
  return (__bridge CGCUseReturnResultSetRef)resultSet;
}

static inline int32_t CGBUseReturnGetX(CGBUseReturn *resultSet, int32_t row)
{
  CGCUseReturnResultSetRef cResultSet = CGCUseReturnFromCGBUseReturn(resultSet);
  return CGCUseReturnGetX(cResultSet, row);
}

static inline int32_t CGBUseReturnResultCount(CGBUseReturn *resultSet)
{
  return CGCUseReturnResultCount(CGCUseReturnFromCGBUseReturn(resultSet));
}

static inline CGBUseReturn *CGBUseReturnCopy(CGBUseReturn *resultSet, int32_t from, int32_t count)
{
  CGCUseReturnResultSetRef copy;
  CGCUseReturnCopy(CGCUseReturnFromCGBUseReturn(resultSet), &copy, from, count);
  return (__bridge_transfer CGBUseReturn *)copy;
}

static inline NSUInteger CGBUseReturnRowHash(CGBUseReturn *resultSet, int32_t row)
{
  return CGCUseReturnRowHash(CGCUseReturnFromCGBUseReturn(resultSet), row);
}

static inline BOOL CGBUseReturnRowEqual(CGBUseReturn *resultSet1, int32_t row1, CGBUseReturn *resultSet2, int32_t row2)
{
  return CGCUseReturnRowEqual(CGCUseReturnFromCGBUseReturn(resultSet1), row1, CGCUseReturnFromCGBUseReturn(resultSet2), row2);
}

@class CGBVaultSensitiveWithValuesProc;

static inline CGBVaultSensitiveWithValuesProc *CGBVaultSensitiveWithValuesProcFromCGCVaultSensitiveWithValuesProc(CGCVaultSensitiveWithValuesProcResultSetRef resultSet)
{
  return (__bridge CGBVaultSensitiveWithValuesProc *)resultSet;
}

static inline CGCVaultSensitiveWithValuesProcResultSetRef CGCVaultSensitiveWithValuesProcFromCGBVaultSensitiveWithValuesProc(CGBVaultSensitiveWithValuesProc *resultSet)
{
  return (__bridge CGCVaultSensitiveWithValuesProcResultSetRef)resultSet;
}

static inline int32_t CGBVaultSensitiveWithValuesProcGetId(CGBVaultSensitiveWithValuesProc *resultSet, int32_t row)
{
  CGCVaultSensitiveWithValuesProcResultSetRef cResultSet = CGCVaultSensitiveWithValuesProcFromCGBVaultSensitiveWithValuesProc(resultSet);
  return CGCVaultSensitiveWithValuesProcGetId(cResultSet, row);
}

static inline NSString *_Nullable CGBVaultSensitiveWithValuesProcGetName(CGBVaultSensitiveWithValuesProc *resultSet, int32_t row)
{
  CGCVaultSensitiveWithValuesProcResultSetRef cResultSet = CGCVaultSensitiveWithValuesProcFromCGBVaultSensitiveWithValuesProc(resultSet);
  return (__bridge NSString *)CGCVaultSensitiveWithValuesProcGetName(cResultSet, row);
}

static inline NSNumber *_Nullable CGBVaultSensitiveWithValuesProcGetType(CGBVaultSensitiveWithValuesProc *resultSet, int32_t row)
{
  CGCVaultSensitiveWithValuesProcResultSetRef cResultSet = CGCVaultSensitiveWithValuesProcFromCGBVaultSensitiveWithValuesProc(resultSet);
  return CGCVaultSensitiveWithValuesProcGetTypeIsNull(cResultSet, row) ? nil : @(CGCVaultSensitiveWithValuesProcGetTypeValue(cResultSet, row));
}

static inline BOOL CGBVaultSensitiveWithValuesProcGetNameIsEncoded(CGBVaultSensitiveWithValuesProc *resultSet)
{
  return CGCVaultSensitiveWithValuesProcGetNameIsEncoded(CGCVaultSensitiveWithValuesProcFromCGBVaultSensitiveWithValuesProc(resultSet));
}

static inline void CGBVaultSensitiveWithValuesProcSetEncoding(int32_t col, BOOL encode)
{
  return CGCVaultSensitiveWithValuesProcSetEncoding(col, encode);
}

static inline int32_t CGBVaultSensitiveWithValuesProcResultCount(CGBVaultSensitiveWithValuesProc *resultSet)
{
  return CGCVaultSensitiveWithValuesProcResultCount(CGCVaultSensitiveWithValuesProcFromCGBVaultSensitiveWithValuesProc(resultSet));
}

static inline CGBVaultSensitiveWithValuesProc *CGBVaultSensitiveWithValuesProcCopy(CGBVaultSensitiveWithValuesProc *resultSet, int32_t from, int32_t count)
{
  CGCVaultSensitiveWithValuesProcResultSetRef copy;
  CGCVaultSensitiveWithValuesProcCopy(CGCVaultSensitiveWithValuesProcFromCGBVaultSensitiveWithValuesProc(resultSet), &copy, from, count);
  return (__bridge_transfer CGBVaultSensitiveWithValuesProc *)copy;
}

static inline NSUInteger CGBVaultSensitiveWithValuesProcRowHash(CGBVaultSensitiveWithValuesProc *resultSet, int32_t row)
{
  return CGCVaultSensitiveWithValuesProcRowHash(CGCVaultSensitiveWithValuesProcFromCGBVaultSensitiveWithValuesProc(resultSet), row);
}

static inline BOOL CGBVaultSensitiveWithValuesProcRowEqual(CGBVaultSensitiveWithValuesProc *resultSet1, int32_t row1, CGBVaultSensitiveWithValuesProc *resultSet2, int32_t row2)
{
  return CGCVaultSensitiveWithValuesProcRowEqual(CGCVaultSensitiveWithValuesProcFromCGBVaultSensitiveWithValuesProc(resultSet1), row1, CGCVaultSensitiveWithValuesProcFromCGBVaultSensitiveWithValuesProc(resultSet2), row2);
}

@class CGBVaultSensitiveWithNoValuesProc;

static inline CGBVaultSensitiveWithNoValuesProc *CGBVaultSensitiveWithNoValuesProcFromCGCVaultSensitiveWithNoValuesProc(CGCVaultSensitiveWithNoValuesProcResultSetRef resultSet)
{
  return (__bridge CGBVaultSensitiveWithNoValuesProc *)resultSet;
}

static inline CGCVaultSensitiveWithNoValuesProcResultSetRef CGCVaultSensitiveWithNoValuesProcFromCGBVaultSensitiveWithNoValuesProc(CGBVaultSensitiveWithNoValuesProc *resultSet)
{
  return (__bridge CGCVaultSensitiveWithNoValuesProcResultSetRef)resultSet;
}

static inline int32_t CGBVaultSensitiveWithNoValuesProcGetId(CGBVaultSensitiveWithNoValuesProc *resultSet, int32_t row)
{
  CGCVaultSensitiveWithNoValuesProcResultSetRef cResultSet = CGCVaultSensitiveWithNoValuesProcFromCGBVaultSensitiveWithNoValuesProc(resultSet);
  return CGCVaultSensitiveWithNoValuesProcGetId(cResultSet, row);
}

static inline NSString *_Nullable CGBVaultSensitiveWithNoValuesProcGetName(CGBVaultSensitiveWithNoValuesProc *resultSet, int32_t row)
{
  CGCVaultSensitiveWithNoValuesProcResultSetRef cResultSet = CGCVaultSensitiveWithNoValuesProcFromCGBVaultSensitiveWithNoValuesProc(resultSet);
  return (__bridge NSString *)CGCVaultSensitiveWithNoValuesProcGetName(cResultSet, row);
}

static inline NSNumber *_Nullable CGBVaultSensitiveWithNoValuesProcGetType(CGBVaultSensitiveWithNoValuesProc *resultSet, int32_t row)
{
  CGCVaultSensitiveWithNoValuesProcResultSetRef cResultSet = CGCVaultSensitiveWithNoValuesProcFromCGBVaultSensitiveWithNoValuesProc(resultSet);
  return CGCVaultSensitiveWithNoValuesProcGetTypeIsNull(cResultSet, row) ? nil : @(CGCVaultSensitiveWithNoValuesProcGetTypeValue(cResultSet, row));
}

static inline BOOL CGBVaultSensitiveWithNoValuesProcGetNameIsEncoded(CGBVaultSensitiveWithNoValuesProc *resultSet)
{
  return CGCVaultSensitiveWithNoValuesProcGetNameIsEncoded(CGCVaultSensitiveWithNoValuesProcFromCGBVaultSensitiveWithNoValuesProc(resultSet));
}

static inline BOOL CGBVaultSensitiveWithNoValuesProcGetTypeIsEncoded(CGBVaultSensitiveWithNoValuesProc *resultSet)
{
  return CGCVaultSensitiveWithNoValuesProcGetTypeIsEncoded(CGCVaultSensitiveWithNoValuesProcFromCGBVaultSensitiveWithNoValuesProc(resultSet));
}

static inline void CGBVaultSensitiveWithNoValuesProcSetEncoding(int32_t col, BOOL encode)
{
  return CGCVaultSensitiveWithNoValuesProcSetEncoding(col, encode);
}

static inline int32_t CGBVaultSensitiveWithNoValuesProcResultCount(CGBVaultSensitiveWithNoValuesProc *resultSet)
{
  return CGCVaultSensitiveWithNoValuesProcResultCount(CGCVaultSensitiveWithNoValuesProcFromCGBVaultSensitiveWithNoValuesProc(resultSet));
}

static inline CGBVaultSensitiveWithNoValuesProc *CGBVaultSensitiveWithNoValuesProcCopy(CGBVaultSensitiveWithNoValuesProc *resultSet, int32_t from, int32_t count)
{
  CGCVaultSensitiveWithNoValuesProcResultSetRef copy;
  CGCVaultSensitiveWithNoValuesProcCopy(CGCVaultSensitiveWithNoValuesProcFromCGBVaultSensitiveWithNoValuesProc(resultSet), &copy, from, count);
  return (__bridge_transfer CGBVaultSensitiveWithNoValuesProc *)copy;
}

static inline NSUInteger CGBVaultSensitiveWithNoValuesProcRowHash(CGBVaultSensitiveWithNoValuesProc *resultSet, int32_t row)
{
  return CGCVaultSensitiveWithNoValuesProcRowHash(CGCVaultSensitiveWithNoValuesProcFromCGBVaultSensitiveWithNoValuesProc(resultSet), row);
}

static inline BOOL CGBVaultSensitiveWithNoValuesProcRowEqual(CGBVaultSensitiveWithNoValuesProc *resultSet1, int32_t row1, CGBVaultSensitiveWithNoValuesProc *resultSet2, int32_t row2)
{
  return CGCVaultSensitiveWithNoValuesProcRowEqual(CGCVaultSensitiveWithNoValuesProcFromCGBVaultSensitiveWithNoValuesProc(resultSet1), row1, CGCVaultSensitiveWithNoValuesProcFromCGBVaultSensitiveWithNoValuesProc(resultSet2), row2);
}

@class CGBVaultUnionAllTableProc;

static inline CGBVaultUnionAllTableProc *CGBVaultUnionAllTableProcFromCGCVaultUnionAllTableProc(CGCVaultUnionAllTableProcResultSetRef resultSet)
{
  return (__bridge CGBVaultUnionAllTableProc *)resultSet;
}

static inline CGCVaultUnionAllTableProcResultSetRef CGCVaultUnionAllTableProcFromCGBVaultUnionAllTableProc(CGBVaultUnionAllTableProc *resultSet)
{
  return (__bridge CGCVaultUnionAllTableProcResultSetRef)resultSet;
}

static inline int32_t CGBVaultUnionAllTableProcGetId(CGBVaultUnionAllTableProc *resultSet, int32_t row)
{
  CGCVaultUnionAllTableProcResultSetRef cResultSet = CGCVaultUnionAllTableProcFromCGBVaultUnionAllTableProc(resultSet);
  return CGCVaultUnionAllTableProcGetId(cResultSet, row);
}

static inline NSString *_Nullable CGBVaultUnionAllTableProcGetName(CGBVaultUnionAllTableProc *resultSet, int32_t row)
{
  CGCVaultUnionAllTableProcResultSetRef cResultSet = CGCVaultUnionAllTableProcFromCGBVaultUnionAllTableProc(resultSet);
  return (__bridge NSString *)CGCVaultUnionAllTableProcGetName(cResultSet, row);
}

static inline NSNumber *_Nullable CGBVaultUnionAllTableProcGetType(CGBVaultUnionAllTableProc *resultSet, int32_t row)
{
  CGCVaultUnionAllTableProcResultSetRef cResultSet = CGCVaultUnionAllTableProcFromCGBVaultUnionAllTableProc(resultSet);
  return CGCVaultUnionAllTableProcGetTypeIsNull(cResultSet, row) ? nil : @(CGCVaultUnionAllTableProcGetTypeValue(cResultSet, row));
}

static inline BOOL CGBVaultUnionAllTableProcGetNameIsEncoded(CGBVaultUnionAllTableProc *resultSet)
{
  return CGCVaultUnionAllTableProcGetNameIsEncoded(CGCVaultUnionAllTableProcFromCGBVaultUnionAllTableProc(resultSet));
}

static inline BOOL CGBVaultUnionAllTableProcGetTypeIsEncoded(CGBVaultUnionAllTableProc *resultSet)
{
  return CGCVaultUnionAllTableProcGetTypeIsEncoded(CGCVaultUnionAllTableProcFromCGBVaultUnionAllTableProc(resultSet));
}

static inline void CGBVaultUnionAllTableProcSetEncoding(int32_t col, BOOL encode)
{
  return CGCVaultUnionAllTableProcSetEncoding(col, encode);
}

static inline int32_t CGBVaultUnionAllTableProcResultCount(CGBVaultUnionAllTableProc *resultSet)
{
  return CGCVaultUnionAllTableProcResultCount(CGCVaultUnionAllTableProcFromCGBVaultUnionAllTableProc(resultSet));
}

static inline CGBVaultUnionAllTableProc *CGBVaultUnionAllTableProcCopy(CGBVaultUnionAllTableProc *resultSet, int32_t from, int32_t count)
{
  CGCVaultUnionAllTableProcResultSetRef copy;
  CGCVaultUnionAllTableProcCopy(CGCVaultUnionAllTableProcFromCGBVaultUnionAllTableProc(resultSet), &copy, from, count);
  return (__bridge_transfer CGBVaultUnionAllTableProc *)copy;
}

static inline NSUInteger CGBVaultUnionAllTableProcRowHash(CGBVaultUnionAllTableProc *resultSet, int32_t row)
{
  return CGCVaultUnionAllTableProcRowHash(CGCVaultUnionAllTableProcFromCGBVaultUnionAllTableProc(resultSet), row);
}

static inline BOOL CGBVaultUnionAllTableProcRowEqual(CGBVaultUnionAllTableProc *resultSet1, int32_t row1, CGBVaultUnionAllTableProc *resultSet2, int32_t row2)
{
  return CGCVaultUnionAllTableProcRowEqual(CGCVaultUnionAllTableProcFromCGBVaultUnionAllTableProc(resultSet1), row1, CGCVaultUnionAllTableProcFromCGBVaultUnionAllTableProc(resultSet2), row2);
}

@class CGBVaultAliasColumnProc;

static inline CGBVaultAliasColumnProc *CGBVaultAliasColumnProcFromCGCVaultAliasColumnProc(CGCVaultAliasColumnProcResultSetRef resultSet)
{
  return (__bridge CGBVaultAliasColumnProc *)resultSet;
}

static inline CGCVaultAliasColumnProcResultSetRef CGCVaultAliasColumnProcFromCGBVaultAliasColumnProc(CGBVaultAliasColumnProc *resultSet)
{
  return (__bridge CGCVaultAliasColumnProcResultSetRef)resultSet;
}

static inline NSString *_Nullable CGBVaultAliasColumnProcGetAliasName(CGBVaultAliasColumnProc *resultSet, int32_t row)
{
  CGCVaultAliasColumnProcResultSetRef cResultSet = CGCVaultAliasColumnProcFromCGBVaultAliasColumnProc(resultSet);
  return (__bridge NSString *)CGCVaultAliasColumnProcGetAliasName(cResultSet, row);
}

static inline BOOL CGBVaultAliasColumnProcGetAliasNameIsEncoded(CGBVaultAliasColumnProc *resultSet)
{
  return CGCVaultAliasColumnProcGetAliasNameIsEncoded(CGCVaultAliasColumnProcFromCGBVaultAliasColumnProc(resultSet));
}

static inline void CGBVaultAliasColumnProcSetEncoding(int32_t col, BOOL encode)
{
  return CGCVaultAliasColumnProcSetEncoding(col, encode);
}

static inline int32_t CGBVaultAliasColumnProcResultCount(CGBVaultAliasColumnProc *resultSet)
{
  return CGCVaultAliasColumnProcResultCount(CGCVaultAliasColumnProcFromCGBVaultAliasColumnProc(resultSet));
}

static inline CGBVaultAliasColumnProc *CGBVaultAliasColumnProcCopy(CGBVaultAliasColumnProc *resultSet, int32_t from, int32_t count)
{
  CGCVaultAliasColumnProcResultSetRef copy;
  CGCVaultAliasColumnProcCopy(CGCVaultAliasColumnProcFromCGBVaultAliasColumnProc(resultSet), &copy, from, count);
  return (__bridge_transfer CGBVaultAliasColumnProc *)copy;
}

static inline NSUInteger CGBVaultAliasColumnProcRowHash(CGBVaultAliasColumnProc *resultSet, int32_t row)
{
  return CGCVaultAliasColumnProcRowHash(CGCVaultAliasColumnProcFromCGBVaultAliasColumnProc(resultSet), row);
}

static inline BOOL CGBVaultAliasColumnProcRowEqual(CGBVaultAliasColumnProc *resultSet1, int32_t row1, CGBVaultAliasColumnProc *resultSet2, int32_t row2)
{
  return CGCVaultAliasColumnProcRowEqual(CGCVaultAliasColumnProcFromCGBVaultAliasColumnProc(resultSet1), row1, CGCVaultAliasColumnProcFromCGBVaultAliasColumnProc(resultSet2), row2);
}

@class CGBVaultAliasColumnNameProc;

static inline CGBVaultAliasColumnNameProc *CGBVaultAliasColumnNameProcFromCGCVaultAliasColumnNameProc(CGCVaultAliasColumnNameProcResultSetRef resultSet)
{
  return (__bridge CGBVaultAliasColumnNameProc *)resultSet;
}

static inline CGCVaultAliasColumnNameProcResultSetRef CGCVaultAliasColumnNameProcFromCGBVaultAliasColumnNameProc(CGBVaultAliasColumnNameProc *resultSet)
{
  return (__bridge CGCVaultAliasColumnNameProcResultSetRef)resultSet;
}

static inline NSString *_Nullable CGBVaultAliasColumnNameProcGetAliasName(CGBVaultAliasColumnNameProc *resultSet, int32_t row)
{
  CGCVaultAliasColumnNameProcResultSetRef cResultSet = CGCVaultAliasColumnNameProcFromCGBVaultAliasColumnNameProc(resultSet);
  return (__bridge NSString *)CGCVaultAliasColumnNameProcGetAliasName(cResultSet, row);
}

static inline BOOL CGBVaultAliasColumnNameProcGetAliasNameIsEncoded(CGBVaultAliasColumnNameProc *resultSet)
{
  return CGCVaultAliasColumnNameProcGetAliasNameIsEncoded(CGCVaultAliasColumnNameProcFromCGBVaultAliasColumnNameProc(resultSet));
}

static inline void CGBVaultAliasColumnNameProcSetEncoding(int32_t col, BOOL encode)
{
  return CGCVaultAliasColumnNameProcSetEncoding(col, encode);
}

static inline int32_t CGBVaultAliasColumnNameProcResultCount(CGBVaultAliasColumnNameProc *resultSet)
{
  return CGCVaultAliasColumnNameProcResultCount(CGCVaultAliasColumnNameProcFromCGBVaultAliasColumnNameProc(resultSet));
}

static inline CGBVaultAliasColumnNameProc *CGBVaultAliasColumnNameProcCopy(CGBVaultAliasColumnNameProc *resultSet, int32_t from, int32_t count)
{
  CGCVaultAliasColumnNameProcResultSetRef copy;
  CGCVaultAliasColumnNameProcCopy(CGCVaultAliasColumnNameProcFromCGBVaultAliasColumnNameProc(resultSet), &copy, from, count);
  return (__bridge_transfer CGBVaultAliasColumnNameProc *)copy;
}

static inline NSUInteger CGBVaultAliasColumnNameProcRowHash(CGBVaultAliasColumnNameProc *resultSet, int32_t row)
{
  return CGCVaultAliasColumnNameProcRowHash(CGCVaultAliasColumnNameProcFromCGBVaultAliasColumnNameProc(resultSet), row);
}

static inline BOOL CGBVaultAliasColumnNameProcRowEqual(CGBVaultAliasColumnNameProc *resultSet1, int32_t row1, CGBVaultAliasColumnNameProc *resultSet2, int32_t row2)
{
  return CGCVaultAliasColumnNameProcRowEqual(CGCVaultAliasColumnNameProcFromCGBVaultAliasColumnNameProc(resultSet1), row1, CGCVaultAliasColumnNameProcFromCGBVaultAliasColumnNameProc(resultSet2), row2);
}

@class CGBOutObject;

static inline CGBOutObject *CGBOutObjectFromCGCOutObject(CGCOutObjectResultSetRef resultSet)
{
  return (__bridge CGBOutObject *)resultSet;
}

static inline CGCOutObjectResultSetRef CGCOutObjectFromCGBOutObject(CGBOutObject *resultSet)
{
  return (__bridge CGCOutObjectResultSetRef)resultSet;
}

static inline NSObject * CGBOutObjectGetO(CGBOutObject *resultSet)
{
  CGCOutObjectResultSetRef cResultSet = CGCOutObjectFromCGBOutObject(resultSet);
  return (__bridge NSObject *)CGCOutObjectGetO(cResultSet);
}

static inline int32_t CGBOutObjectResultCount(CGBOutObject *resultSet)
{
  return CGCOutObjectResultCount(CGCOutObjectFromCGBOutObject(resultSet));
}

static inline CGBOutObject *CGBOutObjectCopy(CGBOutObject *resultSet)
{
  CGCOutObjectResultSetRef copy;
  CGCOutObjectCopy(CGCOutObjectFromCGBOutObject(resultSet), &copy);
  return (__bridge_transfer CGBOutObject *)copy;
}

static inline NSUInteger CGBOutObjectHash(CGBOutObject *resultSet)
{
  return CGCOutObjectHash(CGCOutObjectFromCGBOutObject(resultSet));
}

static inline BOOL CGBOutObjectEqual(CGBOutObject *resultSet1, CGBOutObject *resultSet2)
{
  return CGCOutObjectEqual(CGCOutObjectFromCGBOutObject(resultSet1), CGCOutObjectFromCGBOutObject(resultSet2));
}

@class CGBFragTest;

static inline CGCFragTestResultSetRef CGCExtFromCGBExt(CGBFragTest *resultSet)
{
  return (__bridge CGCFragTestResultSetRef)resultSet;
}

static inline int32_t CGBExtGetId(CGBFragTest *resultSet, int32_t row)
{
  CGCFragTestResultSetRef cResultSet = CGCExtFromCGBExt(resultSet);
  return CGCExtGetId(cResultSet, row);
}

static inline NSNumber *_Nullable CGBExtGetF2(CGBFragTest *resultSet, int32_t row)
{
  CGCFragTestResultSetRef cResultSet = CGCExtFromCGBExt(resultSet);
  return CGCExtGetF2IsNull(cResultSet, row) ? nil : @(CGCExtGetF2Value(cResultSet, row));
}

static inline BOOL CGBExtGetF2IsEncoded(CGBFragTest *resultSet)
{
  return CGBFragTestGetF2IsEncoded(resultSet);
}

static inline void CGBExtSetEncoding(int32_t col, BOOL encode)
{
  return CGCExtSetEncoding(col, encode);
}

static inline int32_t CGBExtResultCount(CGBFragTest *resultSet)
{
  return CGCExtResultCount(CGCExtFromCGBExt(resultSet));
}

static inline CGBFragTest *CGBExtCopy(CGBFragTest *resultSet, int32_t from, int32_t count)
{
  CGCFragTestResultSetRef copy;
  CGCExtCopy(CGCExtFromCGBExt(resultSet), &copy, from, count);
  return (__bridge_transfer CGBFragTest *)copy;
}

@class CGBFragTest;

static inline CGCFragTestResultSetRef CGCExt2FromCGBExt2(CGBFragTest *resultSet)
{
  return (__bridge CGCFragTestResultSetRef)resultSet;
}

static inline int32_t CGBExt2GetId(CGBFragTest *resultSet, int32_t row)
{
  CGCFragTestResultSetRef cResultSet = CGCExt2FromCGBExt2(resultSet);
  return CGCExt2GetId(cResultSet, row);
}

static inline NSNumber *_Nullable CGBExt2GetF3(CGBFragTest *resultSet, int32_t row)
{
  CGCFragTestResultSetRef cResultSet = CGCExt2FromCGBExt2(resultSet);
  return CGCExt2GetF3IsNull(cResultSet, row) ? nil : @(CGCExt2GetF3Value(cResultSet, row));
}

static inline int32_t CGBExt2ResultCount(CGBFragTest *resultSet)
{
  return CGCExt2ResultCount(CGCExt2FromCGBExt2(resultSet));
}

static inline CGBFragTest *CGBExt2Copy(CGBFragTest *resultSet, int32_t from, int32_t count)
{
  CGCFragTestResultSetRef copy;
  CGCExt2Copy(CGCExt2FromCGBExt2(resultSet), &copy, from, count);
  return (__bridge_transfer CGBFragTest *)copy;
}

NS_ASSUME_NONNULL_END
