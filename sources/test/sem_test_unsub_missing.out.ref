{stmt_list}: err

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_partition_create () CREATE OBJECT<partitioning> NOT NULL;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<partitioning> notnull create_func
    | {name cql_partition_create}: object<partitioning> notnull create_func
    | {func_params_return}
      | {create_data_type}: object<partitioning> notnull create_func
        | {notnull}: object<partitioning> notnull
          | {type_object}: object<partitioning>
            | {name partitioning}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_partition_cursor (p OBJECT<partitioning> NOT NULL, key CURSOR, value CURSOR) BOOL NOT NULL;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: bool notnull
    | {name cql_partition_cursor}: bool notnull
    | {func_params_return}
      | {params}: ok
      | | {param}: p: object<partitioning> notnull variable in
      | | | {param_detail}: p: object<partitioning> notnull variable in
      | |   | {name p}: p: object<partitioning> notnull variable in
      | |   | {notnull}: object<partitioning> notnull
      | |     | {type_object}: object<partitioning>
      | |       | {name partitioning}
      | | {params}
      |   | {param}: key: cursor variable in
      |   | | {param_detail}: key: cursor variable in
      |   |   | {name key}: key: cursor variable in
      |   |   | {type_cursor}: cursor
      |   | {params}
      |     | {param}: value: cursor variable in
      |       | {param_detail}: value: cursor variable in
      |         | {name value}: value: cursor variable in
      |         | {type_cursor}: cursor
      | {notnull}: bool notnull
        | {type_bool}: bool

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_extract_partition (p OBJECT<partitioning> NOT NULL, key CURSOR) CREATE OBJECT NOT NULL;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object notnull create_func
    | {name cql_extract_partition}: object notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: p: object<partitioning> notnull variable in
      | | | {param_detail}: p: object<partitioning> notnull variable in
      | |   | {name p}: p: object<partitioning> notnull variable in
      | |   | {notnull}: object<partitioning> notnull
      | |     | {type_object}: object<partitioning>
      | |       | {name partitioning}
      | | {params}
      |   | {param}: key: cursor variable in
      |     | {param_detail}: key: cursor variable in
      |       | {name key}: key: cursor variable in
      |       | {type_cursor}: cursor
      | {create_data_type}: object notnull create_func
        | {notnull}: object notnull
          | {type_object}: object

The statement ending at line XXXX

CREATE TABLE foo(
  id INTEGER
);

  {create_table_stmt}: foo: { id: integer } validated
  | {create_table_name_flags}
  | | {table_flags_attrs}
  | | | {int 0}
  | | {name foo}
  | {col_key_list}
    | {col_def}: id: integer
      | {col_def_type_attrs}: ok
        | {col_def_name_type}
          | {name id}
          | {type_int}: integer

The statement ending at line XXXX

@UNSUB(2, foo);

  {schema_unsub_stmt}: ok
  | {version_annotation}
    | {int 2}
    | {name foo}

The statement ending at line XXXX

@PREVIOUS_SCHEMA;

  {previous_schema_stmt}: ok

The statement ending at line XXXX

CREATE TABLE foo(
  id INTEGER
);

  {create_table_stmt}: foo: { id: integer }
  | {create_table_name_flags}
  | | {table_flags_attrs}
  | | | {int 0}
  | | {name foo}
  | {col_key_list}
    | {col_def}: id: integer
      | {col_def_type_attrs}: ok
        | {col_def_name_type}
          | {name id}
          | {type_int}: integer

The statement ending at line XXXX

@UNSUB(2, foo);

  {schema_unsub_stmt}: ok
  | {version_annotation}
    | {int 2}
    | {name foo}

The statement ending at line XXXX

@RESUB(3, foo);

test/sem_test_unsub_missing.sql:XXXX:1: error: in schema_resub_stmt : CQL0476: previous schema had more unsub/resub directives than the current schema

  {schema_resub_stmt}: err
  | {version_annotation}
    | {int 3}
    | {name foo}

The statement ending at line XXXX

@UNSUB(3, foo);

  {schema_unsub_stmt}: ok
  | {version_annotation}
    | {int 3}
    | {name foo}

